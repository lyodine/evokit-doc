Search.setIndex({"alltitles": {"Analyse Results": [[4, "Analyse-Results"]], "Contents:": [[5, null], [6, null]], "Define the Algorithm": [[4, "Define-the-Algorithm"]], "Evaluator": [[4, "Evaluator"]], "EvoKit Documentation": [[6, "evokit-documentation"]], "Example: Symbolic Regression": [[3, "Example:-Symbolic-Regression"]], "Indices and tables": [[6, "indices-and-tables"]], "Initialise Population": [[4, "Initialise-Population"]], "Installation": [[6, "installation"]], "Introduction": [[5, "introduction"]], "Module contents": [[0, "module-evokit"], [1, "module-evokit.core"], [2, "module-evokit.evolvables"]], "OneMax Example": [[4, "OneMax-Example"]], "Put Everything Together": [[4, "Put-Everything-Together"]], "Representation": [[4, "Representation"]], "Run the Algorithm": [[4, "Run-the-Algorithm"]], "Stock Selectors": [[5, "stock-selectors"]], "Submodules": [[1, "submodules"], [2, "submodules"]], "Subpackages": [[0, "subpackages"]], "The Genome Suite": [[5, "the-genome-suite"]], "Variator": [[4, "Variator"]], "evokit": [[7, "evokit"]], "evokit package": [[0, "evokit-package"]], "evokit.core package": [[1, "evokit-core-package"]], "evokit.core.accountant module": [[1, "module-evokit.core.accountant"]], "evokit.core.controller module": [[1, "module-evokit.core.controller"]], "evokit.core.evaluator module": [[1, "module-evokit.core.evaluator"]], "evokit.core.population module": [[1, "module-evokit.core.population"]], "evokit.core.selector module": [[1, "module-evokit.core.selector"]], "evokit.core.variator module": [[1, "module-evokit.core.variator"]], "evokit.evolvables package": [[2, "evokit-evolvables-package"]], "evokit.evolvables.binstring module": [[2, "module-evokit.evolvables.binstring"]], "evokit.evolvables.funcs module": [[2, "module-evokit.evolvables.funcs"]], "evokit.evolvables.gp module": [[2, "module-evokit.evolvables.gp"]], "evokit.evolvables.gp_visualiser module": [[2, "evokit-evolvables-gp-visualiser-module"]], "evokit.evolvables.lgp module": [[2, "module-evokit.evolvables.lgp"]]}, "docnames": ["evokit", "evokit.core", "evokit.evolvables", "guides/examples/e_gp", "guides/examples/e_onemax", "guides/index", "index", "modules"], "envversion": {"nbsphinx": 4, "sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["evokit.rst", "evokit.core.rst", "evokit.evolvables.rst", "guides/examples/e_gp.ipynb", "guides/examples/e_onemax.ipynb", "guides/index.rst", "index.rst", "modules.rst"], "indexentries": {"__call__() (evokit.evolvables.gp.expression method)": [[2, "evokit.evolvables.gp.Expression.__call__", false]], "__init__() (evokit.core.accountant.accountant method)": [[1, "evokit.core.accountant.Accountant.__init__", false]], "__init__() (evokit.core.controller.controller method)": [[1, "evokit.core.controller.Controller.__init__", false]], "__init__() (evokit.core.controller.linearcontroller method)": [[1, "evokit.core.controller.LinearController.__init__", false]], "__init__() (evokit.core.controller.simplelinearcontroller method)": [[1, "evokit.core.controller.SimpleLinearController.__init__", false]], "__init__() (evokit.core.evaluator.evaluator method)": [[1, "evokit.core.evaluator.Evaluator.__init__", false]], "__init__() (evokit.core.population.abstractcollection method)": [[1, "evokit.core.population.AbstractCollection.__init__", false]], "__init__() (evokit.core.population.individual method)": [[1, "evokit.core.population.Individual.__init__", false]], "__init__() (evokit.core.population.population method)": [[1, "evokit.core.population.Population.__init__", false]], "__init__() (evokit.core.selector.elitistsimpleselector method)": [[1, "evokit.core.selector.ElitistSimpleSelector.__init__", false]], "__init__() (evokit.core.selector.nullselector method)": [[1, "evokit.core.selector.NullSelector.__init__", false]], "__init__() (evokit.core.selector.selector method)": [[1, "evokit.core.selector.Selector.__init__", false]], "__init__() (evokit.core.selector.simpleselector method)": [[1, "evokit.core.selector.SimpleSelector.__init__", false]], "__init__() (evokit.core.selector.tournamentselector method)": [[1, "evokit.core.selector.TournamentSelector.__init__", false]], "__init__() (evokit.core.variator.nullvariator method)": [[1, "evokit.core.variator.NullVariator.__init__", false]], "__init__() (evokit.core.variator.variator method)": [[1, "evokit.core.variator.Variator.__init__", false]], "__init__() (evokit.evolvables.binstring.binarystring method)": [[2, "evokit.evolvables.binstring.BinaryString.__init__", false]], "__init__() (evokit.evolvables.binstring.mutatebits method)": [[2, "evokit.evolvables.binstring.MutateBits.__init__", false]], "__init__() (evokit.evolvables.gp.crossoversubtree method)": [[2, "evokit.evolvables.gp.CrossoverSubtree.__init__", false]], "__init__() (evokit.evolvables.gp.expression method)": [[2, "evokit.evolvables.gp.Expression.__init__", false]], "__init__() (evokit.evolvables.gp.expressionfactory method)": [[2, "evokit.evolvables.gp.ExpressionFactory.__init__", false]], "__init__() (evokit.evolvables.gp.mutatenode method)": [[2, "evokit.evolvables.gp.MutateNode.__init__", false]], "__init__() (evokit.evolvables.gp.mutatesubtree method)": [[2, "evokit.evolvables.gp.MutateSubtree.__init__", false]], "__init__() (evokit.evolvables.gp.penalisenodecount method)": [[2, "evokit.evolvables.gp.PenaliseNodeCount.__init__", false]], "__init__() (evokit.evolvables.gp.program method)": [[2, "evokit.evolvables.gp.Program.__init__", false]], "__init__() (evokit.evolvables.gp.programfactory method)": [[2, "evokit.evolvables.gp.ProgramFactory.__init__", false]], "__init__() (evokit.evolvables.gp.symbol method)": [[2, "evokit.evolvables.gp.Symbol.__init__", false]], "__init__() (evokit.evolvables.gp.symbolicevaluator method)": [[2, "evokit.evolvables.gp.SymbolicEvaluator.__init__", false]], "__init__() (evokit.evolvables.lgp.conditional method)": [[2, "evokit.evolvables.lgp.Conditional.__init__", false]], "__init__() (evokit.evolvables.lgp.for method)": [[2, "evokit.evolvables.lgp.For.__init__", false]], "__init__() (evokit.evolvables.lgp.if method)": [[2, "evokit.evolvables.lgp.If.__init__", false]], "__init__() (evokit.evolvables.lgp.label method)": [[2, "evokit.evolvables.lgp.Label.__init__", false]], "__init__() (evokit.evolvables.lgp.linearprogram method)": [[2, "evokit.evolvables.lgp.LinearProgram.__init__", false]], "__init__() (evokit.evolvables.lgp.operation method)": [[2, "evokit.evolvables.lgp.Operation.__init__", false]], "__init__() (evokit.evolvables.lgp.structnextline method)": [[2, "evokit.evolvables.lgp.StructNextLine.__init__", false]], "__init__() (evokit.evolvables.lgp.structoverlines method)": [[2, "evokit.evolvables.lgp.StructOverLines.__init__", false]], "__init__() (evokit.evolvables.lgp.structuntillabel method)": [[2, "evokit.evolvables.lgp.StructUntilLabel.__init__", false]], "__init__() (evokit.evolvables.lgp.valuerange method)": [[2, "evokit.evolvables.lgp.ValueRange.__init__", false]], "__init__() (evokit.evolvables.lgp.while method)": [[2, "evokit.evolvables.lgp.While.__init__", false]], "__new__() (evokit.core.controller.controller static method)": [[1, "evokit.core.controller.Controller.__new__", false]], "__new__() (evokit.core.evaluator.evaluator static method)": [[1, "evokit.core.evaluator.Evaluator.__new__", false]], "__new__() (evokit.core.population.individual static method)": [[1, "evokit.core.population.Individual.__new__", false]], "__new__() (evokit.core.variator.variator static method)": [[1, "evokit.core.variator.Variator.__new__", false]], "abstractcollection (class in evokit.core.population)": [[1, "evokit.core.population.AbstractCollection", false]], "accountant (class in evokit.core.accountant)": [[1, "evokit.core.accountant.Accountant", false]], "accountantrecord (class in evokit.core.accountant)": [[1, "evokit.core.accountant.AccountantRecord", false]], "accountants (evokit.core.controller.controller attribute)": [[1, "evokit.core.controller.Controller.accountants", false]], "add() (in module evokit.evolvables.funcs)": [[2, "evokit.evolvables.funcs.add", false]], "add() (in module evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.add", false]], "append() (evokit.core.population.abstractcollection method)": [[1, "evokit.core.population.AbstractCollection.append", false]], "args (evokit.evolvables.lgp.operation attribute)": [[2, "evokit.evolvables.lgp.Operation.args", false]], "avg() (in module evokit.evolvables.funcs)": [[2, "evokit.evolvables.funcs.avg", false]], "best() (evokit.core.population.population method)": [[1, "evokit.core.population.Population.best", false]], "binarystring (class in evokit.evolvables.binstring)": [[2, "evokit.evolvables.binstring.BinaryString", false]], "build() (evokit.evolvables.gp.expressionfactory method)": [[2, "evokit.evolvables.gp.ExpressionFactory.build", false]], "build() (evokit.evolvables.gp.programfactory method)": [[2, "evokit.evolvables.gp.ProgramFactory.build", false]], "check() (evokit.evolvables.lgp.linearprogram method)": [[2, "evokit.evolvables.lgp.LinearProgram.check", false]], "clear() (evokit.evolvables.binstring.binarystring method)": [[2, "evokit.evolvables.binstring.BinaryString.clear", false]], "coarity (evokit.evolvables.lgp.linearprogram attribute)": [[2, "evokit.evolvables.lgp.LinearProgram.coarity", false]], "conditional (class in evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.Conditional", false]], "controller (class in evokit.core.controller)": [[1, "evokit.core.controller.Controller", false]], "copy() (evokit.core.population.individual method)": [[1, "evokit.core.population.Individual.copy", false]], "copy() (evokit.core.population.population method)": [[1, "evokit.core.population.Population.copy", false]], "copy() (evokit.evolvables.binstring.binarystring method)": [[2, "evokit.evolvables.binstring.BinaryString.copy", false]], "copy() (evokit.evolvables.gp.expression method)": [[2, "evokit.evolvables.gp.Expression.copy", false]], "copy() (evokit.evolvables.gp.program method)": [[2, "evokit.evolvables.gp.Program.copy", false]], "cos() (in module evokit.evolvables.funcs)": [[2, "evokit.evolvables.funcs.cos", false]], "countbits (class in evokit.evolvables.binstring)": [[2, "evokit.evolvables.binstring.CountBits", false]], "crossoversubtree (class in evokit.evolvables.gp)": [[2, "evokit.evolvables.gp.CrossoverSubtree", false]], "div() (in module evokit.evolvables.funcs)": [[2, "evokit.evolvables.funcs.div", false]], "draw() (evokit.core.population.abstractcollection method)": [[1, "evokit.core.population.AbstractCollection.draw", false]], "draw_primitive() (evokit.evolvables.gp.expressionfactory method)": [[2, "evokit.evolvables.gp.ExpressionFactory.draw_primitive", false]], "elitist() (in module evokit.core.selector)": [[1, "evokit.core.selector.Elitist", false]], "elitistsimpleselector (class in evokit.core.selector)": [[1, "evokit.core.selector.ElitistSimpleSelector", false]], "evaluate() (evokit.core.evaluator.evaluator method)": [[1, "evokit.core.evaluator.Evaluator.evaluate", false]], "evaluate() (evokit.core.evaluator.nullevaluator method)": [[1, "evokit.core.evaluator.NullEvaluator.evaluate", false]], "evaluate() (evokit.evolvables.binstring.countbits method)": [[2, "evokit.evolvables.binstring.CountBits.evaluate", false]], "evaluate() (evokit.evolvables.gp.penalisenodecount method)": [[2, "evokit.evolvables.gp.PenaliseNodeCount.evaluate", false]], "evaluate() (evokit.evolvables.gp.symbolicevaluator method)": [[2, "evokit.evolvables.gp.SymbolicEvaluator.evaluate", false]], "evaluate_population() (evokit.core.evaluator.evaluator method)": [[1, "evokit.core.evaluator.Evaluator.evaluate_population", false]], "evaluator (class in evokit.core.evaluator)": [[1, "evokit.core.evaluator.Evaluator", false]], "event (evokit.core.accountant.accountantrecord attribute)": [[1, "evokit.core.accountant.AccountantRecord.event", false]], "events (evokit.core.controller.controller attribute)": [[1, "evokit.core.controller.Controller.events", false]], "evokit": [[0, "module-evokit", false]], "evokit.core": [[1, "module-evokit.core", false]], "evokit.core.accountant": [[1, "module-evokit.core.accountant", false]], "evokit.core.controller": [[1, "module-evokit.core.controller", false]], "evokit.core.evaluator": [[1, "module-evokit.core.evaluator", false]], "evokit.core.population": [[1, "module-evokit.core.population", false]], "evokit.core.selector": [[1, "module-evokit.core.selector", false]], "evokit.core.variator": [[1, "module-evokit.core.variator", false]], "evokit.evolvables": [[2, "module-evokit.evolvables", false]], "evokit.evolvables.binstring": [[2, "module-evokit.evolvables.binstring", false]], "evokit.evolvables.funcs": [[2, "module-evokit.evolvables.funcs", false]], "evokit.evolvables.gp": [[2, "module-evokit.evolvables.gp", false]], "evokit.evolvables.lgp": [[2, "module-evokit.evolvables.lgp", false]], "expression (class in evokit.evolvables.gp)": [[2, "evokit.evolvables.gp.Expression", false]], "expressionfactory (class in evokit.evolvables.gp)": [[2, "evokit.evolvables.gp.ExpressionFactory", false]], "extend() (evokit.core.population.abstractcollection method)": [[1, "evokit.core.population.AbstractCollection.extend", false]], "factory (evokit.evolvables.gp.expression property)": [[2, "evokit.evolvables.gp.Expression.factory", false]], "fitness (evokit.core.population.individual property)": [[1, "evokit.core.population.Individual.fitness", false]], "flip() (evokit.evolvables.binstring.binarystring method)": [[2, "evokit.evolvables.binstring.BinaryString.flip", false]], "for (class in evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.For", false]], "function (evokit.evolvables.lgp.operation attribute)": [[2, "evokit.evolvables.lgp.Operation.function", false]], "generation (evokit.core.accountant.accountantrecord attribute)": [[1, "evokit.core.accountant.AccountantRecord.generation", false]], "generation (evokit.core.controller.controller attribute)": [[1, "evokit.core.controller.Controller.generation", false]], "get() (evokit.evolvables.binstring.binarystring method)": [[2, "evokit.evolvables.binstring.BinaryString.get", false]], "get_output_values() (evokit.evolvables.lgp.linearprogram method)": [[2, "evokit.evolvables.lgp.LinearProgram.get_output_values", false]], "has_fitness() (evokit.core.population.individual method)": [[1, "evokit.core.population.Individual.has_fitness", false]], "if (class in evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.If", false]], "individual (class in evokit.core.population)": [[1, "evokit.core.population.Individual", false]], "instruction (class in evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.Instruction", false]], "is_registered() (evokit.core.accountant.accountant method)": [[1, "evokit.core.accountant.Accountant.is_registered", false]], "label (class in evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.Label", false]], "less() (in module evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.less", false]], "lim() (in module evokit.evolvables.funcs)": [[2, "evokit.evolvables.funcs.lim", false]], "linearcontroller (class in evokit.core.controller)": [[1, "evokit.core.controller.LinearController", false]], "linearprogram (class in evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.LinearProgram", false]], "max (evokit.evolvables.lgp.valuerange attribute)": [[2, "evokit.evolvables.lgp.ValueRange.max", false]], "min (evokit.evolvables.lgp.valuerange attribute)": [[2, "evokit.evolvables.lgp.ValueRange.min", false]], "module": [[0, "module-evokit", false], [1, "module-evokit.core", false], [1, "module-evokit.core.accountant", false], [1, "module-evokit.core.controller", false], [1, "module-evokit.core.evaluator", false], [1, "module-evokit.core.population", false], [1, "module-evokit.core.selector", false], [1, "module-evokit.core.variator", false], [2, "module-evokit.evolvables", false], [2, "module-evokit.evolvables.binstring", false], [2, "module-evokit.evolvables.funcs", false], [2, "module-evokit.evolvables.gp", false], [2, "module-evokit.evolvables.lgp", false]], "mul() (in module evokit.evolvables.funcs)": [[2, "evokit.evolvables.funcs.mul", false]], "mutatebits (class in evokit.evolvables.binstring)": [[2, "evokit.evolvables.binstring.MutateBits", false]], "mutatenode (class in evokit.evolvables.gp)": [[2, "evokit.evolvables.gp.MutateNode", false]], "mutatesubtree (class in evokit.evolvables.gp)": [[2, "evokit.evolvables.gp.MutateSubtree", false]], "nodes() (evokit.evolvables.gp.expression method)": [[2, "evokit.evolvables.gp.Expression.nodes", false]], "nullevaluator (class in evokit.core.evaluator)": [[1, "evokit.core.evaluator.NullEvaluator", false]], "nullselector (class in evokit.core.selector)": [[1, "evokit.core.selector.NullSelector", false]], "nullvariator (class in evokit.core.variator)": [[1, "evokit.core.variator.NullVariator", false]], "operation (class in evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.Operation", false]], "penalisenodecount (class in evokit.evolvables.gp)": [[2, "evokit.evolvables.gp.PenaliseNodeCount", false]], "populate() (evokit.core.population.abstractcollection method)": [[1, "evokit.core.population.AbstractCollection.populate", false]], "population (class in evokit.core.population)": [[1, "evokit.core.population.Population", false]], "pos (evokit.evolvables.gp.symbol attribute)": [[2, "evokit.evolvables.gp.Symbol.pos", false]], "primitive_by_arity() (evokit.evolvables.gp.expressionfactory method)": [[2, "evokit.evolvables.gp.ExpressionFactory.primitive_by_arity", false]], "program (class in evokit.evolvables.gp)": [[2, "evokit.evolvables.gp.Program", false]], "programfactory (class in evokit.evolvables.gp)": [[2, "evokit.evolvables.gp.ProgramFactory", false]], "publish() (evokit.core.accountant.accountant method)": [[1, "evokit.core.accountant.Accountant.publish", false]], "random() (evokit.evolvables.binstring.binarystring static method)": [[2, "evokit.evolvables.binstring.BinaryString.random", false]], "register() (evokit.core.controller.controller method)": [[1, "evokit.core.controller.Controller.register", false]], "reset_fitness() (evokit.core.population.individual method)": [[1, "evokit.core.population.Individual.reset_fitness", false]], "reset_fitness() (evokit.core.population.population method)": [[1, "evokit.core.population.Population.reset_fitness", false]], "retain_fitness (evokit.core.evaluator.evaluator attribute)": [[1, "evokit.core.evaluator.Evaluator.retain_fitness", false]], "run() (evokit.evolvables.lgp.linearprogram method)": [[2, "evokit.evolvables.lgp.LinearProgram.run", false]], "run_instruction() (evokit.evolvables.lgp.linearprogram method)": [[2, "evokit.evolvables.lgp.LinearProgram.run_instruction", false]], "runner (class in evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.Runner", false]], "select() (evokit.core.selector.nullselector method)": [[1, "evokit.core.selector.NullSelector.select", false]], "select() (evokit.core.selector.selector method)": [[1, "evokit.core.selector.Selector.select", false]], "select() (evokit.core.selector.simpleselector method)": [[1, "evokit.core.selector.SimpleSelector.select", false]], "select() (evokit.core.selector.tournamentselector method)": [[1, "evokit.core.selector.TournamentSelector.select", false]], "select_to_many() (evokit.core.selector.elitistsimpleselector method)": [[1, "evokit.core.selector.ElitistSimpleSelector.select_to_many", false]], "select_to_many() (evokit.core.selector.nullselector method)": [[1, "evokit.core.selector.NullSelector.select_to_many", false]], "select_to_many() (evokit.core.selector.selector method)": [[1, "evokit.core.selector.Selector.select_to_many", false]], "select_to_population() (evokit.core.selector.selector method)": [[1, "evokit.core.selector.Selector.select_to_population", false]], "selector (class in evokit.core.selector)": [[1, "evokit.core.selector.Selector", false]], "set() (evokit.evolvables.binstring.binarystring method)": [[2, "evokit.evolvables.binstring.BinaryString.set", false]], "simplelinearcontroller (class in evokit.core.controller)": [[1, "evokit.core.controller.SimpleLinearController", false]], "simpleselector (class in evokit.core.selector)": [[1, "evokit.core.selector.SimpleSelector", false]], "sin() (in module evokit.evolvables.funcs)": [[2, "evokit.evolvables.funcs.sin", false]], "sort() (evokit.core.population.population method)": [[1, "evokit.core.population.Population.sort", false]], "step() (evokit.core.controller.controller method)": [[1, "evokit.core.controller.Controller.step", false]], "step() (evokit.core.controller.linearcontroller method)": [[1, "evokit.core.controller.LinearController.step", false]], "step() (evokit.core.controller.simplelinearcontroller method)": [[1, "evokit.core.controller.SimpleLinearController.step", false]], "structnextline (class in evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.StructNextLine", false]], "structoverlines (class in evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.StructOverLines", false]], "structuntillabel (class in evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.StructUntilLabel", false]], "sub() (in module evokit.evolvables.funcs)": [[2, "evokit.evolvables.funcs.sub", false]], "sub() (in module evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.sub", false]], "subject (evokit.core.accountant.accountant attribute)": [[1, "evokit.core.accountant.Accountant.subject", false]], "symbol (class in evokit.evolvables.gp)": [[2, "evokit.evolvables.gp.Symbol", false]], "symbolicevaluator (class in evokit.evolvables.gp)": [[2, "evokit.evolvables.gp.SymbolicEvaluator", false]], "tan() (in module evokit.evolvables.funcs)": [[2, "evokit.evolvables.funcs.tan", false]], "target (evokit.evolvables.lgp.operation attribute)": [[2, "evokit.evolvables.lgp.Operation.target", false]], "tournamentselector (class in evokit.core.selector)": [[1, "evokit.core.selector.TournamentSelector", false]], "update() (evokit.core.controller.controller method)": [[1, "evokit.core.controller.Controller.update", false]], "value (evokit.core.accountant.accountantrecord attribute)": [[1, "evokit.core.accountant.AccountantRecord.value", false]], "valuerange (class in evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.ValueRange", false]], "variator (class in evokit.core.variator)": [[1, "evokit.core.variator.Variator", false]], "vary() (evokit.core.variator.nullvariator method)": [[1, "evokit.core.variator.NullVariator.vary", false]], "vary() (evokit.core.variator.variator method)": [[1, "evokit.core.variator.Variator.vary", false]], "vary() (evokit.evolvables.binstring.mutatebits method)": [[2, "evokit.evolvables.binstring.MutateBits.vary", false]], "vary() (evokit.evolvables.gp.crossoversubtree method)": [[2, "evokit.evolvables.gp.CrossoverSubtree.vary", false]], "vary() (evokit.evolvables.gp.mutatenode method)": [[2, "evokit.evolvables.gp.MutateNode.vary", false]], "vary() (evokit.evolvables.gp.mutatesubtree method)": [[2, "evokit.evolvables.gp.MutateSubtree.vary", false]], "vary_population() (evokit.core.variator.variator method)": [[1, "evokit.core.variator.Variator.vary_population", false]], "while (class in evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.While", false]]}, "objects": {"": [[0, 0, 0, "-", "evokit"]], "evokit": [[1, 0, 0, "-", "core"], [2, 0, 0, "-", "evolvables"]], "evokit.core": [[1, 0, 0, "-", "accountant"], [1, 0, 0, "-", "controller"], [1, 0, 0, "-", "evaluator"], [1, 0, 0, "-", "population"], [1, 0, 0, "-", "selector"], [1, 0, 0, "-", "variator"]], "evokit.core.accountant": [[1, 1, 1, "", "Accountant"], [1, 1, 1, "", "AccountantRecord"]], "evokit.core.accountant.Accountant": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "is_registered"], [1, 2, 1, "", "publish"], [1, 3, 1, "", "subject"]], "evokit.core.accountant.AccountantRecord": [[1, 3, 1, "", "event"], [1, 3, 1, "", "generation"], [1, 3, 1, "", "value"]], "evokit.core.controller": [[1, 1, 1, "", "Controller"], [1, 1, 1, "", "LinearController"], [1, 1, 1, "", "SimpleLinearController"]], "evokit.core.controller.Controller": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__new__"], [1, 3, 1, "", "accountants"], [1, 3, 1, "", "events"], [1, 3, 1, "", "generation"], [1, 2, 1, "", "register"], [1, 2, 1, "", "step"], [1, 2, 1, "", "update"]], "evokit.core.controller.LinearController": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "step"]], "evokit.core.controller.SimpleLinearController": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "step"]], "evokit.core.evaluator": [[1, 1, 1, "", "Evaluator"], [1, 1, 1, "", "NullEvaluator"]], "evokit.core.evaluator.Evaluator": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__new__"], [1, 2, 1, "", "evaluate"], [1, 2, 1, "", "evaluate_population"], [1, 3, 1, "", "retain_fitness"]], "evokit.core.evaluator.NullEvaluator": [[1, 2, 1, "", "evaluate"]], "evokit.core.population": [[1, 1, 1, "", "AbstractCollection"], [1, 1, 1, "", "Individual"], [1, 1, 1, "", "Population"]], "evokit.core.population.AbstractCollection": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "append"], [1, 2, 1, "", "draw"], [1, 2, 1, "", "extend"], [1, 2, 1, "", "populate"]], "evokit.core.population.Individual": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__new__"], [1, 2, 1, "", "copy"], [1, 4, 1, "", "fitness"], [1, 2, 1, "", "has_fitness"], [1, 2, 1, "", "reset_fitness"]], "evokit.core.population.Population": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "best"], [1, 2, 1, "", "copy"], [1, 2, 1, "", "reset_fitness"], [1, 2, 1, "", "sort"]], "evokit.core.selector": [[1, 5, 1, "", "Elitist"], [1, 1, 1, "", "ElitistSimpleSelector"], [1, 1, 1, "", "NullSelector"], [1, 1, 1, "", "Selector"], [1, 1, 1, "", "SimpleSelector"], [1, 1, 1, "", "TournamentSelector"]], "evokit.core.selector.ElitistSimpleSelector": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "select_to_many"]], "evokit.core.selector.NullSelector": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "select"], [1, 2, 1, "", "select_to_many"]], "evokit.core.selector.Selector": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "select"], [1, 2, 1, "", "select_to_many"], [1, 2, 1, "", "select_to_population"]], "evokit.core.selector.SimpleSelector": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "select"]], "evokit.core.selector.TournamentSelector": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "select"]], "evokit.core.variator": [[1, 1, 1, "", "NullVariator"], [1, 1, 1, "", "Variator"]], "evokit.core.variator.NullVariator": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "vary"]], "evokit.core.variator.Variator": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__new__"], [1, 2, 1, "", "vary"], [1, 2, 1, "", "vary_population"]], "evokit.evolvables": [[2, 0, 0, "-", "binstring"], [2, 0, 0, "-", "funcs"], [2, 0, 0, "-", "gp"], [2, 0, 0, "-", "lgp"]], "evokit.evolvables.binstring": [[2, 1, 1, "", "BinaryString"], [2, 1, 1, "", "CountBits"], [2, 1, 1, "", "MutateBits"]], "evokit.evolvables.binstring.BinaryString": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "clear"], [2, 2, 1, "", "copy"], [2, 2, 1, "", "flip"], [2, 2, 1, "", "get"], [2, 2, 1, "", "random"], [2, 2, 1, "", "set"]], "evokit.evolvables.binstring.CountBits": [[2, 2, 1, "", "evaluate"]], "evokit.evolvables.binstring.MutateBits": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "vary"]], "evokit.evolvables.funcs": [[2, 5, 1, "", "add"], [2, 5, 1, "", "avg"], [2, 5, 1, "", "cos"], [2, 5, 1, "", "div"], [2, 5, 1, "", "lim"], [2, 5, 1, "", "mul"], [2, 5, 1, "", "sin"], [2, 5, 1, "", "sub"], [2, 5, 1, "", "tan"]], "evokit.evolvables.gp": [[2, 1, 1, "", "CrossoverSubtree"], [2, 1, 1, "", "Expression"], [2, 1, 1, "", "ExpressionFactory"], [2, 1, 1, "", "MutateNode"], [2, 1, 1, "", "MutateSubtree"], [2, 1, 1, "", "PenaliseNodeCount"], [2, 1, 1, "", "Program"], [2, 1, 1, "", "ProgramFactory"], [2, 1, 1, "", "Symbol"], [2, 1, 1, "", "SymbolicEvaluator"]], "evokit.evolvables.gp.CrossoverSubtree": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "vary"]], "evokit.evolvables.gp.Expression": [[2, 2, 1, "", "__call__"], [2, 2, 1, "", "__init__"], [2, 2, 1, "", "copy"], [2, 4, 1, "", "factory"], [2, 2, 1, "", "nodes"]], "evokit.evolvables.gp.ExpressionFactory": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "build"], [2, 2, 1, "", "draw_primitive"], [2, 2, 1, "", "primitive_by_arity"]], "evokit.evolvables.gp.MutateNode": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "vary"]], "evokit.evolvables.gp.MutateSubtree": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "vary"]], "evokit.evolvables.gp.PenaliseNodeCount": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "evaluate"]], "evokit.evolvables.gp.Program": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "copy"]], "evokit.evolvables.gp.ProgramFactory": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "build"]], "evokit.evolvables.gp.Symbol": [[2, 2, 1, "", "__init__"], [2, 3, 1, "", "pos"]], "evokit.evolvables.gp.SymbolicEvaluator": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "evaluate"]], "evokit.evolvables.lgp": [[2, 1, 1, "", "Conditional"], [2, 1, 1, "", "For"], [2, 1, 1, "", "If"], [2, 1, 1, "", "Instruction"], [2, 1, 1, "", "Label"], [2, 1, 1, "", "LinearProgram"], [2, 1, 1, "", "Operation"], [2, 1, 1, "", "Runner"], [2, 1, 1, "", "StructNextLine"], [2, 1, 1, "", "StructOverLines"], [2, 1, 1, "", "StructUntilLabel"], [2, 1, 1, "", "ValueRange"], [2, 1, 1, "", "While"], [2, 5, 1, "", "add"], [2, 5, 1, "", "less"], [2, 5, 1, "", "sub"]], "evokit.evolvables.lgp.Conditional": [[2, 2, 1, "", "__init__"]], "evokit.evolvables.lgp.For": [[2, 2, 1, "", "__init__"]], "evokit.evolvables.lgp.If": [[2, 2, 1, "", "__init__"]], "evokit.evolvables.lgp.Label": [[2, 2, 1, "", "__init__"]], "evokit.evolvables.lgp.LinearProgram": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "check"], [2, 3, 1, "", "coarity"], [2, 2, 1, "", "get_output_values"], [2, 2, 1, "", "run"], [2, 2, 1, "", "run_instruction"]], "evokit.evolvables.lgp.Operation": [[2, 2, 1, "", "__init__"], [2, 3, 1, "", "args"], [2, 3, 1, "", "function"], [2, 3, 1, "", "target"]], "evokit.evolvables.lgp.StructNextLine": [[2, 2, 1, "", "__init__"]], "evokit.evolvables.lgp.StructOverLines": [[2, 2, 1, "", "__init__"]], "evokit.evolvables.lgp.StructUntilLabel": [[2, 2, 1, "", "__init__"]], "evokit.evolvables.lgp.ValueRange": [[2, 2, 1, "", "__init__"], [2, 3, 1, "", "max"], [2, 3, 1, "", "min"]], "evokit.evolvables.lgp.While": [[2, 2, 1, "", "__init__"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "terms": {"": [2, 3], "0": [1, 2, 3, 4], "0b111110110": [], "0b1111110110": [], "0th": 2, "1": [1, 2, 3, 4], "10": 3, "100": 4, "1000": 4, "106": 3, "11": 3, "12": 3, "126": 3, "127": 3, "13": 3, "14": 3, "15": 3, "16": 3, "17": 3, "18": 3, "19": 3, "2": [1, 3, 4], "20": [3, 4], "21": 3, "22": [3, 4], "23": [3, 4], "24": [3, 4], "25": [3, 4], "26": [3, 4], "27": [3, 4], "28": [3, 4], "29": [3, 4], "3": 3, "30": [3, 4], "31": [3, 4], "32": 3, "33": 3, "34": 3, "35": 3, "36": 3, "37": 3, "38": 3, "39": 3, "4": 3, "40": 3, "41": 3, "42": 3, "43": 3, "44": 3, "45": 3, "46": 3, "47": 3, "48": 3, "49": 3, "496403249731884e": 3, "5": 3, "50": 3, "51070812473542": 3, "55": [], "574": [], "579": 4, "6": 3, "65582808704299": 3, "67": [], "7": 3, "8": 3, "80": 3, "9": 3, "9092974268256817": 3, "95855663138987": 3, "A": [1, 2], "As": 5, "At": 2, "Be": [], "By": 3, "For": [0, 1, 2], "If": [0, 1, 2], "In": 1, "It": [1, 3, 4], "The": [1, 2, 3, 4, 6], "Then": [2, 4], "To": [3, 4], "With": [], "_": [1, 3, 4], "__": 1, "__call__": [0, 2], "__future__": 4, "__init__": [0, 1, 2, 4], "__main__": [], "__name__": [], "__new__": [0, 1], "__str__": 4, "_assert_pos_out_of_bound": [], "_i": 5, "_population_": 1, "_record": 5, "_somewhat_": [], "abc": [1, 2], "abspath": [3, 4], "abstract": 1, "abstractcollect": [0, 1], "acc": [], "accept": [1, 2], "access": 1, "account": [0, 6, 7], "accountantrecord": [0, 1], "acquir": 1, "actual": [], "add": [0, 1, 2, 3], "addit": [1, 5], "adopt": 3, "advanc": [1, 6], "advantag": 1, "affect": [1, 2, 3, 4], "after": [1, 2], "against": [2, 3], "algorithm": [1, 3, 5, 6], "algorothm": 1, "all": [1, 2, 3, 4], "alongsid": 1, "alpha": 3, "alpha_from_index": 3, "alreadi": [1, 4], "also": [1, 2, 3], "altern": 1, "alwai": 4, "an": [1, 2, 3, 4, 5, 6], "ancestor": 5, "ani": [1, 2], "annot": [2, 4], "anoth": 1, "anyth": 1, "append": [0, 1, 3, 4], "appi": [], "appli": [1, 2, 3, 4], "applic": 1, "appropri": 3, "approxim": 3, "ar": [1, 2, 3], "arg": [0, 1, 2], "argument": [1, 2, 3], "ariti": [1, 2, 3, 4], "aritymismatch": [], "assign": [1, 2, 5], "associ": 2, "attach": 1, "attr": 2, "attribut": [1, 2], "automat": 1, "avg": [0, 2], "b": [2, 4], "back": 2, "badsymbolerror": [], "base": [1, 2, 3], "batch": 2, "becaus": [1, 3], "been": [1, 4], "befor": 3, "begin": [2, 3, 4], "behaviour": [1, 3, 4], "being": [2, 5], "benchmark": 6, "best": [0, 1, 3, 4], "bests_color": 3, "better": 1, "bin": 4, "binari": [2, 5], "binarystr": [0, 2, 4], "binstr": [0, 7], "binstring_length": 4, "bit": [2, 4], "bitdistanceevalu": 4, "blue": 3, "bool": [1, 2], "both": [2, 5], "bottlecap": 1, "bound": [], "bracket_s": 1, "budget": [1, 2], "build": [0, 2, 3, 6], "built": 2, "bypass": 3, "c": 4, "call": [1, 2, 3, 4], "callabl": [1, 2, 3], "can": [1, 2, 3, 4, 5], "cannot": [1, 2], "capabl": 5, "case": 3, "certain": 4, "chanc": 2, "chang": [1, 2], "check": [0, 2], "checker": [], "child": [2, 3], "children": 2, "cl": 1, "class": [1, 2, 4, 5], "clear": [0, 1, 2], "close": 3, "closer": 2, "co": [0, 2, 3], "coariti": [0, 1, 2, 4], "coeffici": 2, "collect": [1, 2], "color": 3, "colour": 3, "come": 4, "compar": [2, 3], "compat": 4, "compon": [4, 5], "comput": [1, 6], "concret": 5, "cond": 2, "condit": [0, 2], "consequ": 4, "consist": 5, "constant": 2, "constraint": 2, "construct": [2, 3], "contain": [2, 3], "content": 7, "context": 1, "control": [0, 3, 4, 5, 6, 7], "conveni": 2, "copi": [0, 1, 2, 3, 4, 5], "core": [0, 3, 4, 5, 7], "correct": 1, "correspond": 1, "cost": 2, "cost_budget": [], "count": [1, 2], "countbit": [0, 2], "counter": 1, "courtesi": [], "creat": [1, 2, 3, 4], "crossov": [2, 5], "crossover_subtre": 3, "crossoversubtre": [0, 2, 3], "cselector": [], "ctrl": [3, 4], "current": 1, "curv": [3, 4], "custom": [1, 3, 4, 5], "d": 1, "data": [1, 2], "decid": [1, 3, 4], "declar": [], "declin": 3, "decor": 1, "deep": 2, "def": [3, 4], "default": 3, "default_symbol_nam": [], "defaultvari": [], "defin": [1, 3, 5], "delet": 2, "denot": [], "depend": [1, 4, 5], "deposit_symbol": [], "depth": [2, 3], "deriv": [1, 4, 5], "design": [], "destroi": 1, "develop": 6, "dict": 1, "dictionari": 1, "differ": [], "digit": 4, "dispatch": [], "dispatch_id": [], "div": [0, 2, 3], "do": [1, 2, 3, 4, 5], "doc": 5, "document": 1, "doe": [1, 2, 3], "domain": 3, "dot": [], "draw": [0, 1, 2, 3], "draw_primit": [0, 2], "drawn": 2, "dtype": 2, "dummi": 2, "duplic": 1, "dynam": [], "each": [1, 2, 3, 4, 5], "earlier": 3, "earliest": 1, "effect": 1, "either": 1, "elit": [1, 3], "elitist": [0, 1, 3, 4], "elitistsimpleselector": [0, 1], "els": 4, "empti": 2, "encapsul": 5, "encount": 1, "encourag": 3, "end": 1, "enforc": [], "enough": 1, "ensur": [1, 2], "entir": 1, "env": [], "episode_count": [], "error": [], "evalu": [0, 2, 3, 5, 7], "evaluate_episod": [], "evaluate_popul": [0, 1], "evaluate_step": [], "even": 2, "event": [0, 1], "everi": 1, "evokit": [3, 4, 5], "evolutionari": [1, 4, 5, 6], "evolv": [0, 3, 5, 6, 7], "exact": 3, "exampl": [1, 2, 5], "exce": [2, 3], "exceed": 2, "except": 1, "exchang": [2, 3], "exist": [2, 3, 5], "expect": [3, 4], "explain": 4, "export": 1, "expr": 2, "expr1": [], "expr2": [], "express": [0, 2], "expressionfactori": [0, 2], "extend": [0, 1, 6], "extens": 6, "f": [3, 4], "factori": [0, 2, 3, 4], "fals": [1, 2], "far": [1, 3], "favour": 2, "field": 1, "find": 1, "fire": 1, "first": [1, 2, 4], "fit": [0, 1, 2, 3, 4, 5], "fitnss": 3, "fix": 2, "flat": [1, 2], "flip": [0, 2], "float": [1, 2, 3, 4], "float64": 2, "follow": [1, 3, 4], "forc": 3, "form": 4, "found": 2, "framework": [4, 6], "free_draw": 2, "from": [1, 2, 3, 4, 5, 6], "full": 3, "func": [0, 3, 7], "funciton": [], "function": [0, 1, 2, 3], "gener": [0, 1, 2, 3, 4, 5], "generation_begin": [], "generation_count": 4, "generational_best": 3, "genet": [2, 3], "genom": [1, 2, 3, 4, 6], "genotyp": 4, "get": [0, 2], "get_output_valu": [0, 2], "getrandbit": 4, "given": [1, 2], "global": 1, "good": 6, "got": 4, "gp": [0, 3, 7], "gp_visualis": [0, 3, 7], "greedi": 1, "gymevalu": [], "ha": [1, 4], "handl": 3, "handler": 1, "hard": 5, "has_fit": [0, 1], "have": [1, 2, 4], "here": [3, 4], "hi": [], "higher": [1, 2, 3, 4], "highest": [1, 3, 4], "how": [3, 4, 5], "hyperparamet": [2, 3], "i": [1, 2, 3, 4, 5, 6], "identifi": 1, "ignor": [], "illustr": 3, "implement": [1, 2, 4, 6], "import": [3, 4], "includ": [2, 5], "incorpor": 5, "increas": 2, "increment": 1, "incur": 2, "ind": 3, "independ": 1, "index": [1, 2, 3, 6], "indexerror": 2, "indic": 2, "individu": [0, 1, 2, 3, 4, 5], "inf": 2, "inform": [4, 5], "inherit": 1, "init_pop": 4, "initi": 3, "initialis": [1, 2, 3], "input": [1, 2], "input_can_chang": 2, "insert": 1, "instanc": [2, 3, 4, 5], "instruct": [0, 2], "int": [1, 2, 4], "integ": 2, "interceptor": [3, 6], "intern": [2, 3], "interv": [], "introduct": 6, "invok": 1, "is_regist": [0, 1], "item": [1, 2], "iter": 1, "its": [1, 2, 3, 4], "itself": 2, "join": [3, 4], "just": 1, "k": [], "kei": 1, "kwarg": 1, "label": [0, 2, 3], "lambda": 1, "last": [3, 4], "later": 3, "latter": 4, "layer_budget": 2, "learn": 3, "least": 2, "legend": 3, "len": [3, 4], "length": [2, 4], "less": [0, 2], "lgp": [0, 7], "li": 2, "lighter": 3, "lim": [0, 2], "line": [], "line_count": 2, "linear": 6, "linearcontrol": [0, 1], "linearprogram": [0, 2], "linewidth": 3, "list": [1, 2, 3, 4], "liter": 2, "ll": 5, "lo": [], "loook": 5, "machineri": [1, 6], "made": 1, "mai": 1, "maintain": [1, 2], "manag": 1, "mani": 3, "manual": 1, "map": 1, "match": [1, 2], "matplotlib": [3, 4], "max": [0, 2], "max_val": 2, "mean": [3, 4], "member": 1, "meth": [], "method": [1, 2, 3, 4], "min": [0, 2], "min_val": 2, "misus": [], "modif": 4, "modifi": [1, 3], "moduel": 5, "modul": [3, 5, 6, 7], "monitor": 1, "more": 2, "much": 2, "mul": [0, 2, 3], "must": [1, 2, 3, 4], "mutat": [2, 4, 5], "mutatebit": [0, 2], "mutatenod": [0, 2], "mutatesubtre": [0, 2], "mutation_r": [2, 4], "name": [1, 2, 6], "namedtupl": 1, "nb_dir": [3, 4], "ndarrai": 2, "necessarili": [], "need": 3, "neither": 1, "never": [1, 3], "new": [1, 2, 3, 4], "new_data": 1, "new_individu": 3, "next_symbol": [], "next_symbol_nam": [], "node": [0, 2, 3], "node_budget": [2, 3], "non": 2, "none": [1, 2, 4], "nor": 1, "note": [1, 2, 3, 4], "noth": 1, "nullari": 2, "nullary_ratio": [2, 3], "nullevalu": [0, 1], "nullselector": [0, 1], "nullvari": [0, 1], "number": [1, 2, 3, 4], "o": [3, 4], "obj_color": 3, "object": [1, 2, 3], "observ": 1, "occupi": 2, "occur": 1, "offspr": 4, "onc": 2, "one": [1, 2, 3, 4, 5], "ones": [3, 4, 5], "onli": [2, 3, 4], "oper": [0, 1, 2, 3, 4, 5, 6], "operand": 2, "option": 3, "order": [1, 2, 3, 4], "origin": [1, 2], "other": 1, "otherwis": [1, 2], "out": 2, "output": [1, 2], "outsid": 2, "over": [2, 3], "over_budget": [], "overal": 4, "overrid": [1, 4], "overview": 6, "p2dot": 3, "p2dot_recurs": [], "packag": [6, 7], "page": 6, "parallel": 1, "paramet": [1, 2, 3], "parent": [1, 2, 3, 4, 5], "parent_evalu": 1, "parent_id": [], "parent_selector": 1, "part": 5, "pass": 2, "patch": 3, "path": [3, 4], "penalisenodecount": [0, 2], "penalti": 2, "perform": [1, 2], "pick": 3, "pip": 6, "plot": [3, 4], "plot_rang": 3, "plt": [3, 4], "po": [0, 1, 2], "point": [2, 3], "poll_ar": [], "poll_funct": [], "pop": [1, 3], "pop_siz": 3, "popul": [0, 3, 6, 7], "population_s": 4, "posit": [1, 2], "preserv": 1, "primit": [2, 3], "primitive_by_ar": [0, 2], "primitive_pool": 2, "print": [3, 4], "probabl": [1, 2, 3], "process": [1, 3], "produc": [1, 3], "progf": 3, "program": [0, 2, 3], "programaritymismatcherror": [], "programcrossovervari": [], "programfactori": [0, 2, 3], "properti": [1, 2], "pselector": [], "publish": [0, 1], "pyplot": [3, 4], "python": 2, "r": 1, "rais": [1, 2, 4], "random": [0, 2, 4], "randombitmut": 4, "randomli": [2, 3], "rang": [2, 3, 4], "ranker": 1, "rate": 4, "rather": 2, "re": 1, "read": 1, "rearrang": 1, "receiv": 5, "recurs": 2, "red": 3, "ref": 4, "reg_length": 2, "regist": [0, 1, 2], "regress": [2, 5], "relat": [3, 5], "rememb": 4, "remov": 1, "repeatedli": 1, "replac": [2, 5], "report": 1, "repres": [3, 5], "represent": [1, 2, 3, 5], "represnet": 5, "requir": 1, "reset": 1, "reset_fit": [0, 1], "resolv": 2, "respect": [1, 2, 4], "result": [1, 2], "retain": [1, 4], "retain_fit": [0, 1], "return": [1, 2, 3, 4], "reward": 2, "right": 5, "run": [0, 1, 2], "run_instruct": [0, 2], "runner": [0, 2], "s1": [2, 4], "same": 2, "sampl": 1, "scope": 1, "score": 1, "score_wrapp": [], "search": 6, "section": 4, "see": [1, 2], "sel": 1, "select": [0, 1, 2, 3, 4, 5], "select_to_mani": [0, 1], "select_to_popul": [0, 1], "selector": [0, 3, 4, 6, 7], "self": [1, 2, 4], "sequenc": [1, 2, 3, 4], "set": [0, 1, 2, 3, 4], "shape": 1, "should": [1, 4], "show": [3, 4], "shuffl": 2, "signatur": 1, "significantli": 4, "simpl": [1, 3], "simplelinearcontrol": [0, 1, 3, 4], "simpleselector": [0, 1, 3, 4], "sin": [0, 2, 3], "sinc": 4, "size": [1, 2, 3, 4], "smaller": 2, "so": [1, 2, 3, 4, 5], "solut": 1, "sort": [0, 1], "sourc": [1, 2, 6], "specif": 2, "static": [1, 2], "staticmethod": 4, "step": [0, 1, 3, 4], "step_count": 3, "still": 2, "stock": 6, "storag": 2, "store": 4, "str": [1, 2, 3, 4], "strategi": 1, "string": [2, 4], "structnextlin": [0, 2], "structoverlin": [0, 2], "structuntillabel": [0, 2], "structur": [1, 2], "sub": [0, 2, 3], "subclass": 1, "subject": [0, 1], "submodul": [0, 7], "subnod": 2, "subpackag": 7, "subpopul": 6, "subscrib": 1, "subscript": 3, "subsequ": 4, "subtre": 2, "successfulli": 3, "suit": 6, "suject": [], "sum": 4, "suppli": 2, "support": [2, 3], "sure": [], "survivor": [1, 5], "survivor_evalu": 1, "survivor_selector": 1, "swap_children": [], "sy": [3, 4], "symbol": [0, 2, 5], "symbolic_fit": 3, "symbolicevalu": [0, 2, 3], "t": [1, 2, 3], "take": [1, 4], "tan": [0, 2], "target": [0, 2], "term": 5, "termin": [2, 3], "than": 2, "thatar": 4, "thei": 2, "them": [1, 4], "therefor": 3, "thi": [1, 2, 3, 4, 5, 6], "thing": 5, "time": 1, "titl": [3, 4], "todo": [1, 2, 4], "togeth": 3, "too": 2, "total": [2, 3], "tournament": [1, 3], "tournament_selector": 3, "tournamentselector": [0, 1, 3], "train": [3, 4], "tree": [2, 3], "tree_depth": 3, "trigger": 1, "true": [1, 2], "tupl": [1, 2, 3, 4], "turn": 3, "tutori": [4, 6], "two": [3, 6], "type": [1, 3, 4], "typeerror": [1, 2], "typevar": [], "unari": [3, 5], "unary_weight": [], "uniform": 1, "uniformli": [2, 4], "unset": [], "updat": [0, 1, 4], "us": [1, 2, 3, 4, 5, 6], "user": [4, 5], "util": 3, "val": [], "valu": [0, 1, 2, 3, 4], "valueerror": [1, 2, 4], "valuerang": [0, 2], "vari": [0, 1, 2, 4], "variat": [0, 2, 3, 5, 7], "vary_popul": [0, 1], "veri": 1, "view": 2, "visualis": 3, "wai": 1, "wari": [], "we": [], "weird_funct": 3, "what": [], "when": [1, 3], "where": [2, 3], "wherea": 3, "whether": 1, "which": [1, 2, 3, 4], "while": [0, 2], "whose": [1, 2, 3], "wider": 3, "wit": 1, "within": 4, "without": 2, "work": [], "wrapper": [], "write": [1, 5], "x": [2, 3, 4], "x0": 3, "xlabel": [3, 4], "y": [2, 3], "ylabel": [3, 4]}, "titles": ["evokit package", "evokit.core package", "evokit.evolvables package", "Example: Symbolic Regression", "OneMax Example", "Introduction", "EvoKit Documentation", "evokit"], "titleterms": {"The": 5, "account": 1, "algorithm": 4, "analys": 4, "binstr": 2, "content": [0, 1, 2, 5, 6], "control": 1, "core": 1, "defin": 4, "document": 6, "evalu": [1, 4], "everyth": 4, "evokit": [0, 1, 2, 6, 7], "evolv": 2, "exampl": [3, 4], "func": 2, "genom": 5, "gp": 2, "gp_visualis": 2, "indic": 6, "initialis": 4, "instal": 6, "introduct": 5, "lgp": 2, "modul": [0, 1, 2], "onemax": 4, "packag": [0, 1, 2], "popul": [1, 4], "put": 4, "regress": 3, "represent": 4, "result": 4, "run": 4, "section": [], "selector": [1, 5], "stock": 5, "submodul": [1, 2], "subpackag": 0, "suit": 5, "symbol": 3, "tabl": 6, "titl": [], "togeth": 4, "variat": [1, 4]}})