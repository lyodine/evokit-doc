Search.setIndex({"alltitles": {"API Reference:": [[11, null]], "Advanced Tutorials": [[10, "advanced-tutorials"]], "Analyse Results": [[8, "Analyse-Results"]], "Base Classes": [[10, "base-classes"]], "Build Documentation": [[12, "build-documentation"]], "Build a built distribution (wheel)": [[12, "build-a-built-distribution-wheel"]], "Build a source distribution": [[12, "build-a-source-distribution"]], "Collect Runtime Statistics with Accountant": [[3, "Collect-Runtime-Statistics-with-Accountant"]], "Completely Documented": [[14, "completely-documented"]], "Creating a Custom Controller": [[4, "Creating-a-Custom-Controller"]], "Creating a Custom Selector": [[9, "Creating-a-Custom-Selector"]], "Define the Algorithm": [[8, "Define-the-Algorithm"]], "Evaluator": [[8, "Evaluator"]], "EvoKit Documentation": [[11, "evokit-documentation"]], "Getting Started": [[10, "getting-started"]], "Getting Started with OneMax": [[8, "Getting-Started-with-OneMax"]], "Getting Started:": [[11, null]], "Guides": [[10, "guides"]], "Indices and tables": [[11, "indices-and-tables"]], "Initialise Population": [[8, "Initialise-Population"]], "Install from source": [[12, "install-from-source"]], "Installing": [[12, "installing"]], "Modifying Operators with the Interceptor Pattern": [[6, "Modifying-Operators-with-the-Interceptor-Pattern"]], "Module contents": [[0, "module-evokit"], [1, "module-evokit.core"], [2, "module-evokit.evolvables"]], "Operators are Easy to Make": [[14, "operators-are-easy-to-make"]], "Operators are Interchangeable": [[14, "operators-are-interchangeable"]], "Put Everything Together": [[8, "Put-Everything-Together"]], "Representation": [[8, "Representation"]], "Run the Algorithm": [[8, "Run-the-Algorithm"]], "Selector": [[9, "Selector"]], "Submodules": [[1, "submodules"], [2, "submodules"]], "Subpackages": [[0, "subpackages"]], "Symbolic Regression with Genetic Programming": [[5, "Symbolic-Regression-with-Genetic-Programming"]], "Transparent": [[14, "transparent"]], "Trial Run": [[12, "trial-run"]], "Variator": [[8, "Variator"]], "Well Described": [[14, "well-described"]], "Why EvoKit?": [[14, "why-evokit"]], "evokit": [[13, "evokit"]], "evokit package": [[0, "evokit-package"]], "evokit.core package": [[1, "evokit-core-package"]], "evokit.core.accountant module": [[1, "module-evokit.core.accountant"]], "evokit.core.algorithm module": [[1, "module-evokit.core.algorithm"]], "evokit.core.evaluator module": [[1, "module-evokit.core.evaluator"]], "evokit.core.population module": [[1, "module-evokit.core.population"]], "evokit.core.selector module": [[1, "module-evokit.core.selector"]], "evokit.core.variator module": [[1, "module-evokit.core.variator"]], "evokit.evolvables package": [[2, "evokit-evolvables-package"]], "evokit.evolvables.binstring module": [[2, "module-evokit.evolvables.binstring"]], "evokit.evolvables.funcs module": [[2, "module-evokit.evolvables.funcs"]], "evokit.evolvables.gp module": [[2, "module-evokit.evolvables.gp"]], "evokit.evolvables.gp_visualiser module": [[2, "module-evokit.evolvables.gp_visualiser"]], "evokit.evolvables.lgp module": [[2, "module-evokit.evolvables.lgp"]]}, "docnames": ["evokit", "evokit.core", "evokit.evolvables", "guides/examples/accountant", "guides/examples/algorithm", "guides/examples/gp", "guides/examples/interceptor", "guides/examples/lgp", "guides/examples/onemax", "guides/examples/selector", "guides/index", "index", "install-and-built", "modules", "why"], "envversion": {"nbsphinx": 4, "sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["evokit.rst", "evokit.core.rst", "evokit.evolvables.rst", "guides/examples/accountant.ipynb", "guides/examples/algorithm.ipynb", "guides/examples/gp.ipynb", "guides/examples/interceptor.ipynb", "guides/examples/lgp.ipynb", "guides/examples/onemax.ipynb", "guides/examples/selector.ipynb", "guides/index.rst", "index.rst", "install-and-built.rst", "modules.rst", "why.rst"], "indexentries": {"__call__() (evokit.evolvables.gp.expression method)": [[2, "evokit.evolvables.gp.Expression.__call__", false]], "__call__() (evokit.evolvables.lgp.structuretype method)": [[2, "evokit.evolvables.lgp.StructureType.__call__", false]], "__init__() (evokit.core.accountant.accountant method)": [[1, "evokit.core.accountant.Accountant.__init__", false]], "__init__() (evokit.core.algorithm.algorithm method)": [[1, "evokit.core.algorithm.Algorithm.__init__", false]], "__init__() (evokit.core.algorithm.linearalgorithm method)": [[1, "evokit.core.algorithm.LinearAlgorithm.__init__", false]], "__init__() (evokit.core.algorithm.simplelinearalgorithm method)": [[1, "evokit.core.algorithm.SimpleLinearAlgorithm.__init__", false]], "__init__() (evokit.core.evaluator.evaluator method)": [[1, "evokit.core.evaluator.Evaluator.__init__", false]], "__init__() (evokit.core.population.abstractcollection method)": [[1, "evokit.core.population.AbstractCollection.__init__", false]], "__init__() (evokit.core.population.individual method)": [[1, "evokit.core.population.Individual.__init__", false]], "__init__() (evokit.core.population.population method)": [[1, "evokit.core.population.Population.__init__", false]], "__init__() (evokit.core.selector.elitistsimpleselector method)": [[1, "evokit.core.selector.ElitistSimpleSelector.__init__", false]], "__init__() (evokit.core.selector.nullselector method)": [[1, "evokit.core.selector.NullSelector.__init__", false]], "__init__() (evokit.core.selector.selector method)": [[1, "evokit.core.selector.Selector.__init__", false]], "__init__() (evokit.core.selector.simpleselector method)": [[1, "evokit.core.selector.SimpleSelector.__init__", false]], "__init__() (evokit.core.selector.tournamentselector method)": [[1, "evokit.core.selector.TournamentSelector.__init__", false]], "__init__() (evokit.core.variator.nullvariator method)": [[1, "evokit.core.variator.NullVariator.__init__", false]], "__init__() (evokit.core.variator.variator method)": [[1, "evokit.core.variator.Variator.__init__", false]], "__init__() (evokit.evolvables.binstring.binarystring method)": [[2, "evokit.evolvables.binstring.BinaryString.__init__", false]], "__init__() (evokit.evolvables.binstring.mutatebits method)": [[2, "evokit.evolvables.binstring.MutateBits.__init__", false]], "__init__() (evokit.evolvables.gp.crossoversubtree method)": [[2, "evokit.evolvables.gp.CrossoverSubtree.__init__", false]], "__init__() (evokit.evolvables.gp.expression method)": [[2, "evokit.evolvables.gp.Expression.__init__", false]], "__init__() (evokit.evolvables.gp.expressionfactory method)": [[2, "evokit.evolvables.gp.ExpressionFactory.__init__", false]], "__init__() (evokit.evolvables.gp.mutatenode method)": [[2, "evokit.evolvables.gp.MutateNode.__init__", false]], "__init__() (evokit.evolvables.gp.mutatesubtree method)": [[2, "evokit.evolvables.gp.MutateSubtree.__init__", false]], "__init__() (evokit.evolvables.gp.penalisenodecount method)": [[2, "evokit.evolvables.gp.PenaliseNodeCount.__init__", false]], "__init__() (evokit.evolvables.gp.program method)": [[2, "evokit.evolvables.gp.Program.__init__", false]], "__init__() (evokit.evolvables.gp.programfactory method)": [[2, "evokit.evolvables.gp.ProgramFactory.__init__", false]], "__init__() (evokit.evolvables.gp.symbol method)": [[2, "evokit.evolvables.gp.Symbol.__init__", false]], "__init__() (evokit.evolvables.gp.symbolicevaluator method)": [[2, "evokit.evolvables.gp.SymbolicEvaluator.__init__", false]], "__init__() (evokit.evolvables.lgp.condition method)": [[2, "evokit.evolvables.lgp.Condition.__init__", false]], "__init__() (evokit.evolvables.lgp.for method)": [[2, "evokit.evolvables.lgp.For.__init__", false]], "__init__() (evokit.evolvables.lgp.if method)": [[2, "evokit.evolvables.lgp.If.__init__", false]], "__init__() (evokit.evolvables.lgp.label method)": [[2, "evokit.evolvables.lgp.Label.__init__", false]], "__init__() (evokit.evolvables.lgp.linearprogram method)": [[2, "evokit.evolvables.lgp.LinearProgram.__init__", false]], "__init__() (evokit.evolvables.lgp.operation method)": [[2, "evokit.evolvables.lgp.Operation.__init__", false]], "__init__() (evokit.evolvables.lgp.structnextline method)": [[2, "evokit.evolvables.lgp.StructNextLine.__init__", false]], "__init__() (evokit.evolvables.lgp.structoverlines method)": [[2, "evokit.evolvables.lgp.StructOverLines.__init__", false]], "__init__() (evokit.evolvables.lgp.structuntillabel method)": [[2, "evokit.evolvables.lgp.StructUntilLabel.__init__", false]], "__init__() (evokit.evolvables.lgp.structurescope method)": [[2, "evokit.evolvables.lgp.StructureScope.__init__", false]], "__init__() (evokit.evolvables.lgp.valuerange method)": [[2, "evokit.evolvables.lgp.ValueRange.__init__", false]], "__init__() (evokit.evolvables.lgp.while method)": [[2, "evokit.evolvables.lgp.While.__init__", false]], "__new__() (evokit.core.algorithm.algorithm static method)": [[1, "evokit.core.algorithm.Algorithm.__new__", false]], "__new__() (evokit.core.evaluator.evaluator static method)": [[1, "evokit.core.evaluator.Evaluator.__new__", false]], "__new__() (evokit.core.population.individual static method)": [[1, "evokit.core.population.Individual.__new__", false]], "__new__() (evokit.core.variator.variator static method)": [[1, "evokit.core.variator.Variator.__new__", false]], "abstractcollection (class in evokit.core.population)": [[1, "evokit.core.population.AbstractCollection", false]], "accountant (class in evokit.core.accountant)": [[1, "evokit.core.accountant.Accountant", false]], "accountantrecord (class in evokit.core.accountant)": [[1, "evokit.core.accountant.AccountantRecord", false]], "accountants (evokit.core.algorithm.algorithm attribute)": [[1, "evokit.core.algorithm.Algorithm.accountants", false]], "add() (in module evokit.evolvables.funcs)": [[2, "evokit.evolvables.funcs.add", false]], "algorithm (class in evokit.core.algorithm)": [[1, "evokit.core.algorithm.Algorithm", false]], "append() (evokit.core.population.abstractcollection method)": [[1, "evokit.core.population.AbstractCollection.append", false]], "avg() (in module evokit.evolvables.funcs)": [[2, "evokit.evolvables.funcs.avg", false]], "best() (evokit.core.population.population method)": [[1, "evokit.core.population.Population.best", false]], "binarystring (class in evokit.evolvables.binstring)": [[2, "evokit.evolvables.binstring.BinaryString", false]], "build() (evokit.evolvables.gp.expressionfactory method)": [[2, "evokit.evolvables.gp.ExpressionFactory.build", false]], "build() (evokit.evolvables.gp.programfactory method)": [[2, "evokit.evolvables.gp.ProgramFactory.build", false]], "check() (evokit.evolvables.lgp.linearprogram method)": [[2, "evokit.evolvables.lgp.LinearProgram.check", false]], "clear() (evokit.evolvables.binstring.binarystring method)": [[2, "evokit.evolvables.binstring.BinaryString.clear", false]], "condition (class in evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.Condition", false]], "copy() (evokit.core.population.individual method)": [[1, "evokit.core.population.Individual.copy", false]], "copy() (evokit.core.population.population method)": [[1, "evokit.core.population.Population.copy", false]], "copy() (evokit.evolvables.binstring.binarystring method)": [[2, "evokit.evolvables.binstring.BinaryString.copy", false]], "copy() (evokit.evolvables.gp.expression method)": [[2, "evokit.evolvables.gp.Expression.copy", false]], "copy() (evokit.evolvables.gp.program method)": [[2, "evokit.evolvables.gp.Program.copy", false]], "cos() (in module evokit.evolvables.funcs)": [[2, "evokit.evolvables.funcs.cos", false]], "countbits (class in evokit.evolvables.binstring)": [[2, "evokit.evolvables.binstring.CountBits", false]], "crossoversubtree (class in evokit.evolvables.gp)": [[2, "evokit.evolvables.gp.CrossoverSubtree", false]], "div() (in module evokit.evolvables.funcs)": [[2, "evokit.evolvables.funcs.div", false]], "draw() (evokit.core.population.abstractcollection method)": [[1, "evokit.core.population.AbstractCollection.draw", false]], "draw_primitive() (evokit.evolvables.gp.expressionfactory method)": [[2, "evokit.evolvables.gp.ExpressionFactory.draw_primitive", false]], "elitist() (in module evokit.core.selector)": [[1, "evokit.core.selector.Elitist", false]], "elitistsimpleselector (class in evokit.core.selector)": [[1, "evokit.core.selector.ElitistSimpleSelector", false]], "evaluate() (evokit.core.evaluator.evaluator method)": [[1, "evokit.core.evaluator.Evaluator.evaluate", false]], "evaluate() (evokit.core.evaluator.nullevaluator method)": [[1, "evokit.core.evaluator.NullEvaluator.evaluate", false]], "evaluate() (evokit.evolvables.binstring.countbits method)": [[2, "evokit.evolvables.binstring.CountBits.evaluate", false]], "evaluate() (evokit.evolvables.gp.penalisenodecount method)": [[2, "evokit.evolvables.gp.PenaliseNodeCount.evaluate", false]], "evaluate() (evokit.evolvables.gp.symbolicevaluator method)": [[2, "evokit.evolvables.gp.SymbolicEvaluator.evaluate", false]], "evaluate_population() (evokit.core.evaluator.evaluator method)": [[1, "evokit.core.evaluator.Evaluator.evaluate_population", false]], "evaluator (class in evokit.core.evaluator)": [[1, "evokit.core.evaluator.Evaluator", false]], "event (evokit.core.accountant.accountantrecord attribute)": [[1, "evokit.core.accountant.AccountantRecord.event", false]], "events (evokit.core.algorithm.algorithm attribute)": [[1, "evokit.core.algorithm.Algorithm.events", false]], "evokit": [[0, "module-evokit", false]], "evokit.core": [[1, "module-evokit.core", false]], "evokit.core.accountant": [[1, "module-evokit.core.accountant", false]], "evokit.core.algorithm": [[1, "module-evokit.core.algorithm", false]], "evokit.core.evaluator": [[1, "module-evokit.core.evaluator", false]], "evokit.core.population": [[1, "module-evokit.core.population", false]], "evokit.core.selector": [[1, "module-evokit.core.selector", false]], "evokit.core.variator": [[1, "module-evokit.core.variator", false]], "evokit.evolvables": [[2, "module-evokit.evolvables", false]], "evokit.evolvables.binstring": [[2, "module-evokit.evolvables.binstring", false]], "evokit.evolvables.funcs": [[2, "module-evokit.evolvables.funcs", false]], "evokit.evolvables.gp": [[2, "module-evokit.evolvables.gp", false]], "evokit.evolvables.gp_visualiser": [[2, "module-evokit.evolvables.gp_visualiser", false]], "evokit.evolvables.lgp": [[2, "module-evokit.evolvables.lgp", false]], "expression (class in evokit.evolvables.gp)": [[2, "evokit.evolvables.gp.Expression", false]], "expressionfactory (class in evokit.evolvables.gp)": [[2, "evokit.evolvables.gp.ExpressionFactory", false]], "extend() (evokit.core.population.abstractcollection method)": [[1, "evokit.core.population.AbstractCollection.extend", false]], "factory (evokit.evolvables.gp.expression property)": [[2, "evokit.evolvables.gp.Expression.factory", false]], "fitness (evokit.core.population.individual property)": [[1, "evokit.core.population.Individual.fitness", false]], "flip() (evokit.evolvables.binstring.binarystring method)": [[2, "evokit.evolvables.binstring.BinaryString.flip", false]], "for (class in evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.For", false]], "generation (evokit.core.accountant.accountantrecord attribute)": [[1, "evokit.core.accountant.AccountantRecord.generation", false]], "generation (evokit.core.algorithm.algorithm attribute)": [[1, "evokit.core.algorithm.Algorithm.generation", false]], "genome (evokit.core.population.individual attribute)": [[1, "evokit.core.population.Individual.genome", false]], "get() (evokit.evolvables.binstring.binarystring method)": [[2, "evokit.evolvables.binstring.BinaryString.get", false]], "handlers (evokit.core.accountant.accountant attribute)": [[1, "evokit.core.accountant.Accountant.handlers", false]], "has_fitness() (evokit.core.population.individual method)": [[1, "evokit.core.population.Individual.has_fitness", false]], "ident (in module evokit.evolvables.gp_visualiser)": [[2, "evokit.evolvables.gp_visualiser.ident", false]], "if (class in evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.If", false]], "individual (class in evokit.core.population)": [[1, "evokit.core.population.Individual", false]], "instruction (class in evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.Instruction", false]], "is_registered() (evokit.core.accountant.accountant method)": [[1, "evokit.core.accountant.Accountant.is_registered", false]], "label (class in evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.Label", false]], "lim() (in module evokit.evolvables.funcs)": [[2, "evokit.evolvables.funcs.lim", false]], "linearalgorithm (class in evokit.core.algorithm)": [[1, "evokit.core.algorithm.LinearAlgorithm", false]], "linearprogram (class in evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.LinearProgram", false]], "max (evokit.evolvables.lgp.valuerange attribute)": [[2, "evokit.evolvables.lgp.ValueRange.max", false]], "min (evokit.evolvables.lgp.valuerange attribute)": [[2, "evokit.evolvables.lgp.ValueRange.min", false]], "module": [[0, "module-evokit", false], [1, "module-evokit.core", false], [1, "module-evokit.core.accountant", false], [1, "module-evokit.core.algorithm", false], [1, "module-evokit.core.evaluator", false], [1, "module-evokit.core.population", false], [1, "module-evokit.core.selector", false], [1, "module-evokit.core.variator", false], [2, "module-evokit.evolvables", false], [2, "module-evokit.evolvables.binstring", false], [2, "module-evokit.evolvables.funcs", false], [2, "module-evokit.evolvables.gp", false], [2, "module-evokit.evolvables.gp_visualiser", false], [2, "module-evokit.evolvables.lgp", false]], "mul() (in module evokit.evolvables.funcs)": [[2, "evokit.evolvables.funcs.mul", false]], "mutatebits (class in evokit.evolvables.binstring)": [[2, "evokit.evolvables.binstring.MutateBits", false]], "mutatenode (class in evokit.evolvables.gp)": [[2, "evokit.evolvables.gp.MutateNode", false]], "mutatesubtree (class in evokit.evolvables.gp)": [[2, "evokit.evolvables.gp.MutateSubtree", false]], "nodes() (evokit.evolvables.gp.expression method)": [[2, "evokit.evolvables.gp.Expression.nodes", false]], "nullevaluator (class in evokit.core.evaluator)": [[1, "evokit.core.evaluator.NullEvaluator", false]], "nullselector (class in evokit.core.selector)": [[1, "evokit.core.selector.NullSelector", false]], "nullvariator (class in evokit.core.variator)": [[1, "evokit.core.variator.NullVariator", false]], "operation (class in evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.Operation", false]], "p2dot() (in module evokit.evolvables.gp_visualiser)": [[2, "evokit.evolvables.gp_visualiser.p2dot", false]], "penalisenodecount (class in evokit.evolvables.gp)": [[2, "evokit.evolvables.gp.PenaliseNodeCount", false]], "populate() (evokit.core.population.abstractcollection method)": [[1, "evokit.core.population.AbstractCollection.populate", false]], "population (class in evokit.core.population)": [[1, "evokit.core.population.Population", false]], "pos (evokit.evolvables.gp.symbol attribute)": [[2, "evokit.evolvables.gp.Symbol.pos", false]], "primitive_by_arity() (evokit.evolvables.gp.expressionfactory method)": [[2, "evokit.evolvables.gp.ExpressionFactory.primitive_by_arity", false]], "program (class in evokit.evolvables.gp)": [[2, "evokit.evolvables.gp.Program", false]], "programfactory (class in evokit.evolvables.gp)": [[2, "evokit.evolvables.gp.ProgramFactory", false]], "publish() (evokit.core.accountant.accountant method)": [[1, "evokit.core.accountant.Accountant.publish", false]], "random() (evokit.evolvables.binstring.binarystring static method)": [[2, "evokit.evolvables.binstring.BinaryString.random", false]], "records (evokit.core.accountant.accountant attribute)": [[1, "evokit.core.accountant.Accountant.records", false]], "register() (evokit.core.algorithm.algorithm method)": [[1, "evokit.core.algorithm.Algorithm.register", false]], "reset_fitness() (evokit.core.population.individual method)": [[1, "evokit.core.population.Individual.reset_fitness", false]], "reset_fitness() (evokit.core.population.population method)": [[1, "evokit.core.population.Population.reset_fitness", false]], "retain_fitness (evokit.core.evaluator.evaluator attribute)": [[1, "evokit.core.evaluator.Evaluator.retain_fitness", false]], "run() (evokit.evolvables.lgp.linearprogram method)": [[2, "evokit.evolvables.lgp.LinearProgram.run", false]], "run_instruction() (evokit.evolvables.lgp.linearprogram method)": [[2, "evokit.evolvables.lgp.LinearProgram.run_instruction", false]], "select() (evokit.core.selector.nullselector method)": [[1, "evokit.core.selector.NullSelector.select", false]], "select() (evokit.core.selector.selector method)": [[1, "evokit.core.selector.Selector.select", false]], "select() (evokit.core.selector.simpleselector method)": [[1, "evokit.core.selector.SimpleSelector.select", false]], "select() (evokit.core.selector.tournamentselector method)": [[1, "evokit.core.selector.TournamentSelector.select", false]], "select_to_many() (evokit.core.selector.elitistsimpleselector method)": [[1, "evokit.core.selector.ElitistSimpleSelector.select_to_many", false]], "select_to_many() (evokit.core.selector.nullselector method)": [[1, "evokit.core.selector.NullSelector.select_to_many", false]], "select_to_many() (evokit.core.selector.selector method)": [[1, "evokit.core.selector.Selector.select_to_many", false]], "select_to_population() (evokit.core.selector.selector method)": [[1, "evokit.core.selector.Selector.select_to_population", false]], "selector (class in evokit.core.selector)": [[1, "evokit.core.selector.Selector", false]], "set() (evokit.evolvables.binstring.binarystring method)": [[2, "evokit.evolvables.binstring.BinaryString.set", false]], "simplelinearalgorithm (class in evokit.core.algorithm)": [[1, "evokit.core.algorithm.SimpleLinearAlgorithm", false]], "simpleselector (class in evokit.core.selector)": [[1, "evokit.core.selector.SimpleSelector", false]], "sin() (in module evokit.evolvables.funcs)": [[2, "evokit.evolvables.funcs.sin", false]], "sort() (evokit.core.population.population method)": [[1, "evokit.core.population.Population.sort", false]], "step() (evokit.core.algorithm.algorithm method)": [[1, "evokit.core.algorithm.Algorithm.step", false]], "step() (evokit.core.algorithm.linearalgorithm method)": [[1, "evokit.core.algorithm.LinearAlgorithm.step", false]], "step() (evokit.core.algorithm.simplelinearalgorithm method)": [[1, "evokit.core.algorithm.SimpleLinearAlgorithm.step", false]], "structnextline (class in evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.StructNextLine", false]], "structoverlines (class in evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.StructOverLines", false]], "structuntillabel (class in evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.StructUntilLabel", false]], "structurescope (class in evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.StructureScope", false]], "structuretype (class in evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.StructureType", false]], "sub() (in module evokit.evolvables.funcs)": [[2, "evokit.evolvables.funcs.sub", false]], "subject (evokit.core.accountant.accountant attribute)": [[1, "evokit.core.accountant.Accountant.subject", false]], "symbol (class in evokit.evolvables.gp)": [[2, "evokit.evolvables.gp.Symbol", false]], "symbolicevaluator (class in evokit.evolvables.gp)": [[2, "evokit.evolvables.gp.SymbolicEvaluator", false]], "tan() (in module evokit.evolvables.funcs)": [[2, "evokit.evolvables.funcs.tan", false]], "tournamentselector (class in evokit.core.selector)": [[1, "evokit.core.selector.TournamentSelector", false]], "trial_run() (in module evokit.evolvables.binstring)": [[2, "evokit.evolvables.binstring.trial_run", false]], "update() (evokit.core.algorithm.algorithm method)": [[1, "evokit.core.algorithm.Algorithm.update", false]], "value (evokit.core.accountant.accountantrecord attribute)": [[1, "evokit.core.accountant.AccountantRecord.value", false]], "valuerange (class in evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.ValueRange", false]], "variator (class in evokit.core.variator)": [[1, "evokit.core.variator.Variator", false]], "vary() (evokit.core.variator.nullvariator method)": [[1, "evokit.core.variator.NullVariator.vary", false]], "vary() (evokit.core.variator.variator method)": [[1, "evokit.core.variator.Variator.vary", false]], "vary() (evokit.evolvables.binstring.mutatebits method)": [[2, "evokit.evolvables.binstring.MutateBits.vary", false]], "vary() (evokit.evolvables.gp.crossoversubtree method)": [[2, "evokit.evolvables.gp.CrossoverSubtree.vary", false]], "vary() (evokit.evolvables.gp.mutatenode method)": [[2, "evokit.evolvables.gp.MutateNode.vary", false]], "vary() (evokit.evolvables.gp.mutatesubtree method)": [[2, "evokit.evolvables.gp.MutateSubtree.vary", false]], "vary_population() (evokit.core.variator.variator method)": [[1, "evokit.core.variator.Variator.vary_population", false]], "while (class in evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.While", false]]}, "objects": {"": [[0, 0, 0, "-", "evokit"]], "evokit": [[1, 0, 0, "-", "core"], [2, 0, 0, "-", "evolvables"]], "evokit.core": [[1, 0, 0, "-", "accountant"], [1, 0, 0, "-", "algorithm"], [1, 0, 0, "-", "evaluator"], [1, 0, 0, "-", "population"], [1, 0, 0, "-", "selector"], [1, 0, 0, "-", "variator"]], "evokit.core.accountant": [[1, 1, 1, "", "Accountant"], [1, 1, 1, "", "AccountantRecord"]], "evokit.core.accountant.Accountant": [[1, 2, 1, "", "__init__"], [1, 3, 1, "", "handlers"], [1, 2, 1, "", "is_registered"], [1, 2, 1, "", "publish"], [1, 3, 1, "", "records"], [1, 3, 1, "", "subject"]], "evokit.core.accountant.AccountantRecord": [[1, 3, 1, "", "event"], [1, 3, 1, "", "generation"], [1, 3, 1, "", "value"]], "evokit.core.algorithm": [[1, 1, 1, "", "Algorithm"], [1, 1, 1, "", "LinearAlgorithm"], [1, 1, 1, "", "SimpleLinearAlgorithm"]], "evokit.core.algorithm.Algorithm": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__new__"], [1, 3, 1, "", "accountants"], [1, 3, 1, "", "events"], [1, 3, 1, "", "generation"], [1, 2, 1, "", "register"], [1, 2, 1, "", "step"], [1, 2, 1, "", "update"]], "evokit.core.algorithm.LinearAlgorithm": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "step"]], "evokit.core.algorithm.SimpleLinearAlgorithm": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "step"]], "evokit.core.evaluator": [[1, 1, 1, "", "Evaluator"], [1, 1, 1, "", "NullEvaluator"]], "evokit.core.evaluator.Evaluator": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__new__"], [1, 2, 1, "", "evaluate"], [1, 2, 1, "", "evaluate_population"], [1, 3, 1, "", "retain_fitness"]], "evokit.core.evaluator.NullEvaluator": [[1, 2, 1, "", "evaluate"]], "evokit.core.population": [[1, 1, 1, "", "AbstractCollection"], [1, 1, 1, "", "Individual"], [1, 1, 1, "", "Population"]], "evokit.core.population.AbstractCollection": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "append"], [1, 2, 1, "", "draw"], [1, 2, 1, "", "extend"], [1, 2, 1, "", "populate"]], "evokit.core.population.Individual": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__new__"], [1, 2, 1, "", "copy"], [1, 4, 1, "", "fitness"], [1, 3, 1, "", "genome"], [1, 2, 1, "", "has_fitness"], [1, 2, 1, "", "reset_fitness"]], "evokit.core.population.Population": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "best"], [1, 2, 1, "", "copy"], [1, 2, 1, "", "reset_fitness"], [1, 2, 1, "", "sort"]], "evokit.core.selector": [[1, 5, 1, "", "Elitist"], [1, 1, 1, "", "ElitistSimpleSelector"], [1, 1, 1, "", "NullSelector"], [1, 1, 1, "", "Selector"], [1, 1, 1, "", "SimpleSelector"], [1, 1, 1, "", "TournamentSelector"]], "evokit.core.selector.ElitistSimpleSelector": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "select_to_many"]], "evokit.core.selector.NullSelector": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "select"], [1, 2, 1, "", "select_to_many"]], "evokit.core.selector.Selector": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "select"], [1, 2, 1, "", "select_to_many"], [1, 2, 1, "", "select_to_population"]], "evokit.core.selector.SimpleSelector": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "select"]], "evokit.core.selector.TournamentSelector": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "select"]], "evokit.core.variator": [[1, 1, 1, "", "NullVariator"], [1, 1, 1, "", "Variator"]], "evokit.core.variator.NullVariator": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "vary"]], "evokit.core.variator.Variator": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__new__"], [1, 2, 1, "", "vary"], [1, 2, 1, "", "vary_population"]], "evokit.evolvables": [[2, 0, 0, "-", "binstring"], [2, 0, 0, "-", "funcs"], [2, 0, 0, "-", "gp"], [2, 0, 0, "-", "gp_visualiser"], [2, 0, 0, "-", "lgp"]], "evokit.evolvables.binstring": [[2, 1, 1, "", "BinaryString"], [2, 1, 1, "", "CountBits"], [2, 1, 1, "", "MutateBits"], [2, 5, 1, "", "trial_run"]], "evokit.evolvables.binstring.BinaryString": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "clear"], [2, 2, 1, "", "copy"], [2, 2, 1, "", "flip"], [2, 2, 1, "", "get"], [2, 2, 1, "", "random"], [2, 2, 1, "", "set"]], "evokit.evolvables.binstring.CountBits": [[2, 2, 1, "", "evaluate"]], "evokit.evolvables.binstring.MutateBits": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "vary"]], "evokit.evolvables.funcs": [[2, 5, 1, "", "add"], [2, 5, 1, "", "avg"], [2, 5, 1, "", "cos"], [2, 5, 1, "", "div"], [2, 5, 1, "", "lim"], [2, 5, 1, "", "mul"], [2, 5, 1, "", "sin"], [2, 5, 1, "", "sub"], [2, 5, 1, "", "tan"]], "evokit.evolvables.gp": [[2, 1, 1, "", "CrossoverSubtree"], [2, 1, 1, "", "Expression"], [2, 1, 1, "", "ExpressionFactory"], [2, 1, 1, "", "MutateNode"], [2, 1, 1, "", "MutateSubtree"], [2, 1, 1, "", "PenaliseNodeCount"], [2, 1, 1, "", "Program"], [2, 1, 1, "", "ProgramFactory"], [2, 1, 1, "", "Symbol"], [2, 1, 1, "", "SymbolicEvaluator"]], "evokit.evolvables.gp.CrossoverSubtree": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "vary"]], "evokit.evolvables.gp.Expression": [[2, 2, 1, "", "__call__"], [2, 2, 1, "", "__init__"], [2, 2, 1, "", "copy"], [2, 4, 1, "", "factory"], [2, 2, 1, "", "nodes"]], "evokit.evolvables.gp.ExpressionFactory": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "build"], [2, 2, 1, "", "draw_primitive"], [2, 2, 1, "", "primitive_by_arity"]], "evokit.evolvables.gp.MutateNode": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "vary"]], "evokit.evolvables.gp.MutateSubtree": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "vary"]], "evokit.evolvables.gp.PenaliseNodeCount": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "evaluate"]], "evokit.evolvables.gp.Program": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "copy"]], "evokit.evolvables.gp.ProgramFactory": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "build"]], "evokit.evolvables.gp.Symbol": [[2, 2, 1, "", "__init__"], [2, 3, 1, "", "pos"]], "evokit.evolvables.gp.SymbolicEvaluator": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "evaluate"]], "evokit.evolvables.gp_visualiser": [[2, 6, 1, "", "ident"], [2, 5, 1, "", "p2dot"]], "evokit.evolvables.lgp": [[2, 1, 1, "", "Condition"], [2, 1, 1, "", "For"], [2, 1, 1, "", "If"], [2, 1, 1, "", "Instruction"], [2, 1, 1, "", "Label"], [2, 1, 1, "", "LinearProgram"], [2, 1, 1, "", "Operation"], [2, 1, 1, "", "StructNextLine"], [2, 1, 1, "", "StructOverLines"], [2, 1, 1, "", "StructUntilLabel"], [2, 1, 1, "", "StructureScope"], [2, 1, 1, "", "StructureType"], [2, 1, 1, "", "ValueRange"], [2, 1, 1, "", "While"]], "evokit.evolvables.lgp.Condition": [[2, 2, 1, "", "__init__"]], "evokit.evolvables.lgp.For": [[2, 2, 1, "", "__init__"]], "evokit.evolvables.lgp.If": [[2, 2, 1, "", "__init__"]], "evokit.evolvables.lgp.Label": [[2, 2, 1, "", "__init__"]], "evokit.evolvables.lgp.LinearProgram": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "check"], [2, 2, 1, "", "run"], [2, 2, 1, "", "run_instruction"]], "evokit.evolvables.lgp.Operation": [[2, 2, 1, "", "__init__"]], "evokit.evolvables.lgp.StructNextLine": [[2, 2, 1, "", "__init__"]], "evokit.evolvables.lgp.StructOverLines": [[2, 2, 1, "", "__init__"]], "evokit.evolvables.lgp.StructUntilLabel": [[2, 2, 1, "", "__init__"]], "evokit.evolvables.lgp.StructureScope": [[2, 2, 1, "", "__init__"]], "evokit.evolvables.lgp.StructureType": [[2, 2, 1, "", "__call__"]], "evokit.evolvables.lgp.ValueRange": [[2, 2, 1, "", "__init__"], [2, 3, 1, "", "max"], [2, 3, 1, "", "min"]], "evokit.evolvables.lgp.While": [[2, 2, 1, "", "__init__"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function", "6": "py:data"}, "terms": {"": [1, 2, 3, 5], "0": [2, 3, 4, 5, 7, 8, 9, 11, 14], "00000": [4, 9], "0th": 2, "1": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11], "10": [3, 4, 5, 7], "100": [3, 8], "1000": 8, "10000": [4, 9], "10191": 3, "106": 5, "11": [3, 4, 5, 6, 7], "11000": [4, 9], "11100": [4, 9], "11110": [4, 9], "11111": [4, 9], "12": [3, 5, 6], "126": 5, "127": 5, "13": [3, 5, 6], "14": [3, 5, 6, 7], "15": [3, 5, 6, 12], "16": [3, 5, 6], "17": [3, 5, 6, 12], "18": [3, 5, 6], "19": [3, 5, 6], "2": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11], "20": [3, 5, 6, 8], "21": [5, 6], "22": [5, 6, 8], "23": [5, 6, 8], "24": [5, 8], "24601": 4, "25": [5, 8], "26": [5, 8], "27": [5, 8], "28": [5, 8], "29": [5, 8], "3": [2, 3, 4, 5, 7, 9, 14], "30": [5, 8], "31": [5, 8], "32": 5, "33": 5, "34": [4, 5], "35": 5, "36": 5, "37": 5, "38": 5, "39": [3, 4, 5, 9], "4": [3, 4, 5, 7, 9], "40": 5, "41": 5, "42": 5, "43": 5, "44": 5, "45": 5, "46": 5, "47": 5, "48": 5, "49": 5, "496403249731884e": 5, "5": [3, 4, 5, 7, 9], "50": 5, "51070812473542": 5, "579": 8, "6": [4, 5, 7, 9], "65582808704299": 5, "7": [4, 5, 7, 9, 11], "8": [4, 5, 7, 9], "80": 5, "9": [4, 5, 7, 11], "9092974268256817": 5, "95855663138987": 5, "A": [1, 2, 4, 7, 9, 12], "At": [1, 2], "By": 5, "For": [0, 1, 2, 4, 6], "If": [0, 1, 2, 6, 7, 12, 14], "In": [1, 3, 6, 9], "It": [1, 5, 6, 8, 9], "That": 14, "The": [1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 14], "Then": [2, 8], "There": [6, 9], "To": [1, 2, 5, 6, 8, 9], "With": [4, 9, 11], "_": [1, 3, 4, 5, 8, 9, 11], "__": 1, "___g1afoa2nmh8zzcmrjbwfcne4js1f3y2trpivbmvxqp": 6, "__call__": [0, 2], "__func__": 6, "__future__": 8, "__init__": [0, 1, 2, 4, 6, 8, 9, 14], "__name__": 4, "__new__": [0, 1], "__str__": 8, "_dispatch_id": 2, "_fit": 14, "_get_ar": 14, "_population_": 1, "abc": [1, 2, 9], "abl": [3, 6], "abov": 3, "abspath": [3, 4, 5, 6, 8, 9], "abstract": [1, 2, 9], "abstractcollect": [0, 1], "abstractmethod": 9, "absurd": 6, "acc1": [1, 3], "accept": [1, 2], "access": [1, 4], "account": [0, 10, 13], "accountantrecord": [0, 1, 3], "accur": 3, "acquir": 6, "add": [0, 1, 2, 5, 6, 7], "addit": 1, "adopt": 5, "advanc": [1, 2, 11, 14], "advantag": 1, "affect": [1, 2, 4, 5, 8], "after": [1, 2, 3, 9, 12], "again": 12, "against": [2, 5], "algebra": 2, "algorithm": [0, 3, 4, 5, 9, 10, 11, 13, 14], "all": [1, 2, 4, 5, 6, 8, 9, 11, 12, 14], "alpha": 5, "alpha_from_index": 5, "alreadi": [1, 8], "also": [1, 2, 5, 9], "alter": 2, "altern": 3, "alwai": [8, 9], "an": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14], "ani": [1, 2, 6, 14], "annot": 8, "anoth": 1, "another_pop": 4, "anyth": 1, "api": 12, "append": [0, 1, 2, 3, 4, 5, 6, 8, 9], "appli": [1, 2, 4, 5, 8, 9], "applic": 1, "approach": [3, 6], "appropri": 5, "approxim": 5, "ar": [1, 2, 4, 5, 6, 9, 11, 12], "arg": [1, 2, 6, 14], "argument": [1, 2, 4, 5, 6, 14], "ariti": [1, 2, 5, 8, 14], "assign": [1, 2, 9], "associ": 2, "attach": 1, "attempt": 4, "attr": [2, 14], "attribut": [1, 2, 4, 6, 9, 14], "autom": 4, "automat": [1, 14], "avail": 12, "avg": [0, 2], "b": [3, 7, 8], "back": 2, "base": [1, 2, 5, 11], "bat": 12, "batch": 2, "becaus": [1, 3, 4, 5, 9], "becom": [1, 2, 14], "been": 8, "befor": [3, 5], "begin": [2, 3, 5, 6, 8, 10], "behav": [6, 12], "behaviour": [1, 2, 5, 6, 8, 10], "being": 2, "benchmark": 7, "best": [0, 1, 3, 5, 6, 8, 9, 12], "bests_color": 5, "better": 1, "bin": 8, "binari": [2, 4, 9], "binarystr": [0, 2, 3, 4, 8, 9, 11, 14], "binstr": [0, 3, 4, 9, 12, 13], "binstring_length": [3, 8], "bit": [2, 4, 8], "bit_count": 14, "bitdistanceevalu": [8, 11], "blue": 5, "bodi": 2, "bool": [1, 2, 7, 14], "both": 2, "bound": [2, 6], "bracket_s": 1, "budget": [1, 2, 3, 4, 9], "build": [0, 2, 5, 11], "built": [2, 11, 14], "by2": 6, "bypass": 5, "c": [1, 3, 7, 8], "call": [1, 2, 3, 4, 5, 6, 8, 9], "callabl": [1, 2, 5, 6, 14], "can": [1, 2, 3, 4, 5, 6, 8, 11, 12, 14], "cannot": 2, "care": 14, "case": [5, 6], "certain": 8, "chanc": 2, "chang": [1, 2, 4, 6], "check": [0, 2, 6, 12], "check_incr": 6, "child": [2, 5], "children": 2, "choos": 9, "cl": 1, "class": [1, 2, 3, 4, 6, 8, 9, 11, 14], "clear": [0, 1, 2], "close": 5, "closer": 2, "co": [0, 2, 5], "coariti": [1, 2, 8], "code": [3, 14], "coeffici": 2, "collect": [1, 2, 7, 9, 10], "color": 5, "colour": 5, "come": [8, 14], "command": 7, "common": 6, "compar": [2, 5], "comparison": 7, "compat": [8, 14], "complet": 11, "compon": 8, "comput": [1, 11], "cond": 2, "condit": [0, 2, 7], "conf": 12, "configur": [12, 14], "consequ": 8, "consid": [3, 6, 12], "consist": 2, "constant": [2, 7], "constraint": 2, "construct": [2, 5], "constructor": 9, "contain": [1, 2, 5, 12], "content": 13, "context": [1, 2, 7], "control": [1, 2, 10], "conveni": 2, "convert": 2, "copi": [0, 1, 2, 5, 6, 7, 8], "core": [0, 3, 4, 5, 6, 8, 9, 13, 14], "correct": 1, "correctli": 9, "cost": 2, "could": 1, "count": [1, 2], "countbit": [0, 2, 3, 4, 14], "counter": [1, 2], "creat": [1, 2, 5, 6, 8, 10], "crossov": 2, "crossover_subtre": 5, "crossoversubtre": [0, 2, 5], "ctrl": [1, 3, 4, 5, 8, 11], "current": [1, 2, 4, 6], "curv": [5, 8], "custom": [1, 2, 5, 8, 10], "d": [1, 6, 9], "data": [1, 2, 3], "decid": [1, 2, 5, 8, 9], "declar": [3, 6], "declin": 5, "decor": 1, "decreas": [4, 12], "deep": 2, "def": [3, 4, 5, 6, 7, 8, 9, 14], "default": [5, 9], "defin": [2, 4, 5, 6, 9, 11, 14], "delet": 2, "depend": [1, 8, 14], "deposit": 2, "depth": [2, 5], "deriv": [1, 2, 8, 10, 11], "describ": 11, "design": 6, "destroi": 1, "determin": 1, "diagram": 9, "dict": 1, "dictionari": 1, "differ": 1, "digit": 8, "digraph": 2, "directori": 12, "dispatch": 2, "distribut": 11, "div": [0, 2, 5], "do": [1, 2, 4, 5, 8, 9, 12, 14], "doc": 12, "doe": [1, 2, 4, 5, 6, 9, 12, 14], "domain": 5, "done": 9, "draw": [0, 1, 2, 5], "draw_primit": [0, 2], "drawn": 2, "dummi": 2, "dunder": 14, "duplic": [1, 4], "dure": [3, 12], "e": [4, 9], "each": [1, 2, 3, 4, 5, 6, 8, 9], "earlier": 5, "earliest": 1, "easi": 11, "easier": 9, "effect": [1, 2, 9, 14], "either": [1, 2, 12], "elit": [1, 5], "elitist": [0, 1, 5, 6, 8, 11, 12], "elitistsimpleselector": [0, 1], "els": [6, 8, 9], "empti": [2, 11], "encount": 1, "encourag": 5, "end": [1, 2, 6, 7], "enough": 1, "ensur": [1, 2, 12], "entir": [1, 4, 9], "environ": 12, "equal": 2, "erron": 12, "error": [4, 12], "evalu": [0, 2, 3, 4, 5, 9, 10, 11, 13, 14], "evaluate_popul": [0, 1, 3, 4], "even": 2, "event": [0, 1, 3], "everi": 1, "everyth": [4, 10, 12], "evofram": 12, "evokit": [3, 4, 5, 6, 7, 8, 9, 12], "evolutionari": [1, 8, 9, 11], "evolv": [0, 3, 4, 5, 7, 9, 12, 13], "exact": 5, "exactli": [4, 14], "exampl": [1, 2, 3, 4, 5, 6, 9, 11, 14], "examplealgorithm": 4, "examplesimpleselector": 9, "exce": [2, 5], "exceed": 2, "except": [1, 4, 9, 14], "exchang": [2, 5], "execut": 2, "exist": [2, 4, 5, 10], "expect": [5, 6, 8, 12], "explain": [8, 14], "export": 1, "expr": 2, "express": [0, 2, 14], "expressionfactori": [0, 2], "extend": [0, 1, 2, 6, 14], "extern": 14, "f": [3, 4, 5, 6, 7, 8, 9], "factori": [0, 2, 5, 8], "fail": 12, "fals": 2, "far": [1, 5], "favour": 2, "few": 12, "field": 1, "file": 12, "find": 14, "fire": [1, 3], "first": [1, 2, 4, 8, 9], "fit": [0, 1, 2, 4, 5, 6, 8, 9, 14], "fitnss": 5, "fix": 2, "flat": [1, 2], "flip": [0, 2, 4], "float": [1, 2, 5, 7, 8, 14], "follow": [1, 2, 3, 5, 6, 8, 9, 10, 12], "forc": 5, "form": [8, 10], "found": [2, 12], "framework": [6, 8, 11, 14], "free_draw": 2, "from": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14], "full": 5, "fun": 14, "func": [0, 5, 13], "function": [1, 2, 5, 6, 14], "functool": 6, "g": 9, "gener": [0, 1, 2, 3, 5, 6, 8, 9, 14], "generation_begin": [1, 3], "generation_count": [8, 11], "generational_best": 5, "genet": [2, 10], "genom": [0, 1, 2, 5, 8, 14], "genotyp": [1, 8], "get": [0, 1, 2], "getattr": 6, "getrandbit": 8, "give": 3, "given": [1, 2, 4], "global": [2, 12], "good": 6, "got": 8, "gp": [0, 5, 13], "gp_visualis": [0, 5, 13], "graphviz": 2, "greedi": 1, "group": 1, "guid": 11, "ha": [1, 4, 6, 8, 9, 12, 14], "handl": [5, 9], "handler": [0, 1, 3], "happen": 12, "has_fit": [0, 1, 14], "hasattr": 6, "have": [1, 2, 6, 8, 9, 14], "help": 6, "here": [4, 5, 8, 12], "higher": [1, 2, 5, 8], "highest": [1, 4, 5, 8, 9], "hint": 14, "hof_individu": 6, "hopefulli": 12, "how": [2, 5, 8, 9], "howev": 6, "hyperparamet": [2, 5], "i": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14], "ident": [0, 1, 2], "identifi": [1, 2], "ignor": 6, "illustr": [5, 9], "implement": [1, 2, 6, 8, 9, 11], "import": [3, 4, 5, 6, 7, 8, 9, 12], "impos": 2, "improv": 12, "includ": [2, 3, 11, 12], "increas": [2, 6, 12], "increment": [1, 6, 14], "incur": 2, "ind": [4, 5], "indefinit": 2, "independ": 1, "index": [2, 5, 11], "indexerror": 2, "indic": 2, "individu": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 14], "inflex": 6, "inform": [1, 3, 8, 9], "init_pop": [8, 11], "initi": [1, 4, 5, 6], "initial_const": 7, "initial_regist": 7, "initialis": [1, 2, 5], "input": [1, 2], "input_can_chang": 2, "insert": 1, "insid": 12, "inspect": 14, "instal": 11, "instanc": [2, 5, 6, 8], "instruct": [0, 2, 7], "int": [1, 2, 3, 4, 6, 8, 9, 14], "integ": 2, "interact": 12, "interceptor": [5, 10], "interchang": 11, "intern": [2, 5], "interoper": 11, "invok": [1, 2], "is_regist": [0, 1], "item": [1, 2, 4, 9], "iter": [1, 3, 4], "its": [1, 2, 4, 5, 6, 8, 9, 14], "itself": 2, "join": [3, 4, 5, 6, 8, 9], "just": [1, 7, 11, 14], "kei": 1, "known": 14, "kwarg": [1, 2, 6], "label": [0, 2, 5], "lambda": [1, 3, 9], "larg": 11, "last": [5, 8], "later": 5, "latter": 8, "layer_budget": 2, "learn": 5, "least": 2, "legend": 5, "len": [1, 3, 5, 8], "length": [2, 8, 14], "less": 7, "lexi": 1, "lgp": [0, 7, 13], "li": 2, "lighter": 5, "like": 14, "lim": [0, 2], "line": [2, 11, 14], "line_count": 2, "linear": [2, 7], "linearalgorithm": [0, 1], "linearprogram": [0, 2, 7], "linewidth": 5, "list": [1, 2, 5, 7, 8], "liter": 2, "loop": 2, "lt": 7, "m": [6, 12], "machineri": 1, "made": 1, "mai": [1, 2, 9], "maintain": [1, 2], "make": [9, 11, 12], "manag": [1, 14], "mani": [2, 5, 6, 9], "manual": [1, 9, 14], "map": 1, "match": [1, 2], "matplotlib": [5, 8], "matter": 14, "max": [0, 2], "max_val": 2, "mean": [5, 8], "member": [1, 14], "messag": 4, "meth": 14, "method": [1, 2, 3, 5, 6, 8, 9, 14], "methodtyp": 6, "might": 4, "min": [0, 2], "min_val": 2, "model": 10, "modif": 8, "modifi": [1, 5, 10], "modified_nb": 6, "modul": [3, 5, 11, 12, 13, 14], "monitor": 1, "monkei": 6, "more": [2, 7], "most": 3, "much": 2, "mul": [0, 2, 5], "multipl": [1, 2], "must": [1, 2, 5, 6, 8, 9], "mutat": [2, 4, 8], "mutatebit": [0, 2, 3, 4], "mutatenod": [0, 2], "mutatesubtre": [0, 2], "mutation_r": [2, 3, 4, 8], "my": 6, "my_best": 6, "n": 7, "name": [2, 6], "namedtupl": 1, "navig": 12, "nb": 6, "nb_dir": [3, 4, 5, 6, 8, 9], "nb_new": 6, "need": [5, 7], "neg": 2, "neither": 1, "never": [1, 5], "new": [1, 2, 4, 5, 6, 8, 9], "new_data": 1, "new_individu": 5, "new_nb": 6, "new_valu": 6, "nobodi": 6, "node": [0, 2, 5], "node_budget": [2, 5], "non": [2, 12], "none": [1, 2, 3, 4, 6, 8, 14], "nor": 1, "normal": 9, "note": [2, 4, 5, 8, 9, 14], "noth": [1, 2], "notic": 4, "now": [4, 6], "null": 4, "nullari": 2, "nullary_ratio": [2, 5], "nullevalu": [0, 1], "nullselector": [0, 1], "nullvari": [0, 1], "number": [1, 2, 4, 5, 6, 8], "number_step": 3, "numberbox": 6, "numberboxby2": 6, "numbox": 6, "o": [3, 4, 5, 6, 8, 9], "obj_color": 5, "object": [1, 2, 5, 14], "observ": [1, 4, 9], "occupi": 2, "occur": [1, 9, 12], "offici": 12, "offspr": [4, 8], "old": 9, "old_pop": 9, "old_valu": 6, "onc": 2, "one": [1, 2, 4, 5, 6, 7, 8, 14], "onemax": [1, 2, 10, 11, 14], "ones": [5, 8], "onli": [2, 3, 4, 5, 8, 9], "onto": 6, "oper": [0, 1, 2, 4, 5, 7, 8, 9, 10, 11], "operand": 2, "opr": 7, "option": 5, "order": [1, 2, 5, 8], "origin": [1, 2, 4, 6, 9], "original_incr": 6, "original_popul": 4, "original_select_to_mani": 6, "other": [1, 14], "otherwis": [2, 12, 14], "out": 2, "output": [1, 2, 4, 12], "output_popul": 4, "outsid": [1, 2], "over": [2, 5], "overal": 8, "overrid": [1, 3, 4, 6, 8, 9], "own": 9, "p": 6, "p2dot": [0, 2, 5], "packag": [11, 12, 13], "page": 11, "pair": 1, "parallel": 1, "paramet": [1, 2, 5], "parent": [1, 2, 4, 5, 8], "parent_evalu": 1, "parent_selector": 1, "parenthesi": 11, "part": 2, "pass": [2, 6], "patch": [5, 6], "path": [3, 4, 5, 6, 8, 9], "pattern": 10, "penalisenodecount": [0, 2], "penalti": 2, "perform": 2, "pick": 5, "pip": 12, "pleas": [2, 12], "plot": [5, 8], "plot_rang": 5, "plt": [5, 8], "po": [0, 1, 2], "point": [2, 5], "pointer": 2, "pool": 4, "pop": [1, 3, 4, 5, 9], "pop_siz": 5, "popul": [0, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14], "population_best": 6, "population_s": [3, 8, 11], "posit": [1, 2], "possibl": 3, "post_evalu": [1, 3], "post_parent_evalu": 1, "post_parent_select": 1, "post_select": [1, 3], "post_survivor_evalu": 1, "post_survivor_select": 1, "post_vari": [1, 3], "pre": 9, "predic": 2, "preserv": 1, "prevent": [2, 4], "primit": [2, 5], "primitive_by_ar": [0, 2], "primitive_pool": 2, "print": [3, 4, 5, 6, 7, 8, 9], "print_arg": 7, "prior": 1, "privat": 14, "probabl": [1, 2, 4, 5], "problem": 10, "process": [1, 4, 5], "produc": [1, 5, 9], "progf": 5, "program": [0, 2, 7, 10, 12], "programfactori": [0, 2, 5], "properti": [1, 2, 14], "protect": 2, "provid": [3, 9], "pubkei": 6, "public": 14, "publish": [0, 1, 3], "put": 4, "py": 12, "pyplot": [5, 8], "python": [2, 11, 12], "python3": 12, "r": [1, 7], "rais": [1, 2, 4, 8], "random": [0, 2, 3, 4, 8, 14], "randombitmut": [8, 11], "randomli": [2, 4, 5, 6], "rang": [1, 2, 3, 4, 5, 8, 9, 11], "ranker": 1, "rate": 8, "rather": 2, "re": 1, "read": 1, "rearrang": 1, "rebuild": 12, "record": [0, 1, 3], "recurs": 2, "red": 5, "ref": 8, "refer": [1, 4, 12], "reg_length": 2, "regist": [0, 1, 2, 3, 7], "regress": [2, 10], "relat": [5, 12], "rememb": 8, "remov": [1, 4, 9], "repeat": 2, "repeatedli": [1, 9], "replac": [1, 2, 4, 6], "report": [1, 3], "repres": [2, 5], "represent": [1, 2, 4, 5, 9, 10, 11, 14], "reproduc": 14, "requir": [1, 9], "rerun": 12, "reset": [1, 14], "reset_fit": [0, 1, 14], "resolv": 2, "respect": [1, 2, 8], "rest": 14, "result": [1, 2, 3, 4, 6, 9], "retain": [1, 8, 12], "retain_fit": [0, 1], "return": [1, 2, 3, 5, 6, 7, 8, 9, 14], "reward": 2, "right": 14, "run": [0, 1, 2, 4, 7, 11], "run_instruct": [0, 2], "runtim": [1, 10], "s1": [2, 8, 14], "same": [2, 9, 14], "sampl": [1, 12], "satisfi": 2, "scope": 2, "score": [4, 6], "script": 12, "sdist": 12, "search": 11, "section": 8, "see": [2, 14], "seed": [3, 4, 14], "sel": [1, 4, 6], "select": [0, 1, 2, 4, 5, 6, 8, 9], "select_to_mani": [0, 1, 6, 9], "select_to_popul": [0, 1, 3, 4, 9], "selected_item": 9, "selected_solut": 9, "selector": [0, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14], "self": [1, 2, 3, 4, 6, 8, 9, 14], "separ": [1, 6], "sequenc": [1, 2, 5, 7, 8], "set": [0, 1, 2, 4, 5, 8, 9, 14], "setattr": 6, "shape": 1, "share": [6, 9], "short": 3, "should": [1, 2, 3, 8, 9, 12], "show": [5, 8], "shown": 4, "shuffl": 2, "signatur": [1, 6, 14], "significantli": 8, "simpl": [1, 2, 5, 6, 9], "simplelinearalgorithm": [0, 1, 3, 5, 8], "simplelinearconstrol": 11, "simplelinearcontrol": [3, 8, 11], "simpleselector": [0, 1, 3, 4, 5, 8, 11], "simpli": 4, "sin": [0, 2, 5], "sinc": 8, "singl": [2, 9], "size": [1, 2, 4, 5, 8], "skip": 2, "small": 2, "smaller": 2, "so": [1, 2, 4, 5, 6, 8], "solut": 1, "someth": 9, "sort": [0, 1, 9], "sourc": [1, 2, 3, 11, 14], "span": 2, "specif": 2, "ssh": 6, "start": [1, 2], "state": [2, 7], "statement": 2, "static": [1, 2], "staticmethod": 8, "statist": [1, 10], "step": [0, 1, 3, 4, 5, 8, 11, 14], "step_count": 5, "still": [2, 3], "storag": 2, "store": [1, 2, 8], "str": [1, 2, 5, 6, 7, 8, 9], "strategi": [1, 9], "strict": [4, 9], "strikeout": 6, "string": [2, 4, 8, 9, 12], "structnextlin": [0, 2], "structoverlin": [0, 2, 7], "structuntillabel": [0, 2], "structur": [2, 7], "structurescop": [0, 2], "structuretyp": [0, 2], "stype": 2, "sub": [0, 2, 5, 7], "subclass": 1, "subject": [0, 1], "submodul": [0, 13], "subnod": 2, "subpackag": 13, "subscript": 5, "subsequ": 8, "subset": [4, 9], "subtre": 2, "successfulli": [5, 12], "sum": 8, "super": 9, "suppli": [1, 2], "support": [2, 5], "supportsrichcomparison": 1, "suppos": 6, "survivor": [1, 4], "survivor_evalu": 1, "survivor_selector": 1, "sy": [3, 4, 5, 6, 8, 9], "symbol": [0, 2, 10, 14], "symbolic_fit": 5, "symbolicevalu": [0, 2, 5], "t": [1, 2, 5, 14], "take": [1, 3, 4, 6, 8, 14], "taken": [2, 6], "tan": [0, 2], "target": 2, "technic": 11, "termin": [2, 5, 12], "test": 7, "text": 2, "than": [1, 2], "thatar": 8, "thei": 2, "them": 8, "therefor": 5, "thi": [1, 2, 4, 5, 6, 7, 8, 9, 12, 14], "thing": 9, "third": 4, "thoroughli": 14, "those": 1, "three": 9, "time": [1, 2, 4, 12], "titl": [5, 8], "todo": [2, 8], "togeth": [4, 5], "too": 2, "total": [2, 5], "tournament": [1, 5], "tournament_selector": 5, "tournamentselector": [0, 1, 5], "train": [5, 8], "transpar": 11, "tree": [2, 5], "tree_depth": 5, "trial": 11, "trial_run": [0, 2, 12], "trigger": [1, 3], "true": 2, "try": [4, 12], "tupl": [1, 2, 5, 6, 8, 9, 12, 14], "turn": 5, "tutori": [1, 2, 8, 11, 12], "two": 5, "type": [1, 2, 4, 5, 6, 7, 8, 9, 14], "typeerror": [1, 2], "typevar": 6, "typic": 9, "uber_secret_best_individual_nam": 6, "unari": 5, "uniform": 1, "uniformli": [2, 8], "uniqu": 2, "unlik": 4, "until": [2, 9], "updat": [0, 1, 3, 8, 12], "upgrad": 12, "us": [1, 2, 4, 5, 6, 8, 9, 11, 12], "user": 8, "util": 5, "valu": [0, 1, 2, 3, 5, 6, 8, 12, 14], "valueerror": [1, 2, 4, 8], "valuerang": [0, 2], "vari": [0, 1, 2, 8], "variat": [0, 2, 3, 4, 5, 10, 11, 12, 13, 14], "vary_popul": [0, 1, 3, 4], "vector": 2, "veri": 1, "verifi": 9, "view": 2, "virtual": 12, "visualis": [2, 5], "wai": [3, 6, 9], "weird_funct": 5, "well": 11, "what": [1, 3, 6, 14], "wheel": 11, "when": [1, 2, 3, 4, 5, 14], "where": [2, 5, 9], "wherea": 5, "whether": [1, 2], "which": [1, 2, 3, 4, 5, 6, 8], "while": [0, 2], "while_loop_cap": 2, "whose": [1, 2, 4, 5], "why": 11, "wider": 5, "wish": 12, "wit": 1, "within": 8, "without": [2, 3, 6], "work": [12, 14], "would": 6, "wrap": 6, "wrap_funct": 6, "wrapper": 6, "write": 1, "written": 11, "x": [1, 2, 3, 5, 8, 9], "x0": 5, "xlabel": [5, 8], "y": [2, 5], "yet": [1, 4], "ylabel": [5, 8], "you": [11, 12, 14]}, "titles": ["evokit package", "evokit.core package", "evokit.evolvables package", "Collect Runtime Statistics with <code class=\"docutils literal notranslate\"><span class=\"pre\">Accountant</span></code>", "Creating a Custom <code class=\"docutils literal notranslate\"><span class=\"pre\">Controller</span></code>", "Symbolic Regression with Genetic Programming", "Modifying Operators with the Interceptor Pattern", "&lt;no title&gt;", "Getting Started with OneMax", "Creating a Custom <code class=\"docutils literal notranslate\"><span class=\"pre\">Selector</span></code>", "Guides", "EvoKit Documentation", "Installing", "evokit", "Why EvoKit?"], "titleterms": {"account": [1, 3], "advanc": 10, "algorithm": [1, 8], "analys": 8, "api": 11, "ar": 14, "base": 10, "binstr": 2, "build": 12, "built": 12, "class": 10, "collect": 3, "complet": 14, "content": [0, 1, 2], "control": 4, "core": 1, "creat": [4, 9], "custom": [4, 9], "defin": 8, "describ": 14, "distribut": 12, "document": [11, 12, 14], "easi": 14, "evalu": [1, 8], "everyth": 8, "evokit": [0, 1, 2, 11, 13, 14], "evolv": 2, "from": 12, "func": 2, "genet": 5, "get": [8, 10, 11], "gp": 2, "gp_visualis": 2, "guid": 10, "indic": 11, "initialis": 8, "instal": 12, "interceptor": 6, "interchang": 14, "lgp": 2, "make": 14, "modifi": 6, "modul": [0, 1, 2], "onemax": 8, "oper": [6, 14], "packag": [0, 1, 2], "pattern": 6, "popul": [1, 8], "program": 5, "put": 8, "refer": 11, "regress": 5, "represent": 8, "result": 8, "run": [8, 12], "runtim": 3, "selector": [1, 9], "sourc": 12, "start": [8, 10, 11], "statist": 3, "submodul": [1, 2], "subpackag": 0, "symbol": 5, "tabl": 11, "togeth": 8, "transpar": 14, "trial": 12, "tutori": 10, "variat": [1, 8], "well": 14, "wheel": 12, "why": 14}})