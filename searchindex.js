Search.setIndex({"alltitles": {"API Reference:": [[10, null]], "Advanced Tutorials": [[9, "advanced-tutorials"]], "Analyse Results": [[7, "Analyse-Results"]], "Base Classes": [[9, "base-classes"]], "Build Documentation": [[11, "build-documentation"]], "Completely Documented": [[13, "completely-documented"]], "Define the Algorithm": [[7, "Define-the-Algorithm"]], "Designing the Algorithm": [[3, "Designing-the-Algorithm"]], "Evaluate": [[3, "Evaluate"]], "Evaluator": [[7, "Evaluator"]], "EvoKit Documentation": [[10, "evokit-documentation"]], "Getting Started": [[9, "getting-started"]], "Getting Started with OneMax": [[7, "Getting-Started-with-OneMax"]], "Getting Started:": [[10, null]], "Guides": [[9, "guides"]], "Indices and tables": [[10, "indices-and-tables"]], "Initialise Population": [[3, "Initialise-Population"], [7, "Initialise-Population"], [8, "Initialise-Population"]], "Install from PiPy": [[11, "install-from-pipy"]], "Install from Source": [[11, "install-from-source"]], "Installing": [[11, "installing"]], "Making a Custom Algorithm": [[3, "Making-a-Custom-Algorithm"]], "Making a Custom Selector": [[8, "Making-a-Custom-Selector"]], "Manual Selection": [[3, "Manual-Selection"]], "Modifying Operators with the Interceptor Pattern": [[5, "Modifying-Operators-with-the-Interceptor-Pattern"]], "Module contents": [[0, "module-evokit"], [1, "module-evokit.core"], [2, "module-evokit.evolvables"]], "Operators are Easy to Make": [[13, "operators-are-easy-to-make"]], "Operators are Interchangeable": [[13, "operators-are-interchangeable"]], "Optional Dependencies": [[11, "optional-dependencies"]], "Please don\u2019t look at me, I\u2019m not done yet.": [[6, "Please-don't-look-at-me,-I'm-not-done-yet."]], "Put Everything Together": [[7, "Put-Everything-Together"]], "Representation": [[7, "Representation"]], "Representations": [[9, "representations"]], "Reproducible": [[13, "reproducible"]], "Run the Algorithm": [[7, "Run-the-Algorithm"]], "Select": [[3, "Select"]], "Selector": [[8, "Selector"]], "Submodules": [[1, "submodules"], [2, "submodules"]], "Subpackages": [[0, "subpackages"]], "Symbolic Regression with Genetic Programming": [[4, "Symbolic-Regression-with-Genetic-Programming"]], "Title": [[11, "id1"]], "Transparent": [[13, "transparent"]], "Trial Run": [[11, "trial-run"]], "Variate": [[3, "Variate"]], "Variator": [[7, "Variator"]], "Well Described": [[13, "well-described"]], "Why EvoKit?": [[13, "why-evokit"]], "evokit": [[12, "evokit"]], "evokit package": [[0, "evokit-package"]], "evokit.core package": [[1, "evokit-core-package"]], "evokit.core.accountant module": [[1, "module-evokit.core.accountant"]], "evokit.core.algorithm module": [[1, "module-evokit.core.algorithm"]], "evokit.core.evaluator module": [[1, "module-evokit.core.evaluator"]], "evokit.core.population module": [[1, "module-evokit.core.population"]], "evokit.core.selector module": [[1, "module-evokit.core.selector"]], "evokit.core.variator module": [[1, "module-evokit.core.variator"]], "evokit.evolvables package": [[2, "evokit-evolvables-package"]], "evokit.evolvables.algorithms module": [[2, "module-evokit.evolvables.algorithms"]], "evokit.evolvables.binstring module": [[2, "module-evokit.evolvables.binstring"]], "evokit.evolvables.funcs module": [[2, "module-evokit.evolvables.funcs"]], "evokit.evolvables.gp module": [[2, "module-evokit.evolvables.gp"]], "evokit.evolvables.gp_visualiser module": [[2, "module-evokit.evolvables.gp_visualiser"]], "evokit.evolvables.lgp module": [[2, "module-evokit.evolvables.lgp"]], "evokit.evolvables.selectors module": [[2, "module-evokit.evolvables.selectors"]]}, "docnames": ["evokit", "evokit.core", "evokit.evolvables", "guides/examples/algorithm", "guides/examples/gp", "guides/examples/interceptor", "guides/examples/lgp", "guides/examples/onemax", "guides/examples/selector", "guides/index", "index", "install-and-build", "modules", "why"], "envversion": {"nbsphinx": 4, "sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["evokit.rst", "evokit.core.rst", "evokit.evolvables.rst", "guides/examples/algorithm.ipynb", "guides/examples/gp.ipynb", "guides/examples/interceptor.ipynb", "guides/examples/lgp.ipynb", "guides/examples/onemax.ipynb", "guides/examples/selector.ipynb", "guides/index.rst", "index.rst", "install-and-build.rst", "modules.rst", "why.rst"], "indexentries": {}, "objects": {"": [[0, 0, 0, "-", "evokit"]], "evokit": [[1, 0, 0, "-", "core"], [2, 0, 0, "-", "evolvables"]], "evokit.core": [[1, 0, 0, "-", "accountant"], [1, 0, 0, "-", "algorithm"], [1, 0, 0, "-", "evaluator"], [1, 0, 0, "-", "population"], [1, 0, 0, "-", "selector"], [1, 0, 0, "-", "variator"]], "evokit.core.accountant": [[1, 1, 1, "", "Accountant"], [1, 1, 1, "", "AccountantRecord"]], "evokit.core.accountant.Accountant": [[1, 2, 1, "", "__init__"], [1, 3, 1, "", "handlers"], [1, 2, 1, "", "is_registered"], [1, 2, 1, "", "publish"], [1, 3, 1, "", "records"], [1, 3, 1, "", "subject"]], "evokit.core.accountant.AccountantRecord": [[1, 3, 1, "", "event"], [1, 3, 1, "", "generation"], [1, 3, 1, "", "value"]], "evokit.core.algorithm": [[1, 1, 1, "", "Algorithm"]], "evokit.core.algorithm.Algorithm": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__new__"], [1, 3, 1, "", "accountants"], [1, 3, 1, "", "events"], [1, 3, 1, "", "generation"], [1, 2, 1, "", "register"], [1, 2, 1, "", "step"], [1, 2, 1, "", "update"]], "evokit.core.evaluator": [[1, 1, 1, "", "Evaluator"]], "evokit.core.evaluator.Evaluator": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__new__"], [1, 2, 1, "", "evaluate"], [1, 2, 1, "", "evaluate_population"], [1, 3, 1, "", "retain_fitness"]], "evokit.core.population": [[1, 1, 1, "", "AbstractCollection"], [1, 1, 1, "", "Individual"], [1, 1, 1, "", "Population"]], "evokit.core.population.AbstractCollection": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "append"], [1, 2, 1, "", "draw"], [1, 2, 1, "", "join"], [1, 2, 1, "", "populate"]], "evokit.core.population.Individual": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__new__"], [1, 2, 1, "", "copy"], [1, 4, 1, "", "fitness"], [1, 3, 1, "", "genome"], [1, 2, 1, "", "has_fitness"], [1, 2, 1, "", "reset_fitness"]], "evokit.core.population.Population": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "best"], [1, 2, 1, "", "copy"], [1, 2, 1, "", "reset_fitness"], [1, 2, 1, "", "sort"]], "evokit.core.selector": [[1, 1, 1, "", "Selector"]], "evokit.core.selector.Selector": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "select"], [1, 2, 1, "", "select_population"]], "evokit.core.variator": [[1, 1, 1, "", "NullVariator"], [1, 1, 1, "", "Variator"]], "evokit.core.variator.NullVariator": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "vary"]], "evokit.core.variator.Variator": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__new__"], [1, 2, 1, "", "vary"], [1, 2, 1, "", "vary_population"]], "evokit.evolvables": [[2, 0, 0, "-", "algorithms"], [2, 0, 0, "-", "binstring"], [2, 0, 0, "-", "funcs"], [2, 0, 0, "-", "gp"], [2, 0, 0, "-", "gp_visualiser"], [2, 0, 0, "-", "lgp"], [2, 0, 0, "-", "selectors"]], "evokit.evolvables.algorithms": [[2, 1, 1, "", "LinearAlgorithm"], [2, 1, 1, "", "SimpleLinearAlgorithm"]], "evokit.evolvables.algorithms.LinearAlgorithm": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "step"]], "evokit.evolvables.algorithms.SimpleLinearAlgorithm": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "step"]], "evokit.evolvables.binstring": [[2, 1, 1, "", "BinaryString"], [2, 1, 1, "", "CountBits"], [2, 1, 1, "", "MutateBits"], [2, 5, 1, "", "trial_run"]], "evokit.evolvables.binstring.BinaryString": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "clear"], [2, 2, 1, "", "copy"], [2, 2, 1, "", "flip"], [2, 2, 1, "", "get"], [2, 2, 1, "", "random"], [2, 2, 1, "", "set"]], "evokit.evolvables.binstring.CountBits": [[2, 2, 1, "", "evaluate"]], "evokit.evolvables.binstring.MutateBits": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "vary"]], "evokit.evolvables.funcs": [[2, 5, 1, "", "add"], [2, 5, 1, "", "avg"], [2, 5, 1, "", "cos"], [2, 5, 1, "", "div"], [2, 5, 1, "", "lim"], [2, 5, 1, "", "mul"], [2, 5, 1, "", "sin"], [2, 5, 1, "", "sub"], [2, 5, 1, "", "tan"]], "evokit.evolvables.gp": [[2, 1, 1, "", "CrossoverSubtree"], [2, 1, 1, "", "Expression"], [2, 1, 1, "", "ExpressionFactory"], [2, 1, 1, "", "MutateNode"], [2, 1, 1, "", "MutateSubtree"], [2, 1, 1, "", "PenaliseNodeCount"], [2, 1, 1, "", "Program"], [2, 1, 1, "", "ProgramFactory"], [2, 1, 1, "", "Symbol"], [2, 1, 1, "", "SymbolicEvaluator"]], "evokit.evolvables.gp.CrossoverSubtree": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "vary"]], "evokit.evolvables.gp.Expression": [[2, 2, 1, "", "__call__"], [2, 2, 1, "", "__init__"], [2, 2, 1, "", "copy"], [2, 4, 1, "", "factory"], [2, 2, 1, "", "nodes"]], "evokit.evolvables.gp.ExpressionFactory": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "build"], [2, 2, 1, "", "draw_primitive"], [2, 2, 1, "", "primitive_by_arity"]], "evokit.evolvables.gp.MutateNode": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "vary"]], "evokit.evolvables.gp.MutateSubtree": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "vary"]], "evokit.evolvables.gp.PenaliseNodeCount": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "evaluate"]], "evokit.evolvables.gp.Program": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "copy"]], "evokit.evolvables.gp.ProgramFactory": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "build"]], "evokit.evolvables.gp.Symbol": [[2, 2, 1, "", "__init__"], [2, 3, 1, "", "pos"]], "evokit.evolvables.gp.SymbolicEvaluator": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "evaluate"]], "evokit.evolvables.gp_visualiser": [[2, 6, 1, "", "ident"], [2, 5, 1, "", "p2dot"]], "evokit.evolvables.lgp": [[2, 6, 1, "", "CellSpecifier"], [2, 1, 1, "", "Condition"], [2, 1, 1, "", "For"], [2, 1, 1, "", "If"], [2, 1, 1, "", "Instruction"], [2, 1, 1, "", "Label"], [2, 1, 1, "", "LinearProgram"], [2, 1, 1, "", "Operation"], [2, 1, 1, "", "StateVectorType"], [2, 1, 1, "", "StructNextLine"], [2, 1, 1, "", "StructOverLines"], [2, 1, 1, "", "StructUntilLabel"], [2, 1, 1, "", "StructureScope"], [2, 1, 1, "", "StructureType"], [2, 1, 1, "", "ValueRange"], [2, 1, 1, "", "While"]], "evokit.evolvables.lgp.Condition": [[2, 2, 1, "", "__init__"]], "evokit.evolvables.lgp.For": [[2, 2, 1, "", "__init__"]], "evokit.evolvables.lgp.If": [[2, 2, 1, "", "__init__"]], "evokit.evolvables.lgp.Label": [[2, 2, 1, "", "__init__"]], "evokit.evolvables.lgp.LinearProgram": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "check_condition"], [2, 3, 1, "", "constants"], [2, 2, 1, "", "get_state_vector"], [2, 3, 1, "", "registers"], [2, 2, 1, "", "run"], [2, 2, 1, "", "run_instruction"], [2, 2, 1, "", "set_constants"], [2, 2, 1, "", "set_inputs"], [2, 2, 1, "", "set_registers"]], "evokit.evolvables.lgp.Operation": [[2, 2, 1, "", "__init__"]], "evokit.evolvables.lgp.StateVectorType": [[2, 3, 1, "", "constant"], [2, 3, 1, "", "input"], [2, 3, 1, "", "register"]], "evokit.evolvables.lgp.StructNextLine": [[2, 2, 1, "", "__init__"]], "evokit.evolvables.lgp.StructOverLines": [[2, 2, 1, "", "__init__"]], "evokit.evolvables.lgp.StructUntilLabel": [[2, 2, 1, "", "__init__"]], "evokit.evolvables.lgp.StructureScope": [[2, 2, 1, "", "__init__"]], "evokit.evolvables.lgp.StructureType": [[2, 2, 1, "", "__call__"]], "evokit.evolvables.lgp.ValueRange": [[2, 2, 1, "", "__init__"], [2, 3, 1, "", "max"], [2, 3, 1, "", "min"]], "evokit.evolvables.lgp.While": [[2, 2, 1, "", "__init__"], [2, 3, 1, "", "loop_cap"]], "evokit.evolvables.selectors": [[2, 5, 1, "", "Elitist"], [2, 1, 1, "", "NullSelector"], [2, 1, 1, "", "TournamentSelector"], [2, 1, 1, "", "TruncationSelector"]], "evokit.evolvables.selectors.NullSelector": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "select_population"]], "evokit.evolvables.selectors.TournamentSelector": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "select"]], "evokit.evolvables.selectors.TruncationSelector": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "select_population"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function", "6": "py:data"}, "terms": {"": [1, 2, 4], "0": [2, 3, 4, 6, 7, 8, 10, 13], "00000": 8, "0th": 2, "1": [2, 3, 4, 5, 6, 7, 8, 10, 13], "10": [3, 4, 6, 7], "100": 7, "1000": 7, "10000": 8, "106": 4, "11": [4, 5, 6], "11000": 8, "11100": [3, 8], "11110": [3, 8], "11111": [3, 8], "12": [4, 5], "126": 4, "127": 4, "13": [4, 5], "14": [4, 5, 6], "15": [4, 5, 11], "16": [4, 5], "17": [4, 5, 11], "18": [4, 5], "19": [4, 5], "2": [2, 3, 4, 5, 6, 7, 8, 10], "20": [2, 4, 5, 7], "21": [4, 5], "22": [4, 5], "23": [3, 4, 5], "24": [3, 4], "25": [3, 4, 8], "26": [3, 4, 8], "27": [3, 4, 8], "28": [3, 4, 8], "29": [3, 4, 8], "3": [2, 3, 4, 6, 7, 8, 13], "30": [3, 4, 8], "31": [3, 4], "32": [3, 4], "33": [3, 4], "34": [3, 4], "35": 4, "36": 4, "37": 4, "38": 4, "39": [3, 4, 6, 8], "4": [3, 4, 6, 7, 8], "40": 4, "41": 4, "42": 4, "43": 4, "44": 4, "45": 4, "46": 4, "47": 4, "48": 4, "49": 4, "496403249731884e": 4, "5": [3, 4, 6, 7, 8], "50": 4, "51070812473542": 4, "561": [], "576": 7, "6": [4, 6, 7], "65582808704299": 4, "7": [4, 6, 7, 10], "8": [4, 6, 7], "80": 4, "9": [4, 6, 7, 10], "9092974268256817": 4, "95855663138987": 4, "A": [1, 2, 3, 6, 8, 11], "As": 1, "At": [2, 7], "Be": 7, "By": 4, "For": [0, 1, 2, 3, 5, 8], "If": [0, 1, 2, 5, 6, 11, 13], "In": [1, 3, 5, 6, 7, 8], "It": [1, 3, 4, 5, 7], "Not": 7, "That": 13, "The": [1, 2, 3, 4, 5, 7, 8, 11, 13], "Then": 2, "There": 5, "These": [3, 7, 11], "To": [1, 2, 3, 4, 5, 8, 11], "With": [8, 10], "_": [1, 3, 4, 7, 10], "__": 1, "___g1afoa2nmh8zzcmrjbwfcne4js1f3y2trpivbmvxqp": 5, "__call__": [0, 2], "__func__": 5, "__future__": 7, "__init__": [0, 1, 2, 3, 5, 6, 7, 13], "__name__": 3, "__new__": [0, 1], "__str__": 7, "_dispatch_id": 2, "_false_": 3, "_fit": 13, "_get_ar": 13, "abc": [1, 2], "abl": 5, "about": 1, "abov": [3, 7], "abspath": [4, 5], "abstract": [1, 2], "abstractcollect": [0, 1], "absurd": 5, "acc1": 1, "accept": [1, 2, 3], "access": [1, 3], "account": [0, 9, 12], "accountantrecord": [0, 1], "acquir": 5, "across": 3, "act": 3, "add": [0, 1, 2, 4, 5, 6], "addit": 1, "adopt": 4, "advanc": [1, 2, 10, 13], "advantag": [2, 3], "affect": [1, 2, 3, 4, 7], "after": [1, 2, 8, 11], "again": 11, "against": [2, 4], "algebra": 2, "algorithm": [0, 4, 8, 9, 10, 12, 13], "alia": 2, "all": [1, 2, 3, 4, 5, 7, 8, 10, 11, 13], "alpha": 4, "alpha_from_index": 4, "alreadi": [1, 2, 7], "also": [1, 2, 3, 4], "alter": 2, "alwai": 8, "an": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13], "ani": [1, 2, 3, 5, 13], "annot": [2, 7], "another_pop": 3, "anyth": 1, "apart": 10, "api": [11, 13], "append": [0, 1, 2, 3, 4, 5, 7, 8], "appli": [1, 2, 3, 4, 7, 8], "approach": 5, "appropri": 4, "approxim": 4, "ar": [1, 2, 3, 4, 5, 7, 8, 10, 11], "arg": [1, 2, 5, 13], "argument": [1, 2, 3, 4, 5, 6, 13], "ariti": [1, 2, 4, 7, 13], "assign": [1, 2, 3, 8], "associ": 2, "attach": 1, "attr": [1, 2, 13], "attrgett": 8, "attribut": [1, 2, 3, 5, 7, 13], "autom": [3, 13], "automat": [1, 8, 13], "avg": [0, 2], "b": 6, "back": 2, "base": [1, 2, 4, 10], "bat": 11, "batch": 2, "becaus": [4, 7, 8], "becom": [1, 2, 13], "befor": [4, 7], "begin": [2, 3, 4, 5, 8], "behav": [3, 5, 11], "behaviour": [1, 2, 4, 5, 8, 9], "being": 2, "benchmark": 6, "best": [0, 1, 2, 3, 4, 5, 7, 8, 11], "bests_color": 4, "better": 1, "big": 7, "bin": 7, "binari": [2, 3, 7, 8], "binarystr": [0, 2, 3, 7, 8, 10, 13], "binstr": [0, 3, 8, 11, 12], "binstring_length": 7, "bit": [2, 3, 7, 8], "bit_count": 13, "bitdistanceevalu": [7, 10], "blue": 4, "bodi": 2, "bool": [1, 2, 6, 13], "both": 2, "bound": [2, 5], "bracket_s": 2, "budget": [1, 2, 3, 8], "build": [0, 2, 4, 10], "built": [2, 13], "by2": 5, "bypass": 4, "c": [1, 6], "call": [1, 2, 3, 4, 5, 6, 7], "callabl": [1, 2, 4, 5, 13], "can": [1, 2, 3, 4, 5, 7, 8, 10, 11, 13], "cannot": 2, "canon": 3, "case": [4, 5], "cell": 6, "cellspec": 2, "cellspecifi": [0, 2], "celltyp": 2, "certain": 7, "chanc": 2, "chang": [1, 2, 5, 7], "characterist": 3, "check": [2, 3, 5, 8, 11], "check_condit": [0, 2], "check_incr": 5, "child": [2, 4], "children": 2, "cl": 1, "class": [1, 2, 3, 5, 7, 8, 10, 13], "clear": [0, 1, 2], "close": 4, "closer": 2, "co": [0, 2, 4], "coariti": [1, 2, 7], "code": 13, "coeffici": 2, "collect": [1, 2, 6, 9], "color": 4, "colour": 4, "combin": [3, 7], "come": 13, "command": [6, 11], "comment": 13, "common": 5, "compar": [2, 4], "comparison": 6, "compat": 13, "compet": 3, "complet": 10, "compon": [3, 7], "comput": [1, 10], "cond": 2, "condit": [0, 2, 6], "conf": 11, "configur": [11, 13], "consid": [1, 3, 5, 11], "consist": 2, "constant": [0, 2, 6], "constraint": 2, "construct": [2, 4], "contain": [1, 2, 4, 11], "content": 12, "context": [1, 2, 6], "control": 2, "conveni": 2, "converg": 7, "convert": 2, "copi": [0, 1, 2, 4, 5, 6, 7], "core": [0, 3, 4, 5, 7, 8, 12, 13], "correct": [1, 7], "correctli": [3, 8], "cost": 2, "count": [1, 2], "countbit": [0, 2, 3, 13], "counter": [1, 2], "counterpart": 3, "creat": [1, 2, 3, 4, 5, 7], "creation": 3, "crossov": 2, "crossover_subtre": 4, "crossoversubtre": [0, 2, 4], "ctrl": [1, 3, 4, 7, 10], "current": [1, 2, 3, 5], "curv": [4, 7], "custom": [1, 2, 4, 7, 9], "customis": 3, "d": [1, 2, 5], "data": [1, 2], "decid": [1, 2, 4, 7], "declar": 5, "declin": 4, "decor": 2, "decreas": 11, "deep": 2, "def": [3, 4, 5, 6, 7, 8, 13], "default": [1, 4, 8], "defin": [2, 3, 4, 5, 8, 10, 13], "delet": 2, "demonstr": 7, "depend": [1, 10, 13], "deposit": 2, "depth": [2, 4], "deriv": [1, 2, 7, 8, 9, 10], "describ": 10, "design": 5, "destroi": 2, "determin": 1, "dict": 1, "dictionari": 1, "differ": 7, "digit": [3, 7], "digraph": 2, "directli": 11, "directori": 11, "dispatch": 2, "distanc": 7, "div": [0, 2, 4], "do": [1, 2, 3, 4, 7, 11, 13], "doc": 11, "doe": [1, 2, 3, 4, 5, 8, 11, 13], "domain": 4, "don": 9, "done": 9, "down": 7, "draw": [0, 1, 2, 4], "draw_primit": [0, 2], "drawn": 2, "dtype": 2, "dummi": 2, "dunder": 13, "duplic": 1, "dure": 11, "e": [3, 7], "each": [1, 2, 3, 4, 5, 7, 8], "earlier": 4, "easi": 10, "effect": [1, 2, 13], "either": [1, 2, 11], "elit": [2, 4], "elitist": [0, 2, 4, 5, 7, 10, 11], "els": [5, 7], "empti": [2, 10], "encount": 2, "encourag": 4, "end": [2, 5, 6], "enough": 8, "ensur": [1, 2, 3, 7], "entir": 1, "enum": 2, "environ": 11, "equal": 2, "erron": 11, "error": [3, 7, 11], "essenti": 3, "evalu": [0, 2, 4, 8, 9, 10, 12, 13], "evaluate_popul": [0, 1, 3], "even": 2, "event": [0, 1, 2], "everyth": [9, 11], "evokit": [3, 4, 5, 6, 7, 8, 11], "evolutionari": [1, 2, 3, 7, 8, 10], "evolv": [0, 3, 4, 6, 7, 8, 11, 12], "exact": 4, "exactli": 13, "exampl": [1, 2, 3, 4, 5, 7, 8, 10, 13], "examplealgorithm": [], "exce": [2, 4], "exceed": 2, "except": [1, 3, 7, 13], "exchang": [2, 4], "execut": 2, "exist": [2, 3, 4, 7, 9, 13], "expect": [4, 5, 11], "explain": [7, 13], "explicitli": 3, "export": 1, "expr": 2, "express": [0, 2, 13], "expressionfactori": [0, 2], "extend": [2, 3, 5], "extern": 13, "f": [3, 4, 5, 6, 7, 8], "factori": [0, 2, 4, 7], "fail": 11, "fals": [1, 2, 13], "fame": 7, "far": [2, 4], "favour": 2, "few": [11, 13], "field": 1, "file": 11, "find": 13, "fire": [1, 2], "first": [1, 2, 7], "fit": [0, 1, 2, 3, 4, 5, 7, 8, 13], "fitnss": 4, "fix": [2, 7], "flat": [1, 2], "flip": [0, 2, 3], "float": [1, 2, 4, 6, 7, 13], "float64": 2, "follow": [2, 3, 4, 5, 7, 8, 9, 11], "forc": 4, "form": 9, "found": [2, 7, 11], "framework": [5, 7, 10, 11, 13], "free_draw": 2, "from": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13], "from_pool": [1, 2], "from_popul": [1, 2, 8], "full": 4, "fun": 13, "func": [0, 4, 12], "function": [1, 2, 4, 5, 11, 13], "functool": 5, "gener": [0, 1, 2, 3, 4, 5, 7, 13], "generation_begin": 2, "generation_count": [7, 10], "generational_best": 4, "genet": [2, 9], "genom": [0, 1, 2, 4, 7, 13], "genotyp": 1, "get": [0, 1, 2], "get_state_vector": [0, 2], "getattr": 5, "getrandbit": 7, "give": 2, "given": [1, 2, 3, 8], "global": [2, 11], "good": 5, "got": 7, "gp": [0, 4, 12], "gp_visualis": [0, 4, 12], "graphviz": 2, "group": 1, "gt": 6, "guid": [3, 10], "ha": [1, 5, 11], "hall": 7, "hand": 3, "handl": 4, "handler": [0, 1], "happen": 11, "has_fit": [0, 1, 3, 13], "hasattr": 5, "have": [1, 2, 5, 13], "help": 5, "here": [4, 11], "higher": [1, 2, 4], "highest": [1, 2, 3, 4, 8], "hint": 13, "hof_individu": 5, "hopefulli": 11, "how": [2, 3, 4, 7], "howev": 5, "hyperparamet": [2, 4], "i": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13], "ident": [0, 1, 2], "identifi": [1, 2], "ignor": [1, 5], "illustr": 4, "immut": 2, "implement": [1, 2, 3, 5, 7, 8], "import": [3, 4, 5, 6, 7, 8, 11], "impos": 2, "improv": 11, "includ": [2, 3, 7, 10, 11], "increas": [2, 3, 5, 7, 11], "increment": [1, 5, 13], "incur": 2, "ind": [3, 4], "indefinit": 2, "independ": [1, 7], "index": [2, 4, 10], "indexerror": 2, "indic": 2, "individu": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 13], "inflex": 5, "inform": [1, 7], "init_pop": [7, 10], "initi": [1, 3, 4, 5, 7], "initial_const": 6, "initial_regist": 6, "initialis": [1, 2, 4], "input": [0, 1, 2, 6], "input_can_chang": 2, "insid": 11, "inspect": 13, "instal": 10, "instanc": [2, 4, 5, 7], "instead": 8, "instruct": [0, 2, 6], "int": [1, 2, 3, 5, 7, 8, 13], "integ": 2, "interact": 11, "interceptor": [4, 7, 9], "interchang": 10, "intern": [2, 4], "invok": 2, "is_regist": [0, 1], "item": [1, 2, 8], "iter": [1, 2, 3], "its": [1, 2, 3, 4, 5, 7, 13], "itself": [2, 3, 7], "join": [0, 1, 3, 4, 5], "joined_pool": 3, "just": [6, 8, 10, 13], "kei": [1, 8], "known": 13, "kwarg": [1, 2, 5], "label": [0, 2, 4], "lambda": [1, 3], "last": [1, 2, 4, 6, 7], "later": 4, "layer_budget": 2, "learn": 4, "least": [2, 3], "leav": 7, "legend": 4, "len": [1, 4, 7], "length": [2, 3, 7, 13], "less": [1, 6], "let": 13, "level": 8, "lexi": 1, "lgp": [0, 6, 12], "lighter": 4, "like": [3, 13], "lim": [0, 2], "line": [2, 6, 10, 13], "line_count": 2, "linear": [2, 6, 9], "linearalgorithm": [0, 2], "linearprogram": [0, 2, 6], "linewidth": 4, "list": [1, 2, 3, 4, 6, 7, 8], "liter": 2, "locat": 2, "long": 1, "look": 9, "loop": 2, "loop_cap": [0, 2], "lt": 6, "m": [5, 9, 11], "machineri": 1, "made": [1, 2], "mai": [1, 2], "maintain": [1, 2, 3], "make": [1, 7, 9, 10, 11], "manag": [1, 13], "mani": [2, 4, 5, 7], "manual": [1, 8, 13], "map": 1, "match": [1, 2], "matplotlib": [4, 7], "matter": 13, "max": [0, 2], "max_val": 2, "me": 9, "mean": 4, "measur": 7, "member": [2, 13], "mention": 3, "messag": 3, "meth": [1, 13], "method": [1, 2, 3, 4, 5, 7, 8, 13], "methodtyp": 5, "might": [], "min": [0, 2], "min_val": 2, "minim": 3, "minimum": 7, "miss": 6, "misunderstand": 3, "model": 9, "modifi": [2, 3, 4, 7, 9], "modified_nb": 5, "modul": [4, 10, 11, 12, 13], "monitor": 1, "monkei": 5, "more": [1, 2, 6, 13], "most": 6, "mu": 3, "much": 2, "mul": [0, 2, 4], "multipl": [1, 2], "mupluslambda": [], "must": [1, 2, 3, 4, 5, 7, 8], "mutabl": 2, "mutat": [2, 3, 7], "mutatebit": [0, 2, 3], "mutatenod": [0, 2], "mutatesubtre": [0, 2], "mutation_r": [2, 3, 7], "my": 5, "my_best": 5, "n": [3, 6, 8], "name": [2, 5], "namedtupl": 1, "nb": 5, "nb_dir": [4, 5], "nb_new": 5, "ndarrai": 2, "need": [4, 6], "neg": 2, "neither": 1, "never": [1, 4], "new": [1, 2, 3, 4, 5, 7], "new_data": 1, "new_individu": 4, "new_nb": 5, "new_pop": [3, 8], "new_valu": 5, "nobodi": 5, "node": [0, 2, 4], "node_budget": [2, 4], "non": [2, 11], "none": [1, 2, 3, 5, 7, 13], "nor": 1, "note": [2, 3, 4, 7, 13], "noth": 2, "notimplementederror": 1, "now": [5, 8], "nthe": 8, "null": 3, "nullari": 2, "nullary_ratio": [2, 4], "nullselector": [0, 2], "nullvari": [0, 1], "number": [1, 2, 4, 5, 7, 8], "numberbox": 5, "numberboxby2": 5, "numbox": 5, "o": [4, 5], "obj_color": 4, "object": [1, 2, 4, 13], "observ": [1, 3, 7], "occupi": 2, "occur": [1, 11], "offici": 11, "offspr": [1, 3, 7], "old_pop": 8, "old_valu": 5, "onc": [2, 3], "one": [1, 2, 3, 4, 5, 6, 7, 8, 13], "onemax": [1, 2, 3, 8, 9, 10, 13], "ones": [4, 7], "onli": [2, 3, 4, 7, 13], "onto": 5, "oper": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10], "operand": 2, "opr": 6, "option": [4, 7, 10], "order": [2, 4, 7], "origin": [1, 2, 5, 7], "original_incr": 5, "original_select_popul": 5, "other": [1, 13], "otherwis": [1, 2, 11, 13], "out": 2, "output": [1, 2, 11], "outsid": [1, 2], "over": [2, 4], "overrid": [1, 2, 3, 5, 7, 8], "p": [2, 5], "p2dot": [0, 2, 4], "packag": [10, 11, 12], "page": 10, "pair": 1, "parallel": 2, "paramet": [1, 2, 3, 4, 7], "parent": [1, 2, 3, 4, 7], "parent_evalu": 2, "parent_selector": 2, "parenthes": 10, "parenthesi": [], "part": [2, 7], "particular": 3, "pass": [2, 5, 7], "patch": [4, 5], "path": [4, 5], "pattern": 9, "penalisenodecount": [0, 2], "penalti": 2, "perform": [2, 3, 7], "permit": 1, "pick": 4, "pip": 11, "pipi": 10, "place": 8, "pleas": [2, 9, 11], "plot": [4, 7], "plot_rang": 4, "plt": [4, 7], "po": [0, 1, 2], "point": [2, 4], "pointer": 2, "pool": [], "pop": [1, 3, 4, 8], "pop_siz": 4, "popul": [0, 2, 4, 5, 9, 10, 11, 12, 13], "population_best": 5, "population_s": [7, 10], "posit": [1, 2, 6], "post_evalu": [1, 2], "post_parent_evalu": 2, "post_parent_select": 2, "post_select": 2, "post_survivor_evalu": 2, "post_survivor_select": 2, "post_vari": [1, 2], "predic": 2, "prefer": 1, "prevent": [2, 3], "previous": 8, "primit": [2, 4], "primitive_by_ar": [0, 2], "primitive_pool": 2, "print": [3, 4, 5, 6, 7, 8], "print_arg": 6, "prior": 1, "privat": 13, "probabl": [2, 3, 4, 7], "process": [3, 4, 8], "produc": [1, 4, 7], "progf": 4, "program": [0, 2, 6, 9, 11], "programfactori": [0, 2, 4], "properti": [1, 2, 13], "proportion": 1, "protect": 2, "provid": 7, "pubkei": 5, "public": 13, "publish": [0, 1], "purpos": 11, "py": 11, "pypi": 11, "pyplot": [4, 7], "python": [2, 10, 11], "r": [1, 6], "rais": [1, 2, 3, 7], "random": [0, 2, 3, 7, 13], "randombitmut": [7, 10], "randomli": [2, 4, 5], "rang": [1, 2, 3, 4, 7, 10], "ranker": 1, "rate": 7, "rather": [2, 3], "re": 1, "reach": 2, "read": 1, "rearrang": 1, "rebuild": 11, "receiv": [7, 8], "recent": 6, "record": [0, 1], "recurs": 2, "red": 4, "refer": [1, 11], "reflect": 7, "reg_length": 2, "regist": [0, 1, 2, 6], "regress": [2, 9], "relat": [4, 11], "rememb": 7, "remov": 1, "repeat": 2, "repeatedli": 8, "replac": [1, 2, 5, 8], "report": [1, 7], "repres": [2, 4, 8], "represent": [1, 2, 3, 4, 8, 10, 11, 13], "reproduc": 10, "requir": [1, 6, 7, 11], "rerun": 11, "reset": [1, 13], "reset_fit": [0, 1, 13], "resolv": 2, "respect": [1, 2], "result": [1, 2, 5], "retain": [1, 2, 7, 11], "retain_fit": [0, 1], "return": [1, 2, 3, 4, 5, 6, 7, 8, 13], "reward": 2, "rip": 9, "root": 11, "run": [0, 1, 2, 3, 6, 10], "run_instruct": [0, 2], "runtim": [1, 7, 9], "s1": [2, 7, 13], "same": [1, 2, 13], "sampl": [2, 11], "satisfi": 2, "scope": 2, "score": 5, "script": 11, "search": 10, "second": 2, "see": [2, 3, 8, 10, 13], "seed": 13, "sel": [2, 5], "select": [0, 1, 2, 4, 5, 7, 8], "select_popul": [0, 1, 2, 3, 5, 8], "select_to_popul": 1, "selection_budget": 8, "selector": [0, 3, 4, 5, 7, 9, 10, 11, 12, 13], "self": [1, 2, 3, 5, 7, 8, 13], "separ": [1, 5], "sequenc": [1, 2, 4, 6, 7], "set": [0, 1, 2, 3, 4, 8, 10, 13], "set_const": [0, 2], "set_input": [0, 2], "set_regist": [0, 2], "setattr": 5, "sever": 11, "share": 5, "should": [1, 2, 7, 11], "show": [4, 7], "shown": [], "shuffl": 2, "signatur": [1, 5, 13], "simpl": [2, 4, 5], "simplelinearalgorithm": [0, 1, 2, 4, 7, 10], "simplemupluslambda": 3, "simpleselector": 4, "sin": [0, 2, 4], "singl": 2, "size": [1, 2, 3, 4], "skip": [2, 3], "slow": 7, "small": [2, 7], "smaller": 2, "so": [2, 4, 5, 7], "sort": [0, 1, 8], "sourc": [1, 2, 10, 13], "span": 2, "specif": 2, "specifi": [2, 7], "ssh": 5, "stage": 3, "start": [1, 2], "state": [2, 6], "statement": 2, "statevectortyp": [0, 2], "static": [1, 2], "staticmethod": 7, "statist": [1, 9], "step": [0, 1, 2, 3, 4, 7, 10, 13], "step_count": 4, "still": 2, "stock": [7, 13], "stop": 2, "storag": 2, "store": [1, 2, 3, 7], "str": [1, 2, 4, 5, 6, 7], "strategi": 1, "strict": [3, 8], "strikeout": 5, "string": [2, 3, 7, 8, 11], "structnextlin": [0, 2], "structoverlin": [0, 2, 6], "structuntillabel": [0, 2], "structur": [2, 6], "structurescop": [0, 2], "structuretyp": [0, 2], "stype": 2, "sub": [0, 2, 4, 6], "subclass": 1, "subject": [0, 1], "submodul": [0, 12], "subnod": 2, "subpackag": 12, "subscript": 4, "subset": [3, 8], "subtre": 2, "successfulli": [4, 11], "sum": [3, 7, 8], "suppli": [1, 2], "support": [2, 4], "supportsrichcomparison": 1, "suppos": 5, "sure": 7, "survivor": 2, "survivor_evalu": 2, "survivor_selector": 2, "sy": [4, 5], "symbol": [0, 2, 9, 13], "symbolic_fit": 4, "symbolicevalu": [0, 2, 4], "t": [1, 2, 4, 9, 13], "tabl": 3, "take": [2, 3, 5, 7, 8], "taken": [2, 5], "tan": [0, 2], "target": 2, "technic": 10, "termin": [2, 4, 11], "test": [6, 11], "text": [2, 7], "th": 2, "than": [1, 2], "thei": 2, "them": 7, "therefor": 4, "thi": [1, 2, 3, 4, 5, 6, 7, 8, 11, 13], "those": 1, "three": 2, "through": 2, "time": [1, 2, 3, 11], "titl": [4, 7], "todo": 2, "togeth": 4, "too": [2, 7], "total": [2, 4], "tournament": [2, 4], "tournament_selector": 4, "tournamentselector": [0, 2, 4], "traceback": 6, "train": [3, 4, 7], "transpar": 10, "treat": 1, "tree": [2, 4], "tree_depth": 4, "trial": 10, "trial_run": [0, 2, 11], "trigger": 1, "true": [1, 2, 13], "truncat": [3, 7, 8], "truncationselector": [0, 2, 3, 7, 8, 10], "try": [3, 11], "tupl": [1, 2, 4, 5, 7, 8, 11, 13], "turn": 4, "tutori": [1, 2, 3, 7, 8, 10, 11], "two": [3, 4, 8], "type": [1, 2, 3, 4, 5, 6, 7, 8, 13], "typeerror": [1, 2, 6], "typevar": 5, "uber_secret_best_individual_nam": 5, "unari": 4, "understand": 3, "uniform": 2, "uniformli": [2, 7], "uninitialis": 3, "uniqu": 2, "unlik": 3, "until": [2, 8], "updat": [0, 1, 2, 7, 11], "upgrad": 11, "us": [1, 2, 3, 4, 5, 7, 8, 10, 11], "util": 4, "valu": [0, 1, 2, 3, 4, 5, 7, 8, 11, 13], "valueerror": [1, 2, 3, 7], "valuerang": [0, 2], "vari": [0, 1, 2, 7], "variabl": [1, 2, 7], "variat": [0, 2, 4, 9, 10, 11, 12, 13], "vary_popul": [0, 1, 3], "vector": 2, "veri": 2, "view": 2, "virtual": 11, "visualis": [2, 4, 7, 11], "wai": 5, "warn": 1, "weird_funct": 4, "well": [7, 10], "what": [1, 5, 10, 13], "when": [1, 2, 4], "where": [2, 4], "wherea": 4, "whether": [1, 2], "which": [1, 2, 3, 4, 5, 7, 8], "while": [0, 2], "whole": 1, "whose": [1, 2, 4], "wht": 13, "why": 10, "wider": 4, "wip": 9, "wish": 11, "wit": 1, "within": [7, 8], "without": [2, 5], "work": [11, 13], "workflow": 7, "would": 5, "wrap": 5, "wrap_funct": 5, "wrapper": 5, "write": 1, "written": [10, 13], "x": [1, 2, 4, 7], "x0": 4, "xlabel": [4, 7], "y": [2, 4], "yet": [1, 9], "ylabel": [4, 7], "you": [10, 11, 13]}, "titles": ["evokit package", "evokit.core package", "evokit.evolvables package", "Making a Custom Algorithm", "Symbolic Regression with Genetic Programming", "Modifying Operators with the Interceptor Pattern", "Please don\u2019t look at me, I\u2019m not done yet.", "Getting Started with OneMax", "Making a Custom Selector", "Guides", "EvoKit Documentation", "Installing", "evokit", "Why EvoKit?"], "titleterms": {"account": 1, "advanc": 9, "algorithm": [1, 2, 3, 7], "analys": 7, "api": 10, "ar": 13, "base": 9, "binstr": 2, "build": 11, "class": 9, "complet": 13, "content": [0, 1, 2], "core": 1, "custom": [3, 8], "defin": 7, "depend": 11, "describ": 13, "design": 3, "document": [10, 11, 13], "don": 6, "done": 6, "easi": 13, "evalu": [1, 3, 7], "everyth": 7, "evokit": [0, 1, 2, 10, 12, 13], "evolv": 2, "from": 11, "func": 2, "genet": 4, "get": [7, 9, 10], "gp": 2, "gp_visualis": 2, "guid": 9, "i": 6, "indic": 10, "initialis": [3, 7, 8], "instal": 11, "interceptor": 5, "interchang": 13, "lgp": 2, "look": 6, "m": 6, "make": [3, 8, 13], "manual": 3, "me": 6, "modifi": 5, "modul": [0, 1, 2], "onemax": 7, "oper": [5, 13], "option": 11, "packag": [0, 1, 2], "pattern": 5, "pipi": 11, "pleas": 6, "popul": [1, 3, 7, 8], "program": 4, "put": 7, "refer": 10, "regress": 4, "represent": [7, 9], "reproduc": 13, "result": 7, "run": [7, 11], "select": 3, "selector": [1, 2, 8], "sourc": 11, "start": [7, 9, 10], "submodul": [1, 2], "subpackag": 0, "symbol": 4, "t": 6, "tabl": 10, "titl": 11, "togeth": 7, "transpar": 13, "trial": 11, "tutori": 9, "variat": [1, 3, 7], "well": 13, "why": 13, "yet": 6}})