Search.setIndex({"alltitles": {"Accountant": [[3, "Accountant"]], "Advanced Tutorials": [[9, "advanced-tutorials"]], "Analyse Results": [[7, "Analyse-Results"]], "Contents:": [[9, null], [10, null]], "Controller Example": [[4, "Controller-Example"]], "Define the Algorithm": [[7, "Define-the-Algorithm"]], "Evaluator": [[7, "Evaluator"]], "EvoKit Documentation": [[10, "evokit-documentation"]], "Example: Implementing a Interceptor": [[6, "Example:-Implementing-a-Interceptor"]], "Example: Symbolic Regression": [[5, "Example:-Symbolic-Regression"]], "Getting Started": [[9, "getting-started"]], "Indices and tables": [[10, "indices-and-tables"]], "Initialise Population": [[7, "Initialise-Population"]], "Installation": [[10, "installation"]], "Introduction": [[9, "introduction"]], "Module contents": [[0, "module-evokit"], [1, "module-evokit.core"], [2, "module-evokit.evolvables"]], "OneMax Example": [[7, "OneMax-Example"]], "Put Everything Together": [[7, "Put-Everything-Together"]], "Representation": [[7, "Representation"]], "Run the Algorithm": [[7, "Run-the-Algorithm"]], "Selector": [[8, "Selector"]], "Selector Example": [[8, "Selector-Example"]], "Submodules": [[1, "submodules"], [2, "submodules"]], "Subpackages": [[0, "subpackages"]], "Variator": [[7, "Variator"]], "evokit": [[11, "evokit"]], "evokit package": [[0, "evokit-package"]], "evokit.core package": [[1, "evokit-core-package"]], "evokit.core.accountant module": [[1, "module-evokit.core.accountant"]], "evokit.core.controller module": [[1, "module-evokit.core.controller"]], "evokit.core.evaluator module": [[1, "module-evokit.core.evaluator"]], "evokit.core.population module": [[1, "module-evokit.core.population"]], "evokit.core.selector module": [[1, "module-evokit.core.selector"]], "evokit.core.variator module": [[1, "module-evokit.core.variator"]], "evokit.evolvables package": [[2, "evokit-evolvables-package"]], "evokit.evolvables.binstring module": [[2, "module-evokit.evolvables.binstring"]], "evokit.evolvables.funcs module": [[2, "module-evokit.evolvables.funcs"]], "evokit.evolvables.gp module": [[2, "module-evokit.evolvables.gp"]], "evokit.evolvables.gp_visualiser module": [[2, "evokit-evolvables-gp-visualiser-module"]], "evokit.evolvables.lgp module": [[2, "module-evokit.evolvables.lgp"]]}, "docnames": ["evokit", "evokit.core", "evokit.evolvables", "guides/examples/accountant", "guides/examples/controller", "guides/examples/gp", "guides/examples/interceptor", "guides/examples/onemax", "guides/examples/selector", "guides/index", "index", "modules"], "envversion": {"nbsphinx": 4, "sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["evokit.rst", "evokit.core.rst", "evokit.evolvables.rst", "guides/examples/accountant.ipynb", "guides/examples/controller.ipynb", "guides/examples/gp.ipynb", "guides/examples/interceptor.ipynb", "guides/examples/onemax.ipynb", "guides/examples/selector.ipynb", "guides/index.rst", "index.rst", "modules.rst"], "indexentries": {"__call__() (evokit.evolvables.gp.expression method)": [[2, "evokit.evolvables.gp.Expression.__call__", false]], "__init__() (evokit.evolvables.binstring.binarystring method)": [[2, "evokit.evolvables.binstring.BinaryString.__init__", false]], "__init__() (evokit.evolvables.binstring.mutatebits method)": [[2, "evokit.evolvables.binstring.MutateBits.__init__", false]], "__init__() (evokit.evolvables.gp.crossoversubtree method)": [[2, "evokit.evolvables.gp.CrossoverSubtree.__init__", false]], "__init__() (evokit.evolvables.gp.expression method)": [[2, "evokit.evolvables.gp.Expression.__init__", false]], "__init__() (evokit.evolvables.gp.expressionfactory method)": [[2, "evokit.evolvables.gp.ExpressionFactory.__init__", false]], "__init__() (evokit.evolvables.gp.mutatenode method)": [[2, "evokit.evolvables.gp.MutateNode.__init__", false]], "__init__() (evokit.evolvables.gp.mutatesubtree method)": [[2, "evokit.evolvables.gp.MutateSubtree.__init__", false]], "__init__() (evokit.evolvables.gp.penalisenodecount method)": [[2, "evokit.evolvables.gp.PenaliseNodeCount.__init__", false]], "__init__() (evokit.evolvables.gp.program method)": [[2, "evokit.evolvables.gp.Program.__init__", false]], "__init__() (evokit.evolvables.gp.programfactory method)": [[2, "evokit.evolvables.gp.ProgramFactory.__init__", false]], "__init__() (evokit.evolvables.gp.symbol method)": [[2, "evokit.evolvables.gp.Symbol.__init__", false]], "__init__() (evokit.evolvables.gp.symbolicevaluator method)": [[2, "evokit.evolvables.gp.SymbolicEvaluator.__init__", false]], "__init__() (evokit.evolvables.lgp.conditional method)": [[2, "evokit.evolvables.lgp.Conditional.__init__", false]], "__init__() (evokit.evolvables.lgp.for method)": [[2, "evokit.evolvables.lgp.For.__init__", false]], "__init__() (evokit.evolvables.lgp.if method)": [[2, "evokit.evolvables.lgp.If.__init__", false]], "__init__() (evokit.evolvables.lgp.label method)": [[2, "evokit.evolvables.lgp.Label.__init__", false]], "__init__() (evokit.evolvables.lgp.linearprogram method)": [[2, "evokit.evolvables.lgp.LinearProgram.__init__", false]], "__init__() (evokit.evolvables.lgp.operation method)": [[2, "evokit.evolvables.lgp.Operation.__init__", false]], "__init__() (evokit.evolvables.lgp.structnextline method)": [[2, "evokit.evolvables.lgp.StructNextLine.__init__", false]], "__init__() (evokit.evolvables.lgp.structoverlines method)": [[2, "evokit.evolvables.lgp.StructOverLines.__init__", false]], "__init__() (evokit.evolvables.lgp.structuntillabel method)": [[2, "evokit.evolvables.lgp.StructUntilLabel.__init__", false]], "__init__() (evokit.evolvables.lgp.valuerange method)": [[2, "evokit.evolvables.lgp.ValueRange.__init__", false]], "__init__() (evokit.evolvables.lgp.while method)": [[2, "evokit.evolvables.lgp.While.__init__", false]], "add() (in module evokit.evolvables.funcs)": [[2, "evokit.evolvables.funcs.add", false]], "add() (in module evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.add", false]], "args (evokit.evolvables.lgp.operation attribute)": [[2, "evokit.evolvables.lgp.Operation.args", false]], "avg() (in module evokit.evolvables.funcs)": [[2, "evokit.evolvables.funcs.avg", false]], "binarystring (class in evokit.evolvables.binstring)": [[2, "evokit.evolvables.binstring.BinaryString", false]], "build() (evokit.evolvables.gp.expressionfactory method)": [[2, "evokit.evolvables.gp.ExpressionFactory.build", false]], "build() (evokit.evolvables.gp.programfactory method)": [[2, "evokit.evolvables.gp.ProgramFactory.build", false]], "check() (evokit.evolvables.lgp.linearprogram method)": [[2, "evokit.evolvables.lgp.LinearProgram.check", false]], "clear() (evokit.evolvables.binstring.binarystring method)": [[2, "evokit.evolvables.binstring.BinaryString.clear", false]], "coarity (evokit.evolvables.lgp.linearprogram attribute)": [[2, "evokit.evolvables.lgp.LinearProgram.coarity", false]], "conditional (class in evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.Conditional", false]], "copy() (evokit.evolvables.binstring.binarystring method)": [[2, "evokit.evolvables.binstring.BinaryString.copy", false]], "copy() (evokit.evolvables.gp.expression method)": [[2, "evokit.evolvables.gp.Expression.copy", false]], "copy() (evokit.evolvables.gp.program method)": [[2, "evokit.evolvables.gp.Program.copy", false]], "cos() (in module evokit.evolvables.funcs)": [[2, "evokit.evolvables.funcs.cos", false]], "countbits (class in evokit.evolvables.binstring)": [[2, "evokit.evolvables.binstring.CountBits", false]], "crossoversubtree (class in evokit.evolvables.gp)": [[2, "evokit.evolvables.gp.CrossoverSubtree", false]], "div() (in module evokit.evolvables.funcs)": [[2, "evokit.evolvables.funcs.div", false]], "draw_primitive() (evokit.evolvables.gp.expressionfactory method)": [[2, "evokit.evolvables.gp.ExpressionFactory.draw_primitive", false]], "evaluate() (evokit.evolvables.binstring.countbits method)": [[2, "evokit.evolvables.binstring.CountBits.evaluate", false]], "evaluate() (evokit.evolvables.gp.penalisenodecount method)": [[2, "evokit.evolvables.gp.PenaliseNodeCount.evaluate", false]], "evaluate() (evokit.evolvables.gp.symbolicevaluator method)": [[2, "evokit.evolvables.gp.SymbolicEvaluator.evaluate", false]], "evokit": [[0, "module-evokit", false]], "evokit.evolvables": [[2, "module-evokit.evolvables", false]], "evokit.evolvables.binstring": [[2, "module-evokit.evolvables.binstring", false]], "evokit.evolvables.funcs": [[2, "module-evokit.evolvables.funcs", false]], "evokit.evolvables.gp": [[2, "module-evokit.evolvables.gp", false]], "evokit.evolvables.lgp": [[2, "module-evokit.evolvables.lgp", false]], "expression (class in evokit.evolvables.gp)": [[2, "evokit.evolvables.gp.Expression", false]], "expressionfactory (class in evokit.evolvables.gp)": [[2, "evokit.evolvables.gp.ExpressionFactory", false]], "factory (evokit.evolvables.gp.expression property)": [[2, "evokit.evolvables.gp.Expression.factory", false]], "flip() (evokit.evolvables.binstring.binarystring method)": [[2, "evokit.evolvables.binstring.BinaryString.flip", false]], "for (class in evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.For", false]], "function (evokit.evolvables.lgp.operation attribute)": [[2, "evokit.evolvables.lgp.Operation.function", false]], "get() (evokit.evolvables.binstring.binarystring method)": [[2, "evokit.evolvables.binstring.BinaryString.get", false]], "get_output_values() (evokit.evolvables.lgp.linearprogram method)": [[2, "evokit.evolvables.lgp.LinearProgram.get_output_values", false]], "if (class in evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.If", false]], "instruction (class in evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.Instruction", false]], "label (class in evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.Label", false]], "less() (in module evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.less", false]], "lim() (in module evokit.evolvables.funcs)": [[2, "evokit.evolvables.funcs.lim", false]], "linearprogram (class in evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.LinearProgram", false]], "max (evokit.evolvables.lgp.valuerange attribute)": [[2, "evokit.evolvables.lgp.ValueRange.max", false]], "min (evokit.evolvables.lgp.valuerange attribute)": [[2, "evokit.evolvables.lgp.ValueRange.min", false]], "module": [[0, "module-evokit", false], [2, "module-evokit.evolvables", false], [2, "module-evokit.evolvables.binstring", false], [2, "module-evokit.evolvables.funcs", false], [2, "module-evokit.evolvables.gp", false], [2, "module-evokit.evolvables.lgp", false]], "mul() (in module evokit.evolvables.funcs)": [[2, "evokit.evolvables.funcs.mul", false]], "mutatebits (class in evokit.evolvables.binstring)": [[2, "evokit.evolvables.binstring.MutateBits", false]], "mutatenode (class in evokit.evolvables.gp)": [[2, "evokit.evolvables.gp.MutateNode", false]], "mutatesubtree (class in evokit.evolvables.gp)": [[2, "evokit.evolvables.gp.MutateSubtree", false]], "nodes() (evokit.evolvables.gp.expression method)": [[2, "evokit.evolvables.gp.Expression.nodes", false]], "operation (class in evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.Operation", false]], "penalisenodecount (class in evokit.evolvables.gp)": [[2, "evokit.evolvables.gp.PenaliseNodeCount", false]], "pos (evokit.evolvables.gp.symbol attribute)": [[2, "evokit.evolvables.gp.Symbol.pos", false]], "primitive_by_arity() (evokit.evolvables.gp.expressionfactory method)": [[2, "evokit.evolvables.gp.ExpressionFactory.primitive_by_arity", false]], "program (class in evokit.evolvables.gp)": [[2, "evokit.evolvables.gp.Program", false]], "programfactory (class in evokit.evolvables.gp)": [[2, "evokit.evolvables.gp.ProgramFactory", false]], "random() (evokit.evolvables.binstring.binarystring static method)": [[2, "evokit.evolvables.binstring.BinaryString.random", false]], "run() (evokit.evolvables.lgp.linearprogram method)": [[2, "evokit.evolvables.lgp.LinearProgram.run", false]], "run_instruction() (evokit.evolvables.lgp.linearprogram method)": [[2, "evokit.evolvables.lgp.LinearProgram.run_instruction", false]], "runner (class in evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.Runner", false]], "set() (evokit.evolvables.binstring.binarystring method)": [[2, "evokit.evolvables.binstring.BinaryString.set", false]], "sin() (in module evokit.evolvables.funcs)": [[2, "evokit.evolvables.funcs.sin", false]], "structnextline (class in evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.StructNextLine", false]], "structoverlines (class in evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.StructOverLines", false]], "structuntillabel (class in evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.StructUntilLabel", false]], "sub() (in module evokit.evolvables.funcs)": [[2, "evokit.evolvables.funcs.sub", false]], "sub() (in module evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.sub", false]], "symbol (class in evokit.evolvables.gp)": [[2, "evokit.evolvables.gp.Symbol", false]], "symbolicevaluator (class in evokit.evolvables.gp)": [[2, "evokit.evolvables.gp.SymbolicEvaluator", false]], "tan() (in module evokit.evolvables.funcs)": [[2, "evokit.evolvables.funcs.tan", false]], "target (evokit.evolvables.lgp.operation attribute)": [[2, "evokit.evolvables.lgp.Operation.target", false]], "valuerange (class in evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.ValueRange", false]], "vary() (evokit.evolvables.binstring.mutatebits method)": [[2, "evokit.evolvables.binstring.MutateBits.vary", false]], "vary() (evokit.evolvables.gp.crossoversubtree method)": [[2, "evokit.evolvables.gp.CrossoverSubtree.vary", false]], "vary() (evokit.evolvables.gp.mutatenode method)": [[2, "evokit.evolvables.gp.MutateNode.vary", false]], "vary() (evokit.evolvables.gp.mutatesubtree method)": [[2, "evokit.evolvables.gp.MutateSubtree.vary", false]], "while (class in evokit.evolvables.lgp)": [[2, "evokit.evolvables.lgp.While", false]]}, "objects": {"": [[0, 0, 0, "-", "evokit"]], "evokit": [[1, 0, 0, "-", "core"], [2, 0, 0, "-", "evolvables"]], "evokit.core": [[1, 0, 0, "-", "accountant"], [1, 0, 0, "-", "controller"], [1, 0, 0, "-", "evaluator"], [1, 0, 0, "-", "population"], [1, 0, 0, "-", "selector"], [1, 0, 0, "-", "variator"]], "evokit.core.accountant": [[1, 1, 1, "", "Accountant"], [1, 1, 1, "", "AccountantRecord"]], "evokit.core.accountant.Accountant": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "is_registered"], [1, 2, 1, "", "publish"], [1, 3, 1, "", "subject"]], "evokit.core.accountant.AccountantRecord": [[1, 3, 1, "", "event"], [1, 3, 1, "", "generation"], [1, 3, 1, "", "value"]], "evokit.core.controller": [[1, 1, 1, "", "Controller"], [1, 1, 1, "", "LinearController"], [1, 1, 1, "", "SimpleLinearController"]], "evokit.core.controller.Controller": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__new__"], [1, 3, 1, "", "accountants"], [1, 3, 1, "", "events"], [1, 3, 1, "", "generation"], [1, 2, 1, "", "register"], [1, 2, 1, "", "step"], [1, 2, 1, "", "update"]], "evokit.core.controller.LinearController": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "step"]], "evokit.core.controller.SimpleLinearController": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "step"]], "evokit.core.evaluator": [[1, 1, 1, "", "Evaluator"], [1, 1, 1, "", "NullEvaluator"]], "evokit.core.evaluator.Evaluator": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__new__"], [1, 2, 1, "", "evaluate"], [1, 2, 1, "", "evaluate_population"], [1, 3, 1, "", "retain_fitness"]], "evokit.core.evaluator.NullEvaluator": [[1, 2, 1, "", "evaluate"]], "evokit.core.population": [[1, 1, 1, "", "AbstractCollection"], [1, 1, 1, "", "Individual"], [1, 1, 1, "", "Population"]], "evokit.core.population.AbstractCollection": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "append"], [1, 2, 1, "", "draw"], [1, 2, 1, "", "extend"], [1, 2, 1, "", "populate"]], "evokit.core.population.Individual": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__new__"], [1, 2, 1, "", "copy"], [1, 4, 1, "", "fitness"], [1, 2, 1, "", "has_fitness"], [1, 2, 1, "", "reset_fitness"]], "evokit.core.population.Population": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "best"], [1, 2, 1, "", "copy"], [1, 2, 1, "", "reset_fitness"], [1, 2, 1, "", "sort"]], "evokit.core.selector": [[1, 5, 1, "", "Elitist"], [1, 1, 1, "", "ElitistSimpleSelector"], [1, 1, 1, "", "NullSelector"], [1, 1, 1, "", "Selector"], [1, 1, 1, "", "SimpleSelector"], [1, 1, 1, "", "TournamentSelector"]], "evokit.core.selector.ElitistSimpleSelector": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "select_to_many"]], "evokit.core.selector.NullSelector": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "select"], [1, 2, 1, "", "select_to_many"]], "evokit.core.selector.Selector": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "select"], [1, 2, 1, "", "select_to_many"], [1, 2, 1, "", "select_to_population"]], "evokit.core.selector.SimpleSelector": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "select"]], "evokit.core.selector.TournamentSelector": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "select"]], "evokit.core.variator": [[1, 1, 1, "", "NullVariator"], [1, 1, 1, "", "Variator"]], "evokit.core.variator.NullVariator": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "vary"]], "evokit.core.variator.Variator": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__new__"], [1, 2, 1, "", "vary"], [1, 2, 1, "", "vary_population"]], "evokit.evolvables": [[2, 0, 0, "-", "binstring"], [2, 0, 0, "-", "funcs"], [2, 0, 0, "-", "gp"], [2, 0, 0, "-", "lgp"]], "evokit.evolvables.binstring": [[2, 1, 1, "", "BinaryString"], [2, 1, 1, "", "CountBits"], [2, 1, 1, "", "MutateBits"]], "evokit.evolvables.binstring.BinaryString": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "clear"], [2, 2, 1, "", "copy"], [2, 2, 1, "", "flip"], [2, 2, 1, "", "get"], [2, 2, 1, "", "random"], [2, 2, 1, "", "set"]], "evokit.evolvables.binstring.CountBits": [[2, 2, 1, "", "evaluate"]], "evokit.evolvables.binstring.MutateBits": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "vary"]], "evokit.evolvables.funcs": [[2, 5, 1, "", "add"], [2, 5, 1, "", "avg"], [2, 5, 1, "", "cos"], [2, 5, 1, "", "div"], [2, 5, 1, "", "lim"], [2, 5, 1, "", "mul"], [2, 5, 1, "", "sin"], [2, 5, 1, "", "sub"], [2, 5, 1, "", "tan"]], "evokit.evolvables.gp": [[2, 1, 1, "", "CrossoverSubtree"], [2, 1, 1, "", "Expression"], [2, 1, 1, "", "ExpressionFactory"], [2, 1, 1, "", "MutateNode"], [2, 1, 1, "", "MutateSubtree"], [2, 1, 1, "", "PenaliseNodeCount"], [2, 1, 1, "", "Program"], [2, 1, 1, "", "ProgramFactory"], [2, 1, 1, "", "Symbol"], [2, 1, 1, "", "SymbolicEvaluator"]], "evokit.evolvables.gp.CrossoverSubtree": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "vary"]], "evokit.evolvables.gp.Expression": [[2, 2, 1, "", "__call__"], [2, 2, 1, "", "__init__"], [2, 2, 1, "", "copy"], [2, 4, 1, "", "factory"], [2, 2, 1, "", "nodes"]], "evokit.evolvables.gp.ExpressionFactory": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "build"], [2, 2, 1, "", "draw_primitive"], [2, 2, 1, "", "primitive_by_arity"]], "evokit.evolvables.gp.MutateNode": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "vary"]], "evokit.evolvables.gp.MutateSubtree": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "vary"]], "evokit.evolvables.gp.PenaliseNodeCount": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "evaluate"]], "evokit.evolvables.gp.Program": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "copy"]], "evokit.evolvables.gp.ProgramFactory": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "build"]], "evokit.evolvables.gp.Symbol": [[2, 2, 1, "", "__init__"], [2, 3, 1, "", "pos"]], "evokit.evolvables.gp.SymbolicEvaluator": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "evaluate"]], "evokit.evolvables.lgp": [[2, 1, 1, "", "Conditional"], [2, 1, 1, "", "For"], [2, 1, 1, "", "If"], [2, 1, 1, "", "Instruction"], [2, 1, 1, "", "Label"], [2, 1, 1, "", "LinearProgram"], [2, 1, 1, "", "Operation"], [2, 1, 1, "", "Runner"], [2, 1, 1, "", "StructNextLine"], [2, 1, 1, "", "StructOverLines"], [2, 1, 1, "", "StructUntilLabel"], [2, 1, 1, "", "ValueRange"], [2, 1, 1, "", "While"], [2, 5, 1, "", "add"], [2, 5, 1, "", "less"], [2, 5, 1, "", "sub"]], "evokit.evolvables.lgp.Conditional": [[2, 2, 1, "", "__init__"]], "evokit.evolvables.lgp.For": [[2, 2, 1, "", "__init__"]], "evokit.evolvables.lgp.If": [[2, 2, 1, "", "__init__"]], "evokit.evolvables.lgp.Label": [[2, 2, 1, "", "__init__"]], "evokit.evolvables.lgp.LinearProgram": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "check"], [2, 3, 1, "", "coarity"], [2, 2, 1, "", "get_output_values"], [2, 2, 1, "", "run"], [2, 2, 1, "", "run_instruction"]], "evokit.evolvables.lgp.Operation": [[2, 2, 1, "", "__init__"], [2, 3, 1, "", "args"], [2, 3, 1, "", "function"], [2, 3, 1, "", "target"]], "evokit.evolvables.lgp.StructNextLine": [[2, 2, 1, "", "__init__"]], "evokit.evolvables.lgp.StructOverLines": [[2, 2, 1, "", "__init__"]], "evokit.evolvables.lgp.StructUntilLabel": [[2, 2, 1, "", "__init__"]], "evokit.evolvables.lgp.ValueRange": [[2, 2, 1, "", "__init__"], [2, 3, 1, "", "max"], [2, 3, 1, "", "min"]], "evokit.evolvables.lgp.While": [[2, 2, 1, "", "__init__"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "terms": {"": [2, 3, 5], "0": [1, 2, 3, 4, 5, 7, 8], "00000": [4, 8], "0b111110110": [], "0b1111110110": [], "0th": 2, "1": [1, 2, 3, 4, 5, 6, 7, 8], "10": [3, 4, 5], "100": [3, 7], "1000": 7, "10000": [4, 8], "101": 3, "10191": 3, "102": 3, "106": 5, "11": [4, 5], "11000": [4, 8], "11100": [4, 8], "11110": [4, 8], "11111": [4, 8], "12": [4, 5], "126": 5, "127": 5, "13": [4, 5, 6], "136": 3, "137": 3, "138": 3, "139": 3, "14": [5, 6], "15": 5, "16": 5, "17": 5, "18": 5, "19": 5, "193": 3, "196": 3, "197": 3, "199": 3, "2": [1, 3, 4, 5, 6, 7, 8], "20": [5, 7], "200": 3, "201": 3, "21": 5, "22": [5, 7], "23": [5, 7], "24": [5, 7], "24601": 4, "25": [5, 6, 7], "26": [5, 7], "27": [5, 7], "28": [5, 7], "29": [5, 7], "3": [3, 4, 5, 6, 8], "30": [5, 6, 7], "31": [5, 7], "32": [5, 6], "33": [5, 6], "34": [3, 4, 5, 6], "35": 5, "36": 5, "37": 5, "38": 5, "39": [3, 4, 5, 6, 8], "4": [4, 5, 8], "40": 5, "41": 5, "42": 5, "43": 5, "44": 5, "45": 5, "46": 5, "47": 5, "48": 5, "49": [3, 5], "496403249731884e": 5, "5": [3, 4, 5, 6, 8], "50": [3, 5], "51": 3, "51070812473542": 5, "55": [], "56": 6, "574": [], "579": 7, "59": 6, "6": [3, 4, 5, 8], "60": 6, "61": 6, "65582808704299": 5, "67": [], "7": [3, 4, 5, 8], "8": [3, 4, 5, 8], "80": 5, "9": [4, 5], "9092974268256817": 5, "95855663138987": 5, "98": 3, "99": 3, "A": [1, 2, 3, 4, 8], "As": [], "At": 2, "Be": [], "By": 5, "For": [0, 1, 2, 4, 6], "If": [0, 1, 2, 6], "In": [1, 3, 6, 8], "It": [1, 5, 6, 7, 8], "No": 6, "The": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "Then": [2, 7], "There": [3, 6, 8], "These": 3, "To": [5, 6, 7, 8], "With": [4, 8], "_": [1, 3, 4, 5, 7, 8], "__": 1, "___g1afoa2nmh8zzcmrjbwfcne4js1f3y2trpivbmvxqp": 6, "__call__": [0, 2], "__func__": 6, "__future__": 7, "__init__": [0, 1, 2, 3, 4, 6, 7, 8], "__main__": [], "__name__": 4, "__new__": [0, 1, 3], "__str__": 7, "_assert_pos_out_of_bound": [], "_i": 9, "_population_": 1, "_record": 9, "_somewhat_": [], "abc": [1, 2, 8], "abl": 6, "abov": 3, "abspath": [3, 4, 5, 6, 7, 8], "abstract": [1, 8], "abstractcollect": [0, 1], "abstractmethod": 8, "absurd": 6, "acc": 3, "acc1": 3, "accept": [1, 2], "access": [1, 4], "account": [0, 9, 10, 11], "accountantrecord": [0, 1, 3], "acquir": [1, 6], "action": 3, "actual": [], "add": [0, 1, 2, 3, 5, 6], "addit": [1, 9], "adopt": 5, "advanc": [1, 10], "advantag": [1, 3], "affect": [1, 2, 4, 5, 7], "after": [1, 2, 3, 8], "against": [2, 5], "algorithm": [1, 3, 5, 8, 9, 10], "algorothm": 1, "all": [1, 2, 4, 5, 6, 7, 8, 9], "alongsid": 1, "alpha": 5, "alpha_from_index": 5, "alreadi": [1, 7], "also": [1, 2, 5, 8], "altern": 1, "alwai": [7, 8], "an": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "ancestor": 9, "ani": [1, 2, 6], "annot": [2, 7], "anoth": [1, 3], "another_pop": 4, "anyth": 1, "append": [0, 1, 3, 4, 5, 6, 7, 8], "appi": [], "appli": [1, 2, 3, 4, 5, 7, 8], "applic": 1, "approach": [3, 6], "appropri": 5, "approxim": 5, "ar": [1, 2, 3, 4, 5, 6, 8], "arg": [0, 1, 2, 3, 6], "argument": [1, 2, 4, 5, 6], "ariti": [1, 2, 5, 7], "aritymismatch": [], "asset": 3, "assign": [1, 2, 8, 9], "associ": 2, "attach": 1, "attempt": 4, "attr": 2, "attribut": [1, 2, 4, 6, 8], "autom": 4, "automat": 1, "avg": [0, 2], "b": [2, 7], "back": 2, "bad": 6, "badsymbolerror": [], "base": [1, 2, 5, 9], "batch": 2, "becaus": [1, 4, 5, 8], "been": [1, 7], "befor": 5, "begin": [2, 5, 6, 7, 9], "behav": 6, "behaviour": [1, 5, 6, 7, 9], "being": [2, 9], "benchmark": 10, "best": [0, 1, 3, 5, 6, 7, 8], "bests_color": 5, "better": 1, "bin": 7, "binari": [2, 4, 8, 9], "binarystr": [0, 2, 3, 4, 7, 8], "binstr": [0, 3, 4, 8, 11], "binstring_length": [3, 7], "bit": [2, 4, 7], "bitdistanceevalu": 7, "blue": 5, "bool": [1, 2], "both": [2, 9], "bottlecap": 1, "bound": 6, "bracket_s": 1, "budget": [1, 2, 3, 4, 8], "build": [0, 2, 5, 10], "built": 2, "by2": 6, "bypass": 5, "c": [3, 7], "call": [1, 2, 3, 4, 5, 6, 7], "callabl": [1, 2, 3, 5, 6], "can": [1, 2, 3, 4, 5, 6, 7, 9], "cannot": [1, 2], "capabl": 9, "case": [5, 6], "cell": [3, 6], "certain": 7, "chanc": 2, "chang": [1, 2, 4, 6], "check": [0, 2, 6], "check_incr": 6, "checker": [], "child": [2, 5], "children": 2, "choos": 8, "cl": 1, "class": [1, 2, 3, 4, 6, 7, 8, 9], "clear": [0, 1, 2], "close": 5, "closer": 2, "co": [0, 2, 5], "coariti": [0, 1, 2, 7], "coeffici": 2, "collect": [1, 2, 8, 9], "color": 5, "colour": 5, "come": 7, "common": 6, "compar": [2, 3, 5], "compat": 7, "compon": [7, 9], "comput": [1, 10], "concret": 9, "cond": 2, "condit": [0, 2], "consequ": 7, "consid": 6, "consist": [], "constant": 2, "constraint": 2, "construct": [2, 5], "constructor": 8, "contain": [2, 5], "content": 11, "context": 1, "control": [0, 3, 5, 7, 9, 10, 11], "conveni": 2, "copi": [0, 1, 2, 5, 6, 7, 9], "core": [0, 3, 4, 5, 6, 7, 8, 11], "correct": 1, "correctli": 8, "correspond": 1, "cost": 2, "cost_budget": [], "count": [1, 2], "countbit": [0, 2, 3, 4], "counter": 1, "courtesi": [], "creat": [1, 2, 3, 4, 5, 6, 7, 8], "crossov": [2, 9], "crossover_subtre": 5, "crossoversubtre": [0, 2, 5], "cselector": [], "ctrl": [3, 4, 5, 7], "current": [1, 4, 6], "curv": [5, 7], "custom": [1, 5, 7, 8, 9], "custom_step": 3, "d": [1, 6, 8], "data": [1, 2], "decid": [1, 5, 7, 8], "declar": 6, "declin": 5, "decor": 1, "decreas": 4, "deep": 2, "def": [3, 4, 5, 6, 7, 8], "default": [5, 8], "default_symbol_nam": [], "defaultvari": [], "defin": [1, 4, 5, 6, 8, 9], "delet": 2, "denot": [], "depend": [1, 7], "deposit_symbol": [], "depth": [2, 5], "deriv": [1, 7, 9], "design": [6, 9], "destroi": 1, "develop": 10, "diagram": 8, "dict": 1, "dictionari": 1, "differ": [], "digit": 7, "dispatch": [], "dispatch_id": [], "div": [0, 2, 5], "do": [1, 2, 4, 5, 7, 8, 9], "doc": 9, "docstr": 3, "document": 1, "doe": [1, 2, 3, 4, 5, 6, 8], "domain": 5, "done": 8, "dot": [], "draw": [0, 1, 2, 5], "draw_primit": [0, 2], "drawn": 2, "dtype": 2, "dummi": 2, "duplic": [1, 4], "dure": 3, "dynam": [], "e": [4, 8], "each": [1, 2, 3, 4, 5, 6, 7, 8], "earlier": 5, "earliest": 1, "easier": [3, 8], "effect": [1, 8], "either": 1, "elit": [1, 5], "elitist": [0, 1, 5, 6, 7], "elitistsimpleselector": [0, 1], "els": [6, 7, 8], "empti": 2, "encapsul": 9, "encount": 1, "encourag": 5, "end": [1, 6], "enforc": [], "enough": 1, "ensur": [1, 2], "entir": [1, 4, 8], "env": [], "episode_count": [], "error": 4, "evalu": [0, 2, 3, 4, 5, 8, 9, 11], "evaluate_episod": [], "evaluate_popul": [0, 1, 3, 4], "evaluate_step": [], "even": 2, "event": [0, 1, 3], "everi": 1, "everyth": [4, 9], "evofram": 3, "evokit": [3, 4, 5, 6, 7, 8, 9], "evolutionari": [1, 3, 7, 8, 9, 10], "evolv": [0, 3, 4, 5, 8, 10, 11], "exact": 5, "exactli": 4, "exampl": [1, 2, 9], "examplecontrol": 4, "examplesimpleselector": 8, "exce": [2, 5], "exceed": 2, "except": [1, 4], "exchang": [2, 5], "exist": [2, 3, 4, 5, 9], "expect": [5, 6, 7], "explain": 7, "export": 1, "expr": 2, "expr1": [], "expr2": [], "express": [0, 2], "expressionfactori": [0, 2], "extend": [0, 1, 6, 10], "extens": 10, "f": [3, 4, 5, 6, 7, 8], "factori": [0, 2, 5, 7], "fals": [1, 2], "far": [1, 5], "favour": 2, "field": 1, "file": 3, "find": 1, "fire": [1, 3], "first": [1, 2, 4, 7, 8], "fit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "fitnss": 5, "fix": 2, "flat": [1, 2], "flip": [0, 2, 4], "float": [1, 2, 5, 7], "float64": 2, "follow": [1, 3, 5, 6, 7, 8, 9], "forc": 5, "form": 7, "found": 2, "framework": [6, 7, 10], "free_draw": 2, "from": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "full": 5, "func": [0, 5, 11], "funciton": [], "function": [0, 1, 2, 5, 6], "functool": 6, "g": 8, "gener": [0, 1, 2, 3, 5, 6, 7, 8], "generation_begin": 3, "generation_count": 7, "generational_best": 5, "genet": [2, 5, 9], "genom": [1, 2, 5, 7, 9, 10], "genotyp": 7, "get": [0, 2, 10], "get_output_valu": [0, 2], "getattr": 6, "getrandbit": 7, "git": 3, "given": [1, 2, 4], "global": 1, "good": [6, 10], "got": 7, "gp": [0, 5, 11], "gp_visualis": [0, 5, 11], "greedi": 1, "gt": [3, 6], "gymevalu": [], "ha": [1, 3, 4, 6, 7, 8], "handl": [5, 8], "handler": [1, 3], "hard": 9, "has_fit": [0, 1], "hasattr": 6, "have": [1, 2, 6, 7, 8], "help": 6, "here": [4, 5, 7], "hi": [], "higher": [1, 2, 5, 7], "highest": [1, 4, 5, 7, 8], "hof_individu": 6, "how": [5, 7, 8, 9], "howev": 6, "hyperparamet": [2, 5], "i": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "identifi": 1, "ignor": 6, "illustr": [5, 8], "implement": [1, 2, 7, 8, 9, 10], "import": [3, 4, 5, 6, 7, 8], "includ": 2, "incorpor": 9, "increas": [2, 6], "increment": [1, 6], "incur": 2, "ind": [4, 5], "independ": 1, "index": [1, 2, 5, 10], "indexerror": 2, "indic": 2, "individu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "inf": 2, "inflex": 6, "inform": [3, 7, 8, 9], "inherit": 1, "init_pop": 7, "initi": [3, 4, 5, 6], "initialis": [1, 2, 5], "input": [1, 2], "input_can_chang": 2, "insert": 1, "instanc": [2, 5, 6, 7], "instruct": [0, 2], "int": [1, 2, 3, 4, 6, 7, 8], "integ": 2, "interceptor": [5, 9, 10], "intern": [2, 5], "interv": [], "introduct": 10, "invok": 1, "ipynb": [], "is_regist": [0, 1], "item": [1, 2, 3, 4, 8], "iter": [1, 3, 4], "its": [1, 2, 3, 4, 5, 6, 7, 8], "itself": 2, "join": [3, 4, 5, 6, 7, 8], "just": 1, "k": [], "kei": 1, "kwarg": [1, 3, 6], "label": [0, 2, 5], "lambda": [1, 3, 8], "last": [3, 5, 6, 7], "later": 5, "latter": 7, "layer_budget": 2, "learn": 5, "least": 2, "ledger": 3, "legend": 5, "len": [3, 5, 7], "length": [2, 7], "less": [0, 2], "lgp": [0, 11], "li": 2, "lighter": 5, "lim": [0, 2], "line": [3, 6], "line_count": 2, "linear": 10, "linearcontrol": [0, 1], "linearprogram": [0, 2], "linewidth": 5, "list": [1, 2, 3, 5, 7], "liter": 2, "ll": 9, "lo": [], "local": 3, "loook": 9, "lt": 3, "m": 6, "machineri": [1, 10], "made": 1, "mai": [1, 8], "maintain": [1, 2, 3], "make": 8, "manag": 1, "mani": [5, 6, 8], "manual": [1, 8], "map": 1, "match": [1, 2], "matplotlib": [5, 7], "max": [0, 2], "max_val": 2, "mean": [5, 7], "member": 1, "messag": 4, "metacontrol": 3, "meth": [], "method": [1, 2, 5, 6, 7, 8], "methodtyp": 6, "might": 4, "min": [0, 2], "min_val": 2, "misus": [], "modif": 7, "modifi": [1, 5, 6, 9], "modified_nb": 6, "moduel": [], "modul": [3, 5, 6, 10, 11], "modulenotfounderror": 6, "monitor": 1, "monkei": 6, "more": 2, "most": [3, 6], "much": 2, "mul": [0, 2, 5], "must": [1, 2, 5, 6, 7, 8], "mutat": [2, 4, 7, 9], "mutatebit": [0, 2, 3, 4], "mutatenod": [0, 2], "mutatesubtre": [0, 2], "mutation_r": [2, 3, 4, 7], "my": 6, "my_best": 6, "name": [1, 2, 3, 6, 10], "namedtupl": 1, "nb": 6, "nb_dir": [3, 4, 5, 6, 7, 8], "nb_new": 6, "ndarrai": 2, "necessarili": [], "need": 5, "neither": 1, "never": [1, 5], "new": [1, 2, 3, 4, 5, 6, 7, 8], "new_data": 1, "new_individu": 5, "new_nb": 6, "new_valu": 6, "next": 3, "next_symbol": [], "next_symbol_nam": [], "nobodi": 6, "node": [0, 2, 5], "node_budget": [2, 5], "non": 2, "none": [1, 2, 3, 4, 6, 7], "nor": 1, "normal": 8, "note": [1, 2, 4, 5, 7], "noth": 1, "notic": 4, "novel": 9, "now": [4, 6], "null": 4, "nullari": 2, "nullary_ratio": [2, 5], "nullevalu": [0, 1], "nullselector": [0, 1], "nullvari": [0, 1], "number": [1, 2, 4, 5, 6, 7], "number_step": 3, "numberbox": 6, "numberboxby2": 6, "numbox": 6, "o": [3, 4, 5, 6, 7, 8], "obj_color": 5, "object": [1, 2, 3, 5], "observ": [1, 4, 8], "occupi": 2, "occur": [1, 8], "offspr": [4, 7], "old": 8, "old_pop": 8, "old_valu": 6, "onc": 2, "one": [1, 2, 3, 4, 5, 6, 7], "onemax": 9, "ones": [3, 5, 7, 9], "onli": [2, 3, 4, 5, 7, 8], "onto": 6, "oper": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "operand": 2, "option": 5, "order": [1, 2, 3, 5, 7], "origin": [1, 2, 4, 6, 8], "original_incr": 6, "original_popul": 4, "original_select_to_mani": 6, "other": 1, "otherwis": [1, 2], "out": 2, "output": [1, 2, 4], "output_popul": 4, "outsid": 2, "over": [2, 5], "over_budget": [], "overal": 7, "overrid": [1, 3, 4, 6, 7, 8], "overview": 10, "own": 8, "p": 6, "p2dot": 5, "p2dot_recurs": [], "packag": [10, 11], "page": 10, "parallel": [1, 3], "paramet": [1, 2, 5], "parent": [1, 2, 3, 4, 5, 7, 9], "parent_evalu": [1, 3], "parent_id": [], "parent_selector": [1, 3], "part": 9, "pass": [2, 6], "patch": [5, 6], "path": [3, 4, 5, 6, 7, 8], "pattern": 6, "penalisenodecount": [0, 2], "penalti": 2, "perform": [1, 2], "pick": 5, "pip": 10, "place": 3, "plot": [5, 7], "plot_rang": 5, "plt": [5, 7], "po": [0, 1, 2], "point": [2, 5], "poll_ar": [], "poll_funct": [], "pool": 4, "pop": [1, 3, 4, 5, 8], "pop_siz": 5, "popul": [0, 3, 4, 5, 6, 8, 10, 11], "population_best": 6, "population_s": [3, 7], "posit": [1, 2], "post_evalu": 3, "post_select": 3, "post_vari": 3, "pre": 8, "pre_": 3, "preserv": 1, "prevent": 4, "primit": [2, 5], "primitive_by_ar": [0, 2], "primitive_pool": 2, "print": [3, 4, 5, 6, 7, 8], "probabl": [1, 2, 4, 5], "problem": 9, "process": [1, 4, 5], "produc": [1, 5], "progf": 5, "program": [0, 2, 5, 9], "programaritymismatcherror": [], "programcrossovervari": [], "programfactori": [0, 2, 5], "properti": [1, 2], "provid": 8, "pselector": [], "pubkei": 6, "publish": [0, 1, 3], "put": [4, 9], "py": 3, "pyplot": [5, 7], "python": 2, "r": 1, "rais": [1, 2, 3, 4, 7], "random": [0, 2, 3, 4, 7], "randombitmut": 7, "randomli": [2, 4, 5, 6], "rang": [2, 3, 4, 5, 7, 8], "ranker": 1, "rate": 7, "rather": 2, "re": 1, "read": 1, "rearrang": 1, "receiv": 9, "recent": [3, 6], "record": 3, "recurs": 2, "red": 5, "ref": 7, "refer": 4, "reg_length": 2, "regist": [0, 1, 2, 3], "regress": [2, 9], "relat": 5, "rememb": 7, "remov": [1, 4, 8], "repeat": 3, "repeatedli": [1, 8], "replac": [2, 4, 6, 9], "report": 1, "repres": [5, 9], "represent": [1, 2, 4, 5, 8, 9], "represnet": 9, "requir": [1, 8], "research": 3, "reset": 1, "reset_fit": [0, 1], "resolv": 2, "respect": [1, 2, 7], "result": [1, 2, 4, 6], "retain": [1, 7], "retain_fit": [0, 1], "return": [1, 2, 3, 5, 6, 7, 8], "reward": 2, "right": [], "run": [0, 1, 2, 4], "run_instruct": [0, 2], "runner": [0, 2], "runtim": 9, "s1": [2, 7], "same": 2, "sampl": 1, "scope": 1, "score": [1, 4, 6], "score_wrapp": [], "search": 10, "section": 7, "see": [1, 2], "seed": [3, 4], "sel": [1, 4, 6], "select": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "select_to_mani": [0, 1, 6, 8], "select_to_popul": [0, 1, 3, 4, 8], "selected_item": 8, "selected_solut": 8, "selector": [0, 3, 4, 5, 6, 7, 9, 10, 11], "self": [1, 2, 3, 4, 6, 7, 8], "separ": 6, "sequenc": [1, 2, 5, 7], "set": [0, 1, 2, 4, 5, 7, 8], "setattr": 6, "shape": 1, "share": [6, 8], "should": [1, 3, 7, 8], "show": [5, 7], "shown": 4, "shuffl": 2, "signatur": [1, 6], "significantli": 7, "simpl": [1, 3, 5, 6, 8], "simplelinearcontrol": [0, 1, 3, 5, 7], "simpleselector": [0, 1, 3, 4, 5, 7], "simpli": 4, "sin": [0, 2, 5], "sinc": 7, "singl": 8, "size": [1, 2, 4, 5, 7], "smaller": 2, "so": [1, 2, 4, 5, 6, 7], "solut": 1, "someth": 8, "sort": [0, 1, 8], "sourc": [1, 2, 10], "specif": 2, "ssh": 6, "start": 10, "static": [1, 2], "staticmethod": 7, "statist": 9, "step": [0, 1, 3, 4, 5, 7], "step_count": 5, "still": 2, "stock": [], "storag": 2, "store": 7, "str": [1, 2, 3, 5, 6, 7, 8], "strategi": [1, 8], "strict": [4, 8], "strikeout": 6, "string": [2, 4, 7, 8], "structnextlin": [0, 2], "structoverlin": [0, 2], "structuntillabel": [0, 2], "structur": [1, 2], "sub": [0, 2, 5], "subclass": 1, "subject": [0, 1, 3], "submodul": [0, 11], "subnod": 2, "subpackag": 11, "subpopul": 10, "subscrib": 1, "subscript": 5, "subsequ": 7, "subset": [4, 8], "subtre": 2, "successfulli": 5, "suit": 10, "suject": [], "sum": 7, "super": 8, "suppli": 2, "support": [2, 5], "suppos": 6, "sure": [], "survivor": [1, 4, 9], "survivor_evalu": [1, 3], "survivor_selector": [1, 3], "swap_children": [], "sy": [3, 4, 5, 6, 7, 8], "symbol": [0, 2, 9], "symbolic_fit": 5, "symbolicevalu": [0, 2, 5], "t": [1, 2, 3, 5], "take": [1, 3, 4, 6, 7], "taken": [3, 6], "tan": [0, 2], "target": [0, 2], "term": [], "termin": [2, 5], "than": 2, "thatar": 7, "thei": 2, "them": [1, 7], "therefor": 5, "thi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "thing": 8, "third": 4, "three": 8, "time": [1, 4], "titl": [5, 7], "todo": [1, 2, 3, 7], "togeth": [4, 5, 9], "too": 2, "total": [2, 5], "tournament": [1, 5], "tournament_selector": 5, "tournamentselector": [0, 1, 5], "traceback": [3, 6], "train": [5, 7], "tree": [2, 5], "tree_depth": 5, "trigger": [1, 3], "true": [1, 2], "try": 4, "tupl": [1, 2, 5, 6, 7, 8], "turn": 5, "tutori": [7, 10], "two": [5, 10], "type": [1, 4, 5, 6, 7, 8], "typeerror": [1, 2, 3], "typevar": 6, "typic": 8, "uber_secret_best_individual_nam": 6, "unari": [5, 9], "unary_weight": [], "understand": 3, "uniform": 1, "uniformli": [2, 7], "unlik": 4, "unregist": 3, "unset": [], "until": 8, "updat": [0, 1, 3, 7], "us": [1, 2, 4, 5, 6, 7, 8, 9, 10], "user": [7, 9], "util": 5, "val": [], "valu": [0, 1, 2, 3, 5, 6, 7], "valueerror": [1, 2, 3, 4, 7], "valuerang": [0, 2], "vari": [0, 1, 2, 3, 7], "variat": [0, 2, 3, 4, 5, 9, 11], "vary_popul": [0, 1, 3, 4], "veri": [1, 3], "verifi": 8, "view": 2, "visualis": 5, "wai": [1, 3, 6, 8], "wari": [], "we": [], "weird_funct": 5, "what": [3, 6], "when": [1, 4, 5], "where": [2, 5, 8], "wherea": 5, "whether": 1, "which": [1, 2, 4, 5, 6, 7], "while": [0, 2], "whose": [1, 2, 4, 5], "wider": 5, "wit": 1, "within": 7, "without": [2, 6], "work": [], "workspac": 3, "would": 6, "wrap": 6, "wrap_funct": 6, "wrap_step": 3, "wrapper": [3, 6], "write": [1, 9], "x": [2, 3, 5, 7, 8], "x0": 5, "xlabel": [5, 7], "y": [2, 5], "yet": 4, "ylabel": [5, 7]}, "titles": ["evokit package", "evokit.core package", "evokit.evolvables package", "Accountant", "Controller Example", "Example: Symbolic Regression", "Example: Implementing a Interceptor", "OneMax Example", "Selector Example", "Introduction", "EvoKit Documentation", "evokit"], "titleterms": {"The": [], "account": [1, 3], "advanc": 9, "algorithm": 7, "analys": 7, "binstr": 2, "content": [0, 1, 2, 9, 10], "control": [1, 4], "core": 1, "defin": 7, "document": 10, "evalu": [1, 7], "everyth": 7, "evokit": [0, 1, 2, 10, 11], "evolv": 2, "exampl": [4, 5, 6, 7, 8], "func": 2, "genom": [], "get": 9, "gp": 2, "gp_visualis": 2, "implement": 6, "indic": 10, "initialis": 7, "instal": 10, "interceptor": 6, "introduct": 9, "lgp": 2, "modul": [0, 1, 2], "onemax": 7, "packag": [0, 1, 2], "popul": [1, 7], "put": 7, "regress": 5, "represent": 7, "result": 7, "run": 7, "section": [], "selector": [1, 8], "start": 9, "stock": [], "submodul": [1, 2], "subpackag": 0, "suit": [], "symbol": 5, "tabl": 10, "titl": [], "togeth": 7, "tutori": 9, "variat": [1, 7]}})